{
  "version": 3,
  "sources": ["../../node_modules/toastify-js/src/toastify.js", "../../node_modules/plyr/dist/plyr.js", "../../node_modules/plyr/dist/node_modules/.pnpm/rangetouch@2.0.1/node_modules/rangetouch/dist/rangetouch.mjs", "../../node_modules/plyr/dist/src/js/utils/is.js", "../../node_modules/plyr/dist/src/js/utils/animation.js", "../../node_modules/plyr/dist/src/js/utils/browser.js", "../../node_modules/plyr/dist/src/js/utils/objects.js", "../../node_modules/plyr/dist/src/js/utils/elements.js", "../../node_modules/plyr/dist/src/js/support.js", "../../node_modules/plyr/dist/src/js/utils/events.js", "../../node_modules/plyr/dist/src/js/utils/promise.js", "../../node_modules/plyr/dist/src/js/utils/arrays.js", "../../node_modules/plyr/dist/src/js/utils/style.js", "../../node_modules/plyr/dist/src/js/html5.js", "../../node_modules/plyr/dist/src/js/utils/strings.js", "../../node_modules/plyr/dist/src/js/utils/i18n.js", "../../node_modules/plyr/dist/src/js/storage.js", "../../node_modules/plyr/dist/src/js/utils/fetch.js", "../../node_modules/plyr/dist/src/js/utils/load-sprite.js", "../../node_modules/plyr/dist/src/js/utils/time.js", "../../node_modules/plyr/dist/src/js/controls.js", "../../node_modules/plyr/dist/src/js/utils/urls.js", "../../node_modules/plyr/dist/src/js/captions.js", "../../node_modules/plyr/dist/src/js/config/defaults.js", "../../node_modules/plyr/dist/src/js/config/states.js", "../../node_modules/plyr/dist/src/js/config/types.js", "../../node_modules/plyr/dist/src/js/console.js", "../../node_modules/plyr/dist/src/js/fullscreen.js", "../../node_modules/plyr/dist/src/js/utils/load-image.js", "../../node_modules/plyr/dist/src/js/ui.js", "../../node_modules/plyr/dist/src/js/listeners.js", "../../node_modules/plyr/dist/node_modules/.pnpm/loadjs@4.2.0/node_modules/loadjs/dist/loadjs.umd.js", "../../node_modules/plyr/dist/src/js/utils/load-script.js", "../../node_modules/plyr/dist/src/js/plugins/vimeo.js", "../../node_modules/plyr/dist/src/js/plugins/youtube.js", "../../node_modules/plyr/dist/src/js/media.js", "../../node_modules/plyr/dist/src/js/plugins/ads.js", "../../node_modules/plyr/dist/src/js/utils/numbers.js", "../../node_modules/plyr/dist/src/js/plugins/preview-thumbnails.js", "../../node_modules/plyr/dist/src/js/source.js", "../../node_modules/plyr/dist/src/js/plyr.js", "../../src/js/util/util.js", "../../src/js/util/dom-events.js", "../../src/js/util/viewport-size.js", "../../src/js/slide/pan-bounds.js", "../../src/js/slide/zoom-level.js", "../../src/js/slide/slide.js", "../../src/js/gestures/drag-handler.js", "../../src/js/gestures/zoom-handler.js", "../../src/js/gestures/tap-handler.js", "../../src/js/gestures/gestures.js", "../../src/js/main-scroll.js", "../../src/js/keyboard.js", "../../src/js/util/css-animation.js", "../../src/js/util/spring-easer.js", "../../src/js/util/spring-animation.js", "../../src/js/util/animations.js", "../../src/js/scroll-wheel.js", "../../src/js/ui/ui-element.js", "../../src/js/ui/button-arrow.js", "../../src/js/ui/button-close.js", "../../src/js/ui/button-zoom.js", "../../src/js/ui/loading-indicator.js", "../../src/js/ui/counter-indicator.js", "../../src/js/ui/ui.js", "../../src/js/slide/get-thumb-bounds.js", "../../src/js/core/eventable.js", "../../src/js/slide/placeholder.js", "../../src/js/slide/content.js", "../../src/js/slide/loader.js", "../../src/js/core/base.js", "../../src/js/opener.js", "../../src/js/photoswipe.js", "../modules/call-popup.js", "../modules/about.js", "../modules/front-page.js", "../modules/menu.js", "../modules/blog-cart.js", "../modules/blogs.js", "../modules/quick-access.js", "../modules/single-service.js", "../modules/toastify.js", "../modules/contact.js", "../modules/testimonial.js", "../modules/mobile-category-list.js", "../modules/ticker.js", "../modules/plyr.js", "../libs/photoswipe-lightbox.esm.min.js", "../modules/image-opener.js", "../index.js"],
  "sourcesContent": ["/*!\n * Toastify js 1.12.0\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function(root, factory) {\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function(global) {\n  // Object initialization\n  var Toastify = function(options) {\n      // Returning a new init object\n      return new Toastify.lib.init(options);\n    },\n    // Library version\n    version = \"1.12.0\";\n\n  // Set the default global options\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {\n    },\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {\n    },\n    offset: {x: 0, y: 0},\n    escapeMarkup: true,\n    ariaLive: 'polite',\n    style: {background: ''}\n  };\n\n  // Defining the prototype of the object\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n\n    constructor: Toastify,\n\n    // Initializing the object with required parameters\n    init: function(options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      }\n\n      // Creating the options object\n      this.options = {};\n\n      this.toastElement = null;\n\n      // Validating the options\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n      this.options.node = options.node || Toastify.defaults.node;  // Display content as node\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.ariaLive = options.ariaLive || Toastify.defaults.ariaLive;\n      this.options.style = options.style || Toastify.defaults.style;\n      if(options.backgroundColor) {\n        this.options.style.background = options.backgroundColor;\n      }\n\n      // Returning the current object for chaining functions\n      return this;\n    },\n\n    // Building the DOM element\n    buildToast: function() {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      }\n\n      // Creating the DOM object\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className;\n\n      // Positioning toast to left or right or center\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      }\n\n      // Assigning gravity of element\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      }\n\n      // Loop through our style object and apply styles to divElement\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      }\n\n      // Announce the toast to screen readers\n      if (this.options.ariaLive) {\n        divElement.setAttribute('aria-live', this.options.ariaLive)\n      }\n\n      // Adding the toast message/node\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node)\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      }\n\n      // Adding a close icon to the toast\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"button\");\n        closeElement.type = \"button\";\n        closeElement.setAttribute(\"aria-label\", \"Close\");\n        closeElement.className = \"toast-close\";\n        closeElement.innerHTML = \"&#10006;\";\n\n        // Triggering the removal of toast from DOM on close click\n        closeElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.removeElement(this.toastElement);\n            window.clearTimeout(this.toastElement.timeOutValue);\n          }.bind(this)\n        );\n\n        //Calculating screen width\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n        // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      }\n\n      // Clear timeout while toast is focused\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this;\n        // stop countdown\n        divElement.addEventListener(\n          \"mouseover\",\n          function(event) {\n            window.clearTimeout(divElement.timeOutValue);\n          }\n        )\n        // add back the timeout\n        divElement.addEventListener(\n          \"mouseleave\",\n          function() {\n            divElement.timeOutValue = window.setTimeout(\n              function() {\n                // Remove the toast from DOM\n                self.removeElement(divElement);\n              },\n              self.options.duration\n            )\n          }\n        )\n      }\n\n      // Adding an on-click destination path\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            if (this.options.newWindow === true) {\n              window.open(this.options.destination, \"_blank\");\n            } else {\n              window.location = this.options.destination;\n            }\n          }.bind(this)\n        );\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.options.onClick();\n          }.bind(this)\n        );\n      }\n\n      // Adding offset\n      if(typeof this.options.offset === \"object\") {\n\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n\n      }\n\n      // Returning the generated element\n      return divElement;\n    },\n\n    // Displaying the toast\n    showToast: function() {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast();\n\n      // Getting the root element to with the toast needs to be added\n      var rootElement;\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || (typeof ShadowRoot !== 'undefined' && this.options.selector instanceof ShadowRoot)) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      }\n\n      // Validating if root element is present in DOM\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      }\n\n      // Adding the DOM element\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert);\n\n      // Repositioning the toasts in case multiple toasts are present\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(\n          function() {\n            // Remove the toast from DOM\n            this.removeElement(this.toastElement);\n          }.bind(this),\n          this.options.duration\n        ); // Binding `this` for function invocation\n      }\n\n      // Supporting function chaining\n      return this;\n    },\n\n    hideToast: function() {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n      this.removeElement(this.toastElement);\n    },\n\n    // Removing the element from the DOM\n    removeElement: function(toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\");\n\n      // Removing the element from DOM after transition end\n      window.setTimeout(\n        function() {\n          // remove options node if any\n          if (this.options.node && this.options.node.parentNode) {\n            this.options.node.parentNode.removeChild(this.options.node);\n          }\n\n          // Remove the element from the DOM, only when the parent node was not removed before.\n          if (toastElement.parentNode) {\n            toastElement.parentNode.removeChild(toastElement);\n          }\n\n          // Calling the callback function\n          this.options.callback.call(toastElement);\n\n          // Repositioning the toasts again\n          Toastify.reposition();\n        }.bind(this),\n        400\n      ); // Binding `this` for function invocation\n    },\n  };\n\n  // Positioning the toasts on the DOM\n  Toastify.reposition = function() {\n\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n\n    // Get all toast messages on the DOM\n    var allToasts = document.getElementsByClassName(\"toastify\");\n\n    var classUsed;\n\n    // Modifying the position of each toast element\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length-1)\n      // Spacing between toasts\n      var offset = 15;\n\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n      // Show toast in center if screen with less than or equal to 360px\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    }\n\n    // Supporting function chaining\n    return this;\n  };\n\n  // Helper function to get offset.\n  function getAxisOffsetAValue(axis, options) {\n\n    if(options.offset[axis]) {\n      if(isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      }\n      else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (\n      elem.className &&\n      elem.className\n        .trim()\n        .split(/\\s+/gi)\n        .indexOf(yourClass) > -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Setting up the prototype for the init object\n  Toastify.lib.init.prototype = Toastify.lib;\n\n  // Returning the Toastify function to be assigned to the window object/module\n  return Toastify;\n});\n", "typeof navigator === \"object\" && (function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define('Plyr', factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Plyr = factory());\n})(this, (function () { 'use strict';\n\n  function _defineProperty$1(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  function _classCallCheck(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function _defineProperties(e, t) {\n    for (var n = 0; n < t.length; n++) {\n      var r = t[n];\n      r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n    }\n  }\n  function _createClass(e, t, n) {\n    return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e;\n  }\n  function _defineProperty(e, t, n) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: n,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = n, e;\n  }\n  function ownKeys(e, t) {\n    var n = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n      var r = Object.getOwnPropertySymbols(e);\n      t && (r = r.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), n.push.apply(n, r);\n    }\n    return n;\n  }\n  function _objectSpread2(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? ownKeys(Object(n), !0).forEach(function (t) {\n        _defineProperty(e, t, n[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys(Object(n)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n      });\n    }\n    return e;\n  }\n  var defaults$1 = {\n    addCSS: !0,\n    thumbWidth: 15,\n    watch: !0\n  };\n  function matches$1(e, t) {\n    return function () {\n      return Array.from(document.querySelectorAll(t)).includes(this);\n    }.call(e, t);\n  }\n  function trigger(e, t) {\n    if (e && t) {\n      var n = new Event(t, {\n        bubbles: !0\n      });\n      e.dispatchEvent(n);\n    }\n  }\n  var getConstructor$1 = function (e) {\n      return null != e ? e.constructor : null;\n    },\n    instanceOf$1 = function (e, t) {\n      return !!(e && t && e instanceof t);\n    },\n    isNullOrUndefined$1 = function (e) {\n      return null == e;\n    },\n    isObject$1 = function (e) {\n      return getConstructor$1(e) === Object;\n    },\n    isNumber$1 = function (e) {\n      return getConstructor$1(e) === Number && !Number.isNaN(e);\n    },\n    isString$1 = function (e) {\n      return getConstructor$1(e) === String;\n    },\n    isBoolean$1 = function (e) {\n      return getConstructor$1(e) === Boolean;\n    },\n    isFunction$1 = function (e) {\n      return getConstructor$1(e) === Function;\n    },\n    isArray$1 = function (e) {\n      return Array.isArray(e);\n    },\n    isNodeList$1 = function (e) {\n      return instanceOf$1(e, NodeList);\n    },\n    isElement$1 = function (e) {\n      return instanceOf$1(e, Element);\n    },\n    isEvent$1 = function (e) {\n      return instanceOf$1(e, Event);\n    },\n    isEmpty$1 = function (e) {\n      return isNullOrUndefined$1(e) || (isString$1(e) || isArray$1(e) || isNodeList$1(e)) && !e.length || isObject$1(e) && !Object.keys(e).length;\n    },\n    is$1 = {\n      nullOrUndefined: isNullOrUndefined$1,\n      object: isObject$1,\n      number: isNumber$1,\n      string: isString$1,\n      boolean: isBoolean$1,\n      function: isFunction$1,\n      array: isArray$1,\n      nodeList: isNodeList$1,\n      element: isElement$1,\n      event: isEvent$1,\n      empty: isEmpty$1\n    };\n  function getDecimalPlaces(e) {\n    var t = \"\".concat(e).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0;\n  }\n  function round(e, t) {\n    if (1 > t) {\n      var n = getDecimalPlaces(t);\n      return parseFloat(e.toFixed(n));\n    }\n    return Math.round(e / t) * t;\n  }\n  var RangeTouch = function () {\n    function e(t, n) {\n      _classCallCheck(this, e), is$1.element(t) ? this.element = t : is$1.string(t) && (this.element = document.querySelector(t)), is$1.element(this.element) && is$1.empty(this.element.rangeTouch) && (this.config = _objectSpread2({}, defaults$1, {}, n), this.init());\n    }\n    return _createClass(e, [{\n      key: \"init\",\n      value: function () {\n        e.enabled && (this.config.addCSS && (this.element.style.userSelect = \"none\", this.element.style.webKitUserSelect = \"none\", this.element.style.touchAction = \"manipulation\"), this.listeners(!0), this.element.rangeTouch = this);\n      }\n    }, {\n      key: \"destroy\",\n      value: function () {\n        e.enabled && (this.config.addCSS && (this.element.style.userSelect = \"\", this.element.style.webKitUserSelect = \"\", this.element.style.touchAction = \"\"), this.listeners(!1), this.element.rangeTouch = null);\n      }\n    }, {\n      key: \"listeners\",\n      value: function (e) {\n        var t = this,\n          n = e ? \"addEventListener\" : \"removeEventListener\";\n        [\"touchstart\", \"touchmove\", \"touchend\"].forEach(function (e) {\n          t.element[n](e, function (e) {\n            return t.set(e);\n          }, !1);\n        });\n      }\n    }, {\n      key: \"get\",\n      value: function (t) {\n        if (!e.enabled || !is$1.event(t)) return null;\n        var n,\n          r = t.target,\n          i = t.changedTouches[0],\n          o = parseFloat(r.getAttribute(\"min\")) || 0,\n          s = parseFloat(r.getAttribute(\"max\")) || 100,\n          u = parseFloat(r.getAttribute(\"step\")) || 1,\n          c = r.getBoundingClientRect(),\n          a = 100 / c.width * (this.config.thumbWidth / 2) / 100;\n        return 0 > (n = 100 / c.width * (i.clientX - c.left)) ? n = 0 : 100 < n && (n = 100), 50 > n ? n -= (100 - 2 * n) * a : 50 < n && (n += 2 * (n - 50) * a), o + round(n / 100 * (s - o), u);\n      }\n    }, {\n      key: \"set\",\n      value: function (t) {\n        e.enabled && is$1.event(t) && !t.target.disabled && (t.preventDefault(), t.target.value = this.get(t), trigger(t.target, \"touchend\" === t.type ? \"change\" : \"input\"));\n      }\n    }], [{\n      key: \"setup\",\n      value: function (t) {\n        var n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},\n          r = null;\n        if (is$1.empty(t) || is$1.string(t) ? r = Array.from(document.querySelectorAll(is$1.string(t) ? t : 'input[type=\"range\"]')) : is$1.element(t) ? r = [t] : is$1.nodeList(t) ? r = Array.from(t) : is$1.array(t) && (r = t.filter(is$1.element)), is$1.empty(r)) return null;\n        var i = _objectSpread2({}, defaults$1, {}, n);\n        if (is$1.string(t) && i.watch) {\n          var o = new MutationObserver(function (n) {\n            Array.from(n).forEach(function (n) {\n              Array.from(n.addedNodes).forEach(function (n) {\n                is$1.element(n) && matches$1(n, t) && new e(n, i);\n              });\n            });\n          });\n          o.observe(document.body, {\n            childList: !0,\n            subtree: !0\n          });\n        }\n        return r.map(function (t) {\n          return new e(t, n);\n        });\n      }\n    }, {\n      key: \"enabled\",\n      get: function () {\n        return \"ontouchstart\" in document.documentElement;\n      }\n    }]), e;\n  }();\n\n  // ==========================================================================\n  // Type checking utils\n  // ==========================================================================\n\n  const getConstructor = input => input !== null && typeof input !== 'undefined' ? input.constructor : null;\n  const instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\n  const isNullOrUndefined = input => input === null || typeof input === 'undefined';\n  const isObject = input => getConstructor(input) === Object;\n  const isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\n  const isString = input => getConstructor(input) === String;\n  const isBoolean = input => getConstructor(input) === Boolean;\n  const isFunction = input => typeof input === 'function';\n  const isArray = input => Array.isArray(input);\n  const isWeakMap = input => instanceOf(input, WeakMap);\n  const isNodeList = input => instanceOf(input, NodeList);\n  const isTextNode = input => getConstructor(input) === Text;\n  const isEvent = input => instanceOf(input, Event);\n  const isKeyboardEvent = input => instanceOf(input, KeyboardEvent);\n  const isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\n  const isTrack = input => instanceOf(input, TextTrack) || !isNullOrUndefined(input) && isString(input.kind);\n  const isPromise = input => instanceOf(input, Promise) && isFunction(input.then);\n  const isElement = input => input !== null && typeof input === 'object' && input.nodeType === 1 && typeof input.style === 'object' && typeof input.ownerDocument === 'object';\n  const isEmpty = input => isNullOrUndefined(input) || (isString(input) || isArray(input) || isNodeList(input)) && !input.length || isObject(input) && !Object.keys(input).length;\n  const isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n      return true;\n    }\n\n    // Must be string from here\n    if (!isString(input)) {\n      return false;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n      string = `http://${input}`;\n    }\n    try {\n      return !isEmpty(new URL(string).hostname);\n    } catch (_) {\n      return false;\n    }\n  };\n  var is = {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    keyboardEvent: isKeyboardEvent,\n    cue: isCue,\n    track: isTrack,\n    promise: isPromise,\n    url: isUrl,\n    empty: isEmpty\n  };\n\n  // ==========================================================================\n  const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n    const events = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend'\n    };\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n    return is.string(type) ? events[type] : false;\n  })();\n\n  // Force repaint of element\n  function repaint(element, delay) {\n    setTimeout(() => {\n      try {\n        // eslint-disable-next-line no-param-reassign\n        element.hidden = true;\n\n        // eslint-disable-next-line no-unused-expressions\n        element.offsetHeight;\n\n        // eslint-disable-next-line no-param-reassign\n        element.hidden = false;\n      } catch (_) {\n        // Do nothing\n      }\n    }, delay);\n  }\n\n  // ==========================================================================\n  // Browser sniffing\n  // Unfortunately, due to mixed support, UA sniffing is required\n  // ==========================================================================\n\n  const isIE = Boolean(window.document.documentMode);\n  const isEdge = /Edge/g.test(navigator.userAgent);\n  const isWebKit = 'WebkitAppearance' in document.documentElement.style && !/Edge/g.test(navigator.userAgent);\n  const isIPhone = /iPhone|iPod/gi.test(navigator.userAgent) && navigator.maxTouchPoints > 1;\n  // navigator.platform may be deprecated but this check is still required\n  const isIPadOS = navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n  const isIos = /iPad|iPhone|iPod/gi.test(navigator.userAgent) && navigator.maxTouchPoints > 1;\n  var browser = {\n    isIE,\n    isEdge,\n    isWebKit,\n    isIPhone,\n    isIPadOS,\n    isIos\n  };\n\n  // ==========================================================================\n\n  // Clone nested objects\n  function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  // Get a nested value in an object\n  function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n  }\n\n  // Deep extend destination object with N more objects\n  function extend(target = {}, ...sources) {\n    if (!sources.length) {\n      return target;\n    }\n    const source = sources.shift();\n    if (!is.object(source)) {\n      return target;\n    }\n    Object.keys(source).forEach(key => {\n      if (is.object(source[key])) {\n        if (!Object.keys(target).includes(key)) {\n          Object.assign(target, {\n            [key]: {}\n          });\n        }\n        extend(target[key], source[key]);\n      } else {\n        Object.assign(target, {\n          [key]: source[key]\n        });\n      }\n    });\n    return extend(target, ...sources);\n  }\n\n  // ==========================================================================\n\n  // Wrap an element\n  function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets).reverse().forEach((element, index) => {\n      const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n      // Cache the current parent and sibling.\n      const parent = element.parentNode;\n      const sibling = element.nextSibling;\n\n      // Wrap the element (is automatically removed from its current\n      // parent).\n      child.appendChild(element);\n\n      // If the element had a sibling, insert the wrapper before\n      // the sibling to maintain the HTML structure; otherwise, just\n      // append it to the parent.\n      if (sibling) {\n        parent.insertBefore(child, sibling);\n      } else {\n        parent.appendChild(child);\n      }\n    });\n  }\n\n  // Set attributes\n  function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) return;\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes).filter(([, value]) => !is.nullOrUndefined(value)).forEach(([key, value]) => element.setAttribute(key, value));\n  }\n\n  // Create a DocumentFragment\n  function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n      setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n      element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n  }\n\n  // Insert an element after another\n  function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) return;\n    target.parentNode.insertBefore(element, target.nextSibling);\n  }\n\n  // Insert a DocumentFragment\n  function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) return;\n    parent.appendChild(createElement(type, attributes, text));\n  }\n\n  // Remove element(s)\n  function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n      Array.from(element).forEach(removeElement);\n      return;\n    }\n    if (!is.element(element) || !is.element(element.parentNode)) {\n      return;\n    }\n    element.parentNode.removeChild(element);\n  }\n\n  // Remove all child elements\n  function emptyElement(element) {\n    if (!is.element(element)) return;\n    let {\n      length\n    } = element.childNodes;\n    while (length > 0) {\n      element.removeChild(element.lastChild);\n      length -= 1;\n    }\n  }\n\n  // Replace element\n  function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) return null;\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n    return newChild;\n  }\n\n  // Get an attribute object from a string selector\n  function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) return {};\n    const attributes = {};\n    const existing = extend({}, existingAttributes);\n    sel.split(',').forEach(s => {\n      // Remove whitespace\n      const selector = s.trim();\n      const className = selector.replace('.', '');\n      const stripped = selector.replace(/[[\\]]/g, '');\n      // Get the parts and value\n      const parts = stripped.split('=');\n      const [key] = parts;\n      const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n      // Get the first character\n      const start = selector.charAt(0);\n      switch (start) {\n        case '.':\n          // Add to existing classname\n          if (is.string(existing.class)) {\n            attributes.class = `${existing.class} ${className}`;\n          } else {\n            attributes.class = className;\n          }\n          break;\n        case '#':\n          // ID selector\n          attributes.id = selector.replace('#', '');\n          break;\n        case '[':\n          // Attribute selector\n          attributes[key] = value;\n          break;\n      }\n    });\n    return extend(existing, attributes);\n  }\n\n  // Toggle hidden\n  function toggleHidden(element, hidden) {\n    if (!is.element(element)) return;\n    let hide = hidden;\n    if (!is.boolean(hide)) {\n      hide = !element.hidden;\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    element.hidden = hide;\n  }\n\n  // Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\n  function toggleClass(element, className, force) {\n    if (is.nodeList(element)) {\n      return Array.from(element).map(e => toggleClass(e, className, force));\n    }\n    if (is.element(element)) {\n      let method = 'toggle';\n      if (typeof force !== 'undefined') {\n        method = force ? 'add' : 'remove';\n      }\n      element.classList[method](className);\n      return element.classList.contains(className);\n    }\n    return false;\n  }\n\n  // Has class name\n  function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n  }\n\n  // Element matches selector\n  function matches(element, selector) {\n    const {\n      prototype\n    } = Element;\n    function match() {\n      return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n    const method = prototype.matches || prototype.webkitMatchesSelector || prototype.mozMatchesSelector || prototype.msMatchesSelector || match;\n    return method.call(element, selector);\n  }\n\n  // Closest ancestor element matching selector (also tests element itself)\n  function closest$1(element, selector) {\n    const {\n      prototype\n    } = Element;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n    function closestElement() {\n      let el = this;\n      do {\n        if (matches.matches(el, selector)) return el;\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n      return null;\n    }\n    const method = prototype.closest || closestElement;\n    return method.call(element, selector);\n  }\n\n  // Find all elements\n  function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n  }\n\n  // Find a single element\n  function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n  }\n\n  // Set focus and tab focus class\n  function setFocus(element = null, focusVisible = false) {\n    if (!is.element(element)) return;\n\n    // Set regular focus\n    element.focus({\n      preventScroll: true,\n      focusVisible\n    });\n  }\n\n  // ==========================================================================\n\n  // Default codecs for checking mimetype support\n  const defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora'\n  };\n\n  // Check for feature support\n  const support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider) {\n      const api = support[type] || provider !== 'html5';\n      const ui = api && support.rangeInput;\n      return {\n        api,\n        ui\n      };\n    },\n    // Picture-in-picture support\n    // Safari & Chrome only currently\n    pip: (() => {\n      // While iPhone's support picture-in-picture for some apps, seemingly Safari isn't one of them\n      // It will throw the following error when trying to enter picture-in-picture\n      // `NotSupportedError: The Picture-in-Picture mode is not supported.`\n      if (browser.isIPhone) {\n        return false;\n      }\n\n      // Safari\n      // https://developer.apple.com/documentation/webkitjs/adding_picture_in_picture_to_your_safari_media_controls\n      if (is.function(createElement('video').webkitSetPresentationMode)) {\n        return true;\n      }\n\n      // Chrome\n      // https://developers.google.com/web/updates/2018/10/watch-video-using-picture-in-picture\n      if (document.pictureInPictureEnabled && !createElement('video').disablePictureInPicture) {\n        return true;\n      }\n      return false;\n    })(),\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(input) {\n      if (is.empty(input)) {\n        return false;\n      }\n      const [mediaType] = input.split('/');\n      let type = input;\n\n      // Verify we're using HTML5 and there's no media type mismatch\n      if (!this.isHTML5 || mediaType !== this.type) {\n        return false;\n      }\n\n      // Add codec if required\n      if (Object.keys(defaultCodecs).includes(type)) {\n        type += `; codecs=\"${defaultCodecs[input]}\"`;\n      }\n      try {\n        return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n      } catch (_) {\n        return false;\n      }\n    },\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n      const range = document.createElement('input');\n      range.type = 'range';\n      return range.type === 'range';\n    })(),\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches\n  };\n\n  // ==========================================================================\n\n  // Check for passive event listener support\n  // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n  // https://www.youtube.com/watch?v=NPM6172J22g\n  const supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n      const options = Object.defineProperty({}, 'passive', {\n        get() {\n          supported = true;\n          return null;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (_) {\n      // Do nothing\n    }\n    return supported;\n  })();\n\n  // Toggle event listener\n  function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n      return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n      options = {\n        // Whether the listener can be passive (i.e. default never prevented)\n        passive,\n        // Whether the listener is a capturing listener or not\n        capture\n      };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n      if (this && this.eventListeners && toggle) {\n        // Cache event listener\n        this.eventListeners.push({\n          element,\n          type,\n          callback,\n          options\n        });\n      }\n      element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n  }\n\n  // Bind event handler\n  function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n  }\n\n  // Unbind event handler\n  function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n  }\n\n  // Bind once-only event handler\n  function once(element, events = '', callback, passive = true, capture = false) {\n    const onceCallback = (...args) => {\n      off(element, events, onceCallback, passive, capture);\n      callback.apply(this, args);\n    };\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n  }\n\n  // Trigger event\n  function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n      return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n      bubbles,\n      detail: {\n        ...detail,\n        plyr: this\n      }\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n  }\n\n  // Unbind all cached event listeners\n  function unbindListeners() {\n    if (this && this.eventListeners) {\n      this.eventListeners.forEach(item => {\n        const {\n          element,\n          type,\n          callback,\n          options\n        } = item;\n        element.removeEventListener(type, callback, options);\n      });\n      this.eventListeners = [];\n    }\n  }\n\n  // Run method when / if player is ready\n  function ready() {\n    return new Promise(resolve => this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)).then(() => {});\n  }\n\n  /**\n   * Silence a Promise-like object.\n   * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n   * play promise\" rejection error messages.\n   * @param  {Object} value An object that may or may not be `Promise`-like.\n   */\n  function silencePromise(value) {\n    if (is.promise(value)) {\n      value.then(null, () => {});\n    }\n  }\n\n  // ==========================================================================\n\n  // Remove duplicates in an array\n  function dedupe(array) {\n    if (!is.array(array)) {\n      return array;\n    }\n    return array.filter((item, index) => array.indexOf(item) === index);\n  }\n\n  // Get the closest value in an array\n  function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n      return null;\n    }\n    return array.reduce((prev, curr) => Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev);\n  }\n\n  // ==========================================================================\n\n  // Check support for a CSS declaration\n  function supportsCSS(declaration) {\n    if (!window || !window.CSS) {\n      return false;\n    }\n    return window.CSS.supports(declaration);\n  }\n\n  // Standard/common aspect ratios\n  const standardRatios = [[1, 1], [4, 3], [3, 4], [5, 4], [4, 5], [3, 2], [2, 3], [16, 10], [10, 16], [16, 9], [9, 16], [21, 9], [9, 21], [32, 9], [9, 32]].reduce((out, [x, y]) => ({\n    ...out,\n    [x / y]: [x, y]\n  }), {});\n\n  // Validate an aspect ratio\n  function validateAspectRatio(input) {\n    if (!is.array(input) && (!is.string(input) || !input.includes(':'))) {\n      return false;\n    }\n    const ratio = is.array(input) ? input : input.split(':');\n    return ratio.map(Number).every(is.number);\n  }\n\n  // Reduce an aspect ratio to it's lowest form\n  function reduceAspectRatio(ratio) {\n    if (!is.array(ratio) || !ratio.every(is.number)) {\n      return null;\n    }\n    const [width, height] = ratio;\n    const getDivider = (w, h) => h === 0 ? w : getDivider(h, w % h);\n    const divider = getDivider(width, height);\n    return [width / divider, height / divider];\n  }\n\n  // Calculate an aspect ratio\n  function getAspectRatio(input) {\n    const parse = ratio => validateAspectRatio(ratio) ? ratio.split(':').map(Number) : null;\n    // Try provided ratio\n    let ratio = parse(input);\n\n    // Get from config\n    if (ratio === null) {\n      ratio = parse(this.config.ratio);\n    }\n\n    // Get from embed\n    if (ratio === null && !is.empty(this.embed) && is.array(this.embed.ratio)) {\n      ({\n        ratio\n      } = this.embed);\n    }\n\n    // Get from HTML5 video\n    if (ratio === null && this.isHTML5) {\n      const {\n        videoWidth,\n        videoHeight\n      } = this.media;\n      ratio = [videoWidth, videoHeight];\n    }\n    return reduceAspectRatio(ratio);\n  }\n\n  // Set aspect ratio for responsive container\n  function setAspectRatio(input) {\n    if (!this.isVideo) {\n      return {};\n    }\n    const {\n      wrapper\n    } = this.elements;\n    const ratio = getAspectRatio.call(this, input);\n    if (!is.array(ratio)) {\n      return {};\n    }\n    const [x, y] = reduceAspectRatio(ratio);\n    const useNative = supportsCSS(`aspect-ratio: ${x}/${y}`);\n    const padding = 100 / x * y;\n    if (useNative) {\n      wrapper.style.aspectRatio = `${x}/${y}`;\n    } else {\n      wrapper.style.paddingBottom = `${padding}%`;\n    }\n\n    // For Vimeo we have an extra <div> to hide the standard controls and UI\n    if (this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {\n      const height = 100 / this.media.offsetWidth * parseInt(window.getComputedStyle(this.media).paddingBottom, 10);\n      const offset = (height - padding) / (height / 50);\n      if (this.fullscreen.active) {\n        wrapper.style.paddingBottom = null;\n      } else {\n        this.media.style.transform = `translateY(-${offset}%)`;\n      }\n    } else if (this.isHTML5) {\n      wrapper.classList.add(this.config.classNames.videoFixedRatio);\n    }\n    return {\n      padding,\n      ratio\n    };\n  }\n\n  // Round an aspect ratio to closest standard ratio\n  function roundAspectRatio(x, y, tolerance = 0.05) {\n    const ratio = x / y;\n    const closestRatio = closest(Object.keys(standardRatios), ratio);\n\n    // Check match is within tolerance\n    if (Math.abs(closestRatio - ratio) <= tolerance) {\n      return standardRatios[closestRatio];\n    }\n\n    // No match\n    return [x, y];\n  }\n\n  // Get the size of the viewport\n  // https://stackoverflow.com/questions/1248081/how-to-get-the-browser-viewport-dimensions\n  function getViewportSize() {\n    const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n    return [width, height];\n  }\n\n  // ==========================================================================\n  const html5 = {\n    getSources() {\n      if (!this.isHTML5) {\n        return [];\n      }\n      const sources = Array.from(this.media.querySelectorAll('source'));\n\n      // Filter out unsupported sources (if type is specified)\n      return sources.filter(source => {\n        const type = source.getAttribute('type');\n        if (is.empty(type)) {\n          return true;\n        }\n        return support.mime.call(this, type);\n      });\n    },\n    // Get quality levels\n    getQualityOptions() {\n      // Whether we're forcing all options (e.g. for streaming)\n      if (this.config.quality.forced) {\n        return this.config.quality.options;\n      }\n\n      // Get sizes from <source> elements\n      return html5.getSources.call(this).map(source => Number(source.getAttribute('size'))).filter(Boolean);\n    },\n    setup() {\n      if (!this.isHTML5) {\n        return;\n      }\n      const player = this;\n\n      // Set speed options from config\n      player.options.speed = player.config.speed.options;\n\n      // Set aspect ratio if fixed\n      if (!is.empty(this.config.ratio)) {\n        setAspectRatio.call(player);\n      }\n\n      // Quality\n      Object.defineProperty(player.media, 'quality', {\n        get() {\n          // Get sources\n          const sources = html5.getSources.call(player);\n          const source = sources.find(s => s.getAttribute('src') === player.source);\n\n          // Return size, if match is found\n          return source && Number(source.getAttribute('size'));\n        },\n        set(input) {\n          if (player.quality === input) {\n            return;\n          }\n\n          // If we're using an external handler...\n          if (player.config.quality.forced && is.function(player.config.quality.onChange)) {\n            player.config.quality.onChange(input);\n          } else {\n            // Get sources\n            const sources = html5.getSources.call(player);\n            // Get first match for requested size\n            const source = sources.find(s => Number(s.getAttribute('size')) === input);\n\n            // No matching source found\n            if (!source) {\n              return;\n            }\n\n            // Get current state\n            const {\n              currentTime,\n              paused,\n              preload,\n              readyState,\n              playbackRate\n            } = player.media;\n\n            // Set new source\n            player.media.src = source.getAttribute('src');\n\n            // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n            if (preload !== 'none' || readyState) {\n              // Restore time\n              player.once('loadedmetadata', () => {\n                player.speed = playbackRate;\n                player.currentTime = currentTime;\n\n                // Resume playing\n                if (!paused) {\n                  silencePromise(player.play());\n                }\n              });\n\n              // Load new source\n              player.media.load();\n            }\n          }\n\n          // Trigger change event\n          triggerEvent.call(player, player.media, 'qualitychange', false, {\n            quality: input\n          });\n        }\n      });\n    },\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n      if (!this.isHTML5) {\n        return;\n      }\n\n      // Remove child sources\n      removeElement(html5.getSources.call(this));\n\n      // Set blank video src attribute\n      // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n      // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n      this.media.setAttribute('src', this.config.blankVideo);\n\n      // Load the new empty source\n      // This will cancel existing requests\n      // See https://github.com/sampotts/plyr/issues/174\n      this.media.load();\n\n      // Debugging\n      this.debug.log('Cancelled network requests');\n    }\n  };\n\n  // ==========================================================================\n\n  // Generate a random ID\n  function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n  }\n\n  // Format string\n  function format(input, ...args) {\n    if (is.empty(input)) return input;\n    return input.toString().replace(/{(\\d+)}/g, (_, i) => args[i].toString());\n  }\n\n  // Get percentage\n  function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n      return 0;\n    }\n    return (current / max * 100).toFixed(2);\n  }\n\n  // Replace all occurrences of a string in a string\n  const replaceAll = (input = '', find = '', replace = '') => input.replace(new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'), replace.toString());\n\n  // Convert to title case\n  const toTitleCase = (input = '') => input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase());\n\n  // Convert string to pascalCase\n  function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n  }\n\n  // Convert string to pascalCase\n  function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n  }\n\n  // Remove HTML from a string\n  function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n  }\n\n  // Like outerHTML, but also works for DocumentFragment\n  function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n  }\n\n  // ==========================================================================\n\n  // Skip i18n for abbreviations and brand names\n  const resources = {\n    pip: 'PIP',\n    airplay: 'AirPlay',\n    html5: 'HTML5',\n    vimeo: 'Vimeo',\n    youtube: 'YouTube'\n  };\n  const i18n = {\n    get(key = '', config = {}) {\n      if (is.empty(key) || is.empty(config)) {\n        return '';\n      }\n      let string = getDeep(config.i18n, key);\n      if (is.empty(string)) {\n        if (Object.keys(resources).includes(key)) {\n          return resources[key];\n        }\n        return '';\n      }\n      const replace = {\n        '{seektime}': config.seekTime,\n        '{title}': config.title\n      };\n      Object.entries(replace).forEach(([k, v]) => {\n        string = replaceAll(string, k, v);\n      });\n      return string;\n    }\n  };\n\n  class Storage {\n    constructor(player) {\n      _defineProperty$1(this, \"get\", key => {\n        if (!Storage.supported || !this.enabled) {\n          return null;\n        }\n        const store = window.localStorage.getItem(this.key);\n        if (is.empty(store)) {\n          return null;\n        }\n        const json = JSON.parse(store);\n        return is.string(key) && key.length ? json[key] : json;\n      });\n      _defineProperty$1(this, \"set\", object => {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n          return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n          return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n          storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        try {\n          window.localStorage.setItem(this.key, JSON.stringify(storage));\n        } catch (_) {\n          // Do nothing\n        }\n      });\n      this.enabled = player.config.storage.enabled;\n      this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n      try {\n        if (!('localStorage' in window)) {\n          return false;\n        }\n        const test = '___test';\n\n        // Try to use it (it might be disabled, e.g. user is in private mode)\n        // see: https://github.com/sampotts/plyr/issues/131\n        window.localStorage.setItem(test, test);\n        window.localStorage.removeItem(test);\n        return true;\n      } catch (_) {\n        return false;\n      }\n    }\n  }\n\n  // ==========================================================================\n  // Fetch wrapper\n  // Using XHR to avoid issues with older browsers\n  // ==========================================================================\n\n  function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n      try {\n        const request = new XMLHttpRequest();\n\n        // Check for CORS support\n        if (!('withCredentials' in request)) {\n          return;\n        }\n        request.addEventListener('load', () => {\n          if (responseType === 'text') {\n            try {\n              resolve(JSON.parse(request.responseText));\n            } catch (_) {\n              resolve(request.responseText);\n            }\n          } else {\n            resolve(request.response);\n          }\n        });\n        request.addEventListener('error', () => {\n          throw new Error(request.status);\n        });\n        request.open('GET', url, true);\n\n        // Set the required response type\n        request.responseType = responseType;\n        request.send();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  // ==========================================================================\n\n  // Load an external SVG sprite\n  function loadSprite(url, id) {\n    if (!is.string(url)) {\n      return;\n    }\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n    const exists = () => document.getElementById(id) !== null;\n    const update = (container, data) => {\n      // eslint-disable-next-line no-param-reassign\n      container.innerHTML = data;\n\n      // Check again incase of race condition\n      if (hasId && exists()) {\n        return;\n      }\n\n      // Inject the SVG to the body\n      document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n      const useStorage = Storage.supported;\n      // Create container\n      const container = document.createElement('div');\n      container.setAttribute('hidden', '');\n      if (hasId) {\n        container.setAttribute('id', id);\n      }\n\n      // Check in cache\n      if (useStorage) {\n        const cached = window.localStorage.getItem(`${prefix}-${id}`);\n        isCached = cached !== null;\n        if (isCached) {\n          const data = JSON.parse(cached);\n          update(container, data.content);\n        }\n      }\n\n      // Get the sprite\n      fetch(url).then(result => {\n        if (is.empty(result)) {\n          return;\n        }\n        if (useStorage) {\n          try {\n            window.localStorage.setItem(`${prefix}-${id}`, JSON.stringify({\n              content: result\n            }));\n          } catch (_) {\n            // Do nothing\n          }\n        }\n        update(container, result);\n      }).catch(() => {});\n    }\n  }\n\n  // ==========================================================================\n\n  // Time helpers\n  const getHours = value => Math.trunc(value / 60 / 60 % 60, 10);\n  const getMinutes = value => Math.trunc(value / 60 % 60, 10);\n  const getSeconds = value => Math.trunc(value % 60, 10);\n\n  // Format time to UI friendly string\n  function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n      return formatTime(undefined, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n      hours = `${hours}:`;\n    } else {\n      hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n  }\n\n  // ==========================================================================\n\n  // TODO: Don't export a massive object - break down and create class\n  const controls = {\n    // Get icon URL\n    getIconUrl() {\n      const url = new URL(this.config.iconUrl, window.location);\n      const host = window.location.host ? window.location.host : window.top.location.host;\n      const cors = url.host !== host || browser.isIE && !window.svg4everybody;\n      return {\n        url: this.config.iconUrl,\n        cors\n      };\n    },\n    // Find the UI controls\n    findElements() {\n      try {\n        this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n        // Buttons\n        this.elements.buttons = {\n          play: getElements.call(this, this.config.selectors.buttons.play),\n          pause: getElement.call(this, this.config.selectors.buttons.pause),\n          restart: getElement.call(this, this.config.selectors.buttons.restart),\n          rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n          fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n          mute: getElement.call(this, this.config.selectors.buttons.mute),\n          pip: getElement.call(this, this.config.selectors.buttons.pip),\n          airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n          settings: getElement.call(this, this.config.selectors.buttons.settings),\n          captions: getElement.call(this, this.config.selectors.buttons.captions),\n          fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen)\n        };\n\n        // Progress\n        this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n        // Inputs\n        this.elements.inputs = {\n          seek: getElement.call(this, this.config.selectors.inputs.seek),\n          volume: getElement.call(this, this.config.selectors.inputs.volume)\n        };\n\n        // Display\n        this.elements.display = {\n          buffer: getElement.call(this, this.config.selectors.display.buffer),\n          currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n          duration: getElement.call(this, this.config.selectors.display.duration)\n        };\n\n        // Seek tooltip\n        if (is.element(this.elements.progress)) {\n          this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`);\n        }\n        return true;\n      } catch (error) {\n        // Log it\n        this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n        // Restore native video controls\n        this.toggleNativeControls(true);\n        return false;\n      }\n    },\n    // Create <svg> icon\n    createIcon(type, attributes) {\n      const namespace = 'http://www.w3.org/2000/svg';\n      const iconUrl = controls.getIconUrl.call(this);\n      const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n      // Create <svg>\n      const icon = document.createElementNS(namespace, 'svg');\n      setAttributes(icon, extend(attributes, {\n        'aria-hidden': 'true',\n        focusable: 'false'\n      }));\n\n      // Create the <use> to reference sprite\n      const use = document.createElementNS(namespace, 'use');\n      const path = `${iconPath}-${type}`;\n\n      // Set `href` attributes\n      // https://github.com/sampotts/plyr/issues/460\n      // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n      if ('href' in use) {\n        use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n      }\n\n      // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n      use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n\n      // Add <use> to <svg>\n      icon.appendChild(use);\n      return icon;\n    },\n    // Create hidden text label\n    createLabel(key, attr = {}) {\n      const text = i18n.get(key, this.config);\n      const attributes = {\n        ...attr,\n        class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' ')\n      };\n      return createElement('span', attributes, text);\n    },\n    // Create a badge\n    createBadge(text) {\n      if (is.empty(text)) {\n        return null;\n      }\n      const badge = createElement('span', {\n        class: this.config.classNames.menu.value\n      });\n      badge.appendChild(createElement('span', {\n        class: this.config.classNames.menu.badge\n      }, text));\n      return badge;\n    },\n    // Create a <button>\n    createButton(buttonType, attr) {\n      const attributes = extend({}, attr);\n      let type = toCamelCase(buttonType);\n      const props = {\n        element: 'button',\n        toggle: false,\n        label: null,\n        icon: null,\n        labelPressed: null,\n        iconPressed: null\n      };\n      ['element', 'icon', 'label'].forEach(key => {\n        if (Object.keys(attributes).includes(key)) {\n          props[key] = attributes[key];\n          delete attributes[key];\n        }\n      });\n\n      // Default to 'button' type to prevent form submission\n      if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n        attributes.type = 'button';\n      }\n\n      // Set class name\n      if (Object.keys(attributes).includes('class')) {\n        if (!attributes.class.split(' ').some(c => c === this.config.classNames.control)) {\n          extend(attributes, {\n            class: `${attributes.class} ${this.config.classNames.control}`\n          });\n        }\n      } else {\n        attributes.class = this.config.classNames.control;\n      }\n\n      // Large play button\n      switch (buttonType) {\n        case 'play':\n          props.toggle = true;\n          props.label = 'play';\n          props.labelPressed = 'pause';\n          props.icon = 'play';\n          props.iconPressed = 'pause';\n          break;\n        case 'mute':\n          props.toggle = true;\n          props.label = 'mute';\n          props.labelPressed = 'unmute';\n          props.icon = 'volume';\n          props.iconPressed = 'muted';\n          break;\n        case 'captions':\n          props.toggle = true;\n          props.label = 'enableCaptions';\n          props.labelPressed = 'disableCaptions';\n          props.icon = 'captions-off';\n          props.iconPressed = 'captions-on';\n          break;\n        case 'fullscreen':\n          props.toggle = true;\n          props.label = 'enterFullscreen';\n          props.labelPressed = 'exitFullscreen';\n          props.icon = 'enter-fullscreen';\n          props.iconPressed = 'exit-fullscreen';\n          break;\n        case 'play-large':\n          attributes.class += ` ${this.config.classNames.control}--overlaid`;\n          type = 'play';\n          props.label = 'play';\n          props.icon = 'play';\n          break;\n        default:\n          if (is.empty(props.label)) {\n            props.label = type;\n          }\n          if (is.empty(props.icon)) {\n            props.icon = buttonType;\n          }\n      }\n      const button = createElement(props.element);\n\n      // Setup toggle icon and labels\n      if (props.toggle) {\n        // Icon\n        button.appendChild(controls.createIcon.call(this, props.iconPressed, {\n          class: 'icon--pressed'\n        }));\n        button.appendChild(controls.createIcon.call(this, props.icon, {\n          class: 'icon--not-pressed'\n        }));\n\n        // Label/Tooltip\n        button.appendChild(controls.createLabel.call(this, props.labelPressed, {\n          class: 'label--pressed'\n        }));\n        button.appendChild(controls.createLabel.call(this, props.label, {\n          class: 'label--not-pressed'\n        }));\n      } else {\n        button.appendChild(controls.createIcon.call(this, props.icon));\n        button.appendChild(controls.createLabel.call(this, props.label));\n      }\n\n      // Merge and set attributes\n      extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n      setAttributes(button, attributes);\n\n      // We have multiple play buttons\n      if (type === 'play') {\n        if (!is.array(this.elements.buttons[type])) {\n          this.elements.buttons[type] = [];\n        }\n        this.elements.buttons[type].push(button);\n      } else {\n        this.elements.buttons[type] = button;\n      }\n      return button;\n    },\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n      // Seek input\n      const input = createElement('input', extend(getAttributesFromSelector(this.config.selectors.inputs[type]), {\n        type: 'range',\n        min: 0,\n        max: 100,\n        step: 0.01,\n        value: 0,\n        autocomplete: 'off',\n        // A11y fixes for https://github.com/sampotts/plyr/issues/905\n        role: 'slider',\n        'aria-label': i18n.get(type, this.config),\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': 0\n      }, attributes));\n      this.elements.inputs[type] = input;\n\n      // Set the fill for webkit now\n      controls.updateRangeFill.call(this, input);\n\n      // Improve support on touch devices\n      RangeTouch.setup(input);\n      return input;\n    },\n    // Create a <progress>\n    createProgress(type, attributes) {\n      const progress = createElement('progress', extend(getAttributesFromSelector(this.config.selectors.display[type]), {\n        min: 0,\n        max: 100,\n        value: 0,\n        role: 'progressbar',\n        'aria-hidden': true\n      }, attributes));\n\n      // Create the label inside\n      if (type !== 'volume') {\n        progress.appendChild(createElement('span', null, '0'));\n        const suffixKey = {\n          played: 'played',\n          buffer: 'buffered'\n        }[type];\n        const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n        progress.innerText = `% ${suffix.toLowerCase()}`;\n      }\n      this.elements.display[type] = progress;\n      return progress;\n    },\n    // Create time display\n    createTime(type, attrs) {\n      const attributes = getAttributesFromSelector(this.config.selectors.display[type], attrs);\n      const container = createElement('div', extend(attributes, {\n        class: `${attributes.class ? attributes.class : ''} ${this.config.classNames.display.time} `.trim(),\n        'aria-label': i18n.get(type, this.config),\n        role: 'timer'\n      }), '00:00');\n\n      // Reference for updates\n      this.elements.display[type] = container;\n      return container;\n    },\n    // Bind keyboard shortcuts for a menu item\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    bindMenuItemShortcuts(menuItem, type) {\n      // Navigate through menus via arrow keys and space\n      on.call(this, menuItem, 'keydown keyup', event => {\n        // We only care about space and ⬆️ ⬇️️ ➡️\n        if (![' ', 'ArrowUp', 'ArrowDown', 'ArrowRight'].includes(event.key)) {\n          return;\n        }\n\n        // Prevent play / seek\n        event.preventDefault();\n        event.stopPropagation();\n\n        // We're just here to prevent the keydown bubbling\n        if (event.type === 'keydown') {\n          return;\n        }\n        const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n        // Show the respective menu\n        if (!isRadioButton && [' ', 'ArrowRight'].includes(event.key)) {\n          controls.showMenuPanel.call(this, type, true);\n        } else {\n          let target;\n          if (event.key !== ' ') {\n            if (event.key === 'ArrowDown' || isRadioButton && event.key === 'ArrowRight') {\n              target = menuItem.nextElementSibling;\n              if (!is.element(target)) {\n                target = menuItem.parentNode.firstElementChild;\n              }\n            } else {\n              target = menuItem.previousElementSibling;\n              if (!is.element(target)) {\n                target = menuItem.parentNode.lastElementChild;\n              }\n            }\n            setFocus.call(this, target, true);\n          }\n        }\n      }, false);\n\n      // Enter will fire a `click` event but we still need to manage focus\n      // So we bind to keyup which fires after and set focus here\n      on.call(this, menuItem, 'keyup', event => {\n        if (event.key !== 'Return') return;\n        controls.focusFirstMenuItem.call(this, null, true);\n      });\n    },\n    // Create a settings menu item\n    createMenuItem({\n      value,\n      list,\n      type,\n      title,\n      badge = null,\n      checked = false\n    }) {\n      const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n      const menuItem = createElement('button', extend(attributes, {\n        type: 'button',\n        role: 'menuitemradio',\n        class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n        'aria-checked': checked,\n        value\n      }));\n      const flex = createElement('span');\n\n      // We have to set as HTML incase of special characters\n      flex.innerHTML = title;\n      if (is.element(badge)) {\n        flex.appendChild(badge);\n      }\n      menuItem.appendChild(flex);\n\n      // Replicate radio button behavior\n      Object.defineProperty(menuItem, 'checked', {\n        enumerable: true,\n        get() {\n          return menuItem.getAttribute('aria-checked') === 'true';\n        },\n        set(check) {\n          // Ensure exclusivity\n          if (check) {\n            Array.from(menuItem.parentNode.children).filter(node => matches(node, '[role=\"menuitemradio\"]')).forEach(node => node.setAttribute('aria-checked', 'false'));\n          }\n          menuItem.setAttribute('aria-checked', check ? 'true' : 'false');\n        }\n      });\n      this.listeners.bind(menuItem, 'click keyup', event => {\n        if (is.keyboardEvent(event) && event.key !== ' ') {\n          return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        menuItem.checked = true;\n        switch (type) {\n          case 'language':\n            this.currentTrack = Number(value);\n            break;\n          case 'quality':\n            this.quality = value;\n            break;\n          case 'speed':\n            this.speed = parseFloat(value);\n            break;\n        }\n        controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n      }, type, false);\n      controls.bindMenuItemShortcuts.call(this, menuItem, type);\n      list.appendChild(menuItem);\n    },\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n      // Bail if the value isn't a number\n      if (!is.number(time)) {\n        return time;\n      }\n\n      // Always display hours if duration is over an hour\n      const forceHours = getHours(this.duration) > 0;\n      return formatTime(time, forceHours, inverted);\n    },\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n      // Bail if there's no element to display or the value isn't a number\n      if (!is.element(target) || !is.number(time)) {\n        return;\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      target.innerText = controls.formatTime(time, inverted);\n    },\n    // Update volume UI and storage\n    updateVolume() {\n      if (!this.supported.ui) {\n        return;\n      }\n\n      // Update range\n      if (is.element(this.elements.inputs.volume)) {\n        controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n      }\n\n      // Update mute state\n      if (is.element(this.elements.buttons.mute)) {\n        this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n      }\n    },\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n      if (!is.element(target)) {\n        return;\n      }\n\n      // eslint-disable-next-line\n      target.value = value;\n\n      // Webkit range fill\n      controls.updateRangeFill.call(this, target);\n    },\n    // Update <progress> elements\n    updateProgress(event) {\n      if (!this.supported.ui || !is.event(event)) {\n        return;\n      }\n      let value = 0;\n      const setProgress = (target, input) => {\n        const val = is.number(input) ? input : 0;\n        const progress = is.element(target) ? target : this.elements.display.buffer;\n\n        // Update value and label\n        if (is.element(progress)) {\n          progress.value = val;\n\n          // Update text label inside\n          const label = progress.getElementsByTagName('span')[0];\n          if (is.element(label)) {\n            label.childNodes[0].nodeValue = val;\n          }\n        }\n      };\n      if (event) {\n        switch (event.type) {\n          // Video playing\n          case 'timeupdate':\n          case 'seeking':\n          case 'seeked':\n            value = getPercentage(this.currentTime, this.duration);\n\n            // Set seek range value only if it's a 'natural' time event\n            if (event.type === 'timeupdate') {\n              controls.setRange.call(this, this.elements.inputs.seek, value);\n            }\n            break;\n\n          // Check buffer status\n          case 'playing':\n          case 'progress':\n            setProgress(this.elements.display.buffer, this.buffered * 100);\n            break;\n        }\n      }\n    },\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n      // Get range from event if event passed\n      const range = is.event(target) ? target.target : target;\n\n      // Needs to be a valid <input type='range'>\n      if (!is.element(range) || range.getAttribute('type') !== 'range') {\n        return;\n      }\n\n      // Set aria values for https://github.com/sampotts/plyr/issues/905\n      if (matches(range, this.config.selectors.inputs.seek)) {\n        range.setAttribute('aria-valuenow', this.currentTime);\n        const currentTime = controls.formatTime(this.currentTime);\n        const duration = controls.formatTime(this.duration);\n        const format = i18n.get('seekLabel', this.config);\n        range.setAttribute('aria-valuetext', format.replace('{currentTime}', currentTime).replace('{duration}', duration));\n      } else if (matches(range, this.config.selectors.inputs.volume)) {\n        const percent = range.value * 100;\n        range.setAttribute('aria-valuenow', percent);\n        range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n      } else {\n        range.setAttribute('aria-valuenow', range.value);\n      }\n\n      // WebKit only\n      if (!browser.isWebKit && !browser.isIPadOS) {\n        return;\n      }\n\n      // Set CSS custom property\n      range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n      var _this$config$markers, _this$config$markers$;\n      // Bail if setting not true\n      if (!this.config.tooltips.seek || !is.element(this.elements.inputs.seek) || !is.element(this.elements.display.seekTooltip) || this.duration === 0) {\n        return;\n      }\n      const tipElement = this.elements.display.seekTooltip;\n      const visible = `${this.config.classNames.tooltip}--visible`;\n      const toggle = show => toggleClass(tipElement, visible, show);\n\n      // Hide on touch\n      if (this.touch) {\n        toggle(false);\n        return;\n      }\n\n      // Determine percentage, if already visible\n      let percent = 0;\n      const clientRect = this.elements.progress.getBoundingClientRect();\n      if (is.event(event)) {\n        percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n      } else if (hasClass(tipElement, visible)) {\n        percent = parseFloat(tipElement.style.left, 10);\n      } else {\n        return;\n      }\n\n      // Set bounds\n      if (percent < 0) {\n        percent = 0;\n      } else if (percent > 100) {\n        percent = 100;\n      }\n      const time = this.duration / 100 * percent;\n\n      // Display the time a click would seek to\n      tipElement.innerText = controls.formatTime(time);\n\n      // Get marker point for time\n      const point = (_this$config$markers = this.config.markers) === null || _this$config$markers === void 0 ? void 0 : (_this$config$markers$ = _this$config$markers.points) === null || _this$config$markers$ === void 0 ? void 0 : _this$config$markers$.find(({\n        time: t\n      }) => t === Math.round(time));\n\n      // Append the point label to the tooltip\n      if (point) {\n        tipElement.insertAdjacentHTML('afterbegin', `${point.label}<br>`);\n      }\n\n      // Set position\n      tipElement.style.left = `${percent}%`;\n\n      // Show/hide the tooltip\n      // If the event is a moues in/out and percentage is inside bounds\n      if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n        toggle(event.type === 'mouseenter');\n      }\n    },\n    // Handle time change event\n    timeUpdate(event) {\n      // Only invert if only one time element is displayed and used for both duration and currentTime\n      const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n      // Duration\n      controls.updateTimeDisplay.call(this, this.elements.display.currentTime, invert ? this.duration - this.currentTime : this.currentTime, invert);\n\n      // Ignore updates while seeking\n      if (event && event.type === 'timeupdate' && this.media.seeking) {\n        return;\n      }\n\n      // Playing progress\n      controls.updateProgress.call(this, event);\n    },\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n      // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n      if (!this.supported.ui || !this.config.invertTime && this.currentTime) {\n        return;\n      }\n\n      // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n      // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n      // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n      // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n      if (this.duration >= 2 ** 32) {\n        toggleHidden(this.elements.display.currentTime, true);\n        toggleHidden(this.elements.progress, true);\n        return;\n      }\n\n      // Update ARIA values\n      if (is.element(this.elements.inputs.seek)) {\n        this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n      }\n\n      // If there's a spot to display duration\n      const hasDuration = is.element(this.elements.display.duration);\n\n      // If there's only one time display, display duration there\n      if (!hasDuration && this.config.displayDuration && this.paused) {\n        controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n      }\n\n      // If there's a duration element, update content\n      if (hasDuration) {\n        controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n      }\n      if (this.config.markers.enabled) {\n        controls.setMarkers.call(this);\n      }\n\n      // Update the tooltip (if visible)\n      controls.updateSeekTooltip.call(this);\n    },\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n      toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n      const pane = this.elements.settings.panels[setting];\n      let value = null;\n      let list = container;\n      if (setting === 'captions') {\n        value = this.currentTrack;\n      } else {\n        value = !is.empty(input) ? input : this[setting];\n\n        // Get default\n        if (is.empty(value)) {\n          value = this.config[setting].default;\n        }\n\n        // Unsupported value\n        if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n          this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n          return;\n        }\n\n        // Disabled value\n        if (!this.config[setting].options.includes(value)) {\n          this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n          return;\n        }\n      }\n\n      // Get the list if we need to\n      if (!is.element(list)) {\n        list = pane && pane.querySelector('[role=\"menu\"]');\n      }\n\n      // If there's no list it means it's not been rendered...\n      if (!is.element(list)) {\n        return;\n      }\n\n      // Update the label\n      const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n      label.innerHTML = controls.getLabel.call(this, setting, value);\n\n      // Find the radio option and check it\n      const target = list && list.querySelector(`[value=\"${value}\"]`);\n      if (is.element(target)) {\n        target.checked = true;\n      }\n    },\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n      switch (setting) {\n        case 'speed':\n          return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n        case 'quality':\n          if (is.number(value)) {\n            const label = i18n.get(`qualityLabel.${value}`, this.config);\n            if (!label.length) {\n              return `${value}p`;\n            }\n            return label;\n          }\n          return toTitleCase(value);\n        case 'captions':\n          return captions.getLabel.call(this);\n        default:\n          return null;\n      }\n    },\n    // Set the quality menu\n    setQualityMenu(options) {\n      // Menu required\n      if (!is.element(this.elements.settings.panels.quality)) {\n        return;\n      }\n      const type = 'quality';\n      const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n      // Set options if passed and filter based on uniqueness and config\n      if (is.array(options)) {\n        this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n      }\n\n      // Toggle the pane and tab\n      const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n      controls.toggleMenuButton.call(this, type, toggle);\n\n      // Empty the menu\n      emptyElement(list);\n\n      // Check if we need to toggle the parent\n      controls.checkMenu.call(this);\n\n      // If we're hiding, nothing more to do\n      if (!toggle) {\n        return;\n      }\n\n      // Get the badge HTML for HD, 4K etc\n      const getBadge = quality => {\n        const label = i18n.get(`qualityBadge.${quality}`, this.config);\n        if (!label.length) {\n          return null;\n        }\n        return controls.createBadge.call(this, label);\n      };\n\n      // Sort options by the config and then render options\n      this.options.quality.sort((a, b) => {\n        const sorting = this.config.quality.options;\n        return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n      }).forEach(quality => {\n        controls.createMenuItem.call(this, {\n          value: quality,\n          list,\n          type,\n          title: controls.getLabel.call(this, 'quality', quality),\n          badge: getBadge(quality)\n        });\n      });\n      controls.updateSetting.call(this, type, list);\n    },\n    // Set the looping options\n    /* setLoopMenu() {\n          // Menu required\n          if (!is.element(this.elements.settings.panels.loop)) {\n              return;\n          }\n           const options = ['start', 'end', 'all', 'reset'];\n          const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n           // Show the pane and tab\n          toggleHidden(this.elements.settings.buttons.loop, false);\n          toggleHidden(this.elements.settings.panels.loop, false);\n           // Toggle the pane and tab\n          const toggle = !is.empty(this.loop.options);\n          controls.toggleMenuButton.call(this, 'loop', toggle);\n           // Empty the menu\n          emptyElement(list);\n           options.forEach(option => {\n              const item = createElement('li');\n               const button = createElement(\n                  'button',\n                  extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                      type: 'button',\n                      class: this.config.classNames.control,\n                      'data-plyr-loop-action': option,\n                  }),\n                  i18n.get(option, this.config)\n              );\n               if (['start', 'end'].includes(option)) {\n                  const badge = controls.createBadge.call(this, '00:00');\n                  button.appendChild(badge);\n              }\n               item.appendChild(button);\n              list.appendChild(item);\n          });\n      }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n      // Menu required\n      if (!is.element(this.elements.settings.panels.captions)) {\n        return;\n      }\n\n      // TODO: Captions or language? Currently it's mixed\n      const type = 'captions';\n      const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n      const tracks = captions.getTracks.call(this);\n      const toggle = Boolean(tracks.length);\n\n      // Toggle the pane and tab\n      controls.toggleMenuButton.call(this, type, toggle);\n\n      // Empty the menu\n      emptyElement(list);\n\n      // Check if we need to toggle the parent\n      controls.checkMenu.call(this);\n\n      // If there's no captions, bail\n      if (!toggle) {\n        return;\n      }\n\n      // Generate options data\n      const options = tracks.map((track, value) => ({\n        value,\n        checked: this.captions.toggled && this.currentTrack === value,\n        title: captions.getLabel.call(this, track),\n        badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n        list,\n        type: 'language'\n      }));\n\n      // Add the \"Disabled\" option to turn off captions\n      options.unshift({\n        value: -1,\n        checked: !this.captions.toggled,\n        title: i18n.get('disabled', this.config),\n        list,\n        type: 'language'\n      });\n\n      // Generate options\n      options.forEach(controls.createMenuItem.bind(this));\n      controls.updateSetting.call(this, type, list);\n    },\n    // Set a list of available captions languages\n    setSpeedMenu() {\n      // Menu required\n      if (!is.element(this.elements.settings.panels.speed)) {\n        return;\n      }\n      const type = 'speed';\n      const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n      // Filter out invalid speeds\n      this.options.speed = this.options.speed.filter(o => o >= this.minimumSpeed && o <= this.maximumSpeed);\n\n      // Toggle the pane and tab\n      const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n      controls.toggleMenuButton.call(this, type, toggle);\n\n      // Empty the menu\n      emptyElement(list);\n\n      // Check if we need to toggle the parent\n      controls.checkMenu.call(this);\n\n      // If we're hiding, nothing more to do\n      if (!toggle) {\n        return;\n      }\n\n      // Create items\n      this.options.speed.forEach(speed => {\n        controls.createMenuItem.call(this, {\n          value: speed,\n          list,\n          type,\n          title: controls.getLabel.call(this, 'speed', speed)\n        });\n      });\n      controls.updateSetting.call(this, type, list);\n    },\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n      const {\n        buttons\n      } = this.elements.settings;\n      const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n      toggleHidden(this.elements.settings.menu, !visible);\n    },\n    // Focus the first menu item in a given (or visible) menu\n    focusFirstMenuItem(pane, focusVisible = false) {\n      if (this.elements.settings.popup.hidden) {\n        return;\n      }\n      let target = pane;\n      if (!is.element(target)) {\n        target = Object.values(this.elements.settings.panels).find(p => !p.hidden);\n      }\n      const firstItem = target.querySelector('[role^=\"menuitem\"]');\n      setFocus.call(this, firstItem, focusVisible);\n    },\n    // Show/hide menu\n    toggleMenu(input) {\n      const {\n        popup\n      } = this.elements.settings;\n      const button = this.elements.buttons.settings;\n\n      // Menu and button are required\n      if (!is.element(popup) || !is.element(button)) {\n        return;\n      }\n\n      // True toggle by default\n      const {\n        hidden\n      } = popup;\n      let show = hidden;\n      if (is.boolean(input)) {\n        show = input;\n      } else if (is.keyboardEvent(input) && input.key === 'Escape') {\n        show = false;\n      } else if (is.event(input)) {\n        // If Plyr is in a shadowDOM, the event target is set to the component, instead of the\n        // Element in the shadowDOM. The path, if available, is complete.\n        const target = is.function(input.composedPath) ? input.composedPath()[0] : input.target;\n        const isMenuItem = popup.contains(target);\n\n        // If the click was inside the menu or if the click\n        // wasn't the button or menu item and we're trying to\n        // show the menu (a doc click shouldn't show the menu)\n        if (isMenuItem || !isMenuItem && input.target !== button && show) {\n          return;\n        }\n      }\n\n      // Set button attributes\n      button.setAttribute('aria-expanded', show);\n\n      // Show the actual popup\n      toggleHidden(popup, !show);\n\n      // Add class hook\n      toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n      // Focus the first item if key interaction\n      if (show && is.keyboardEvent(input)) {\n        controls.focusFirstMenuItem.call(this, null, true);\n      } else if (!show && !hidden) {\n        // If closing, re-focus the button\n        setFocus.call(this, button, is.keyboardEvent(input));\n      }\n    },\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n      const clone = tab.cloneNode(true);\n      clone.style.position = 'absolute';\n      clone.style.opacity = 0;\n      clone.removeAttribute('hidden');\n\n      // Append to parent so we get the \"real\" size\n      tab.parentNode.appendChild(clone);\n\n      // Get the sizes before we remove\n      const width = clone.scrollWidth;\n      const height = clone.scrollHeight;\n\n      // Remove from the DOM\n      removeElement(clone);\n      return {\n        width,\n        height\n      };\n    },\n    // Show a panel in the menu\n    showMenuPanel(type = '', focusVisible = false) {\n      const target = this.elements.container.querySelector(`#plyr-settings-${this.id}-${type}`);\n\n      // Nothing to show, bail\n      if (!is.element(target)) {\n        return;\n      }\n\n      // Hide all other panels\n      const container = target.parentNode;\n      const current = Array.from(container.children).find(node => !node.hidden);\n\n      // If we can do fancy animations, we'll animate the height/width\n      if (support.transitions && !support.reducedMotion) {\n        // Set the current width as a base\n        container.style.width = `${current.scrollWidth}px`;\n        container.style.height = `${current.scrollHeight}px`;\n\n        // Get potential sizes\n        const size = controls.getMenuSize.call(this, target);\n\n        // Restore auto height/width\n        const restore = event => {\n          // We're only bothered about height and width on the container\n          if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n            return;\n          }\n\n          // Revert back to auto\n          container.style.width = '';\n          container.style.height = '';\n\n          // Only listen once\n          off.call(this, container, transitionEndEvent, restore);\n        };\n\n        // Listen for the transition finishing and restore auto height/width\n        on.call(this, container, transitionEndEvent, restore);\n\n        // Set dimensions to target\n        container.style.width = `${size.width}px`;\n        container.style.height = `${size.height}px`;\n      }\n\n      // Set attributes on current tab\n      toggleHidden(current, true);\n\n      // Set attributes on target\n      toggleHidden(target, false);\n\n      // Focus the first item\n      controls.focusFirstMenuItem.call(this, target, focusVisible);\n    },\n    // Set the download URL\n    setDownloadUrl() {\n      const button = this.elements.buttons.download;\n\n      // Bail if no button\n      if (!is.element(button)) {\n        return;\n      }\n\n      // Set attribute\n      button.setAttribute('href', this.download);\n    },\n    // Build the default HTML\n    create(data) {\n      const {\n        bindMenuItemShortcuts,\n        createButton,\n        createProgress,\n        createRange,\n        createTime,\n        setQualityMenu,\n        setSpeedMenu,\n        showMenuPanel\n      } = controls;\n      this.elements.controls = null;\n\n      // Larger overlaid play button\n      if (is.array(this.config.controls) && this.config.controls.includes('play-large')) {\n        this.elements.container.appendChild(createButton.call(this, 'play-large'));\n      }\n\n      // Create the container\n      const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n      this.elements.controls = container;\n\n      // Default item attributes\n      const defaultAttributes = {\n        class: 'plyr__controls__item'\n      };\n\n      // Loop through controls in order\n      dedupe(is.array(this.config.controls) ? this.config.controls : []).forEach(control => {\n        // Restart button\n        if (control === 'restart') {\n          container.appendChild(createButton.call(this, 'restart', defaultAttributes));\n        }\n\n        // Rewind button\n        if (control === 'rewind') {\n          container.appendChild(createButton.call(this, 'rewind', defaultAttributes));\n        }\n\n        // Play/Pause button\n        if (control === 'play') {\n          container.appendChild(createButton.call(this, 'play', defaultAttributes));\n        }\n\n        // Fast forward button\n        if (control === 'fast-forward') {\n          container.appendChild(createButton.call(this, 'fast-forward', defaultAttributes));\n        }\n\n        // Progress\n        if (control === 'progress') {\n          const progressContainer = createElement('div', {\n            class: `${defaultAttributes.class} plyr__progress__container`\n          });\n          const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n          // Seek range slider\n          progress.appendChild(createRange.call(this, 'seek', {\n            id: `plyr-seek-${data.id}`\n          }));\n\n          // Buffer progress\n          progress.appendChild(createProgress.call(this, 'buffer'));\n\n          // TODO: Add loop display indicator\n\n          // Seek tooltip\n          if (this.config.tooltips.seek) {\n            const tooltip = createElement('span', {\n              class: this.config.classNames.tooltip\n            }, '00:00');\n            progress.appendChild(tooltip);\n            this.elements.display.seekTooltip = tooltip;\n          }\n          this.elements.progress = progress;\n          progressContainer.appendChild(this.elements.progress);\n          container.appendChild(progressContainer);\n        }\n\n        // Media current time display\n        if (control === 'current-time') {\n          container.appendChild(createTime.call(this, 'currentTime', defaultAttributes));\n        }\n\n        // Media duration display\n        if (control === 'duration') {\n          container.appendChild(createTime.call(this, 'duration', defaultAttributes));\n        }\n\n        // Volume controls\n        if (control === 'mute' || control === 'volume') {\n          let {\n            volume\n          } = this.elements;\n\n          // Create the volume container if needed\n          if (!is.element(volume) || !container.contains(volume)) {\n            volume = createElement('div', extend({}, defaultAttributes, {\n              class: `${defaultAttributes.class} plyr__volume`.trim()\n            }));\n            this.elements.volume = volume;\n            container.appendChild(volume);\n          }\n\n          // Toggle mute button\n          if (control === 'mute') {\n            volume.appendChild(createButton.call(this, 'mute'));\n          }\n\n          // Volume range control\n          // Ignored on iOS as it's handled globally\n          // https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html\n          if (control === 'volume' && !browser.isIos && !browser.isIPadOS) {\n            // Set the attributes\n            const attributes = {\n              max: 1,\n              step: 0.05,\n              value: this.config.volume\n            };\n\n            // Create the volume range slider\n            volume.appendChild(createRange.call(this, 'volume', extend(attributes, {\n              id: `plyr-volume-${data.id}`\n            })));\n          }\n        }\n\n        // Toggle captions button\n        if (control === 'captions') {\n          container.appendChild(createButton.call(this, 'captions', defaultAttributes));\n        }\n\n        // Settings button / menu\n        if (control === 'settings' && !is.empty(this.config.settings)) {\n          const wrapper = createElement('div', extend({}, defaultAttributes, {\n            class: `${defaultAttributes.class} plyr__menu`.trim(),\n            hidden: ''\n          }));\n          wrapper.appendChild(createButton.call(this, 'settings', {\n            'aria-haspopup': true,\n            'aria-controls': `plyr-settings-${data.id}`,\n            'aria-expanded': false\n          }));\n          const popup = createElement('div', {\n            class: 'plyr__menu__container',\n            id: `plyr-settings-${data.id}`,\n            hidden: ''\n          });\n          const inner = createElement('div');\n          const home = createElement('div', {\n            id: `plyr-settings-${data.id}-home`\n          });\n\n          // Create the menu\n          const menu = createElement('div', {\n            role: 'menu'\n          });\n          home.appendChild(menu);\n          inner.appendChild(home);\n          this.elements.settings.panels.home = home;\n\n          // Build the menu items\n          this.config.settings.forEach(type => {\n            // TODO: bundle this with the createMenuItem helper and bindings\n            const menuItem = createElement('button', extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n              type: 'button',\n              class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n              role: 'menuitem',\n              'aria-haspopup': true,\n              hidden: ''\n            }));\n\n            // Bind menu shortcuts for keyboard users\n            bindMenuItemShortcuts.call(this, menuItem, type);\n\n            // Show menu on click\n            on.call(this, menuItem, 'click', () => {\n              showMenuPanel.call(this, type, false);\n            });\n            const flex = createElement('span', null, i18n.get(type, this.config));\n            const value = createElement('span', {\n              class: this.config.classNames.menu.value\n            });\n\n            // Speed contains HTML entities\n            value.innerHTML = data[type];\n            flex.appendChild(value);\n            menuItem.appendChild(flex);\n            menu.appendChild(menuItem);\n\n            // Build the panes\n            const pane = createElement('div', {\n              id: `plyr-settings-${data.id}-${type}`,\n              hidden: ''\n            });\n\n            // Back button\n            const backButton = createElement('button', {\n              type: 'button',\n              class: `${this.config.classNames.control} ${this.config.classNames.control}--back`\n            });\n\n            // Visible label\n            backButton.appendChild(createElement('span', {\n              'aria-hidden': true\n            }, i18n.get(type, this.config)));\n\n            // Screen reader label\n            backButton.appendChild(createElement('span', {\n              class: this.config.classNames.hidden\n            }, i18n.get('menuBack', this.config)));\n\n            // Go back via keyboard\n            on.call(this, pane, 'keydown', event => {\n              if (event.key !== 'ArrowLeft') return;\n\n              // Prevent seek\n              event.preventDefault();\n              event.stopPropagation();\n\n              // Show the respective menu\n              showMenuPanel.call(this, 'home', true);\n            }, false);\n\n            // Go back via button click\n            on.call(this, backButton, 'click', () => {\n              showMenuPanel.call(this, 'home', false);\n            });\n\n            // Add to pane\n            pane.appendChild(backButton);\n\n            // Menu\n            pane.appendChild(createElement('div', {\n              role: 'menu'\n            }));\n            inner.appendChild(pane);\n            this.elements.settings.buttons[type] = menuItem;\n            this.elements.settings.panels[type] = pane;\n          });\n          popup.appendChild(inner);\n          wrapper.appendChild(popup);\n          container.appendChild(wrapper);\n          this.elements.settings.popup = popup;\n          this.elements.settings.menu = wrapper;\n        }\n\n        // Picture in picture button\n        if (control === 'pip' && support.pip) {\n          container.appendChild(createButton.call(this, 'pip', defaultAttributes));\n        }\n\n        // Airplay button\n        if (control === 'airplay' && support.airplay) {\n          container.appendChild(createButton.call(this, 'airplay', defaultAttributes));\n        }\n\n        // Download button\n        if (control === 'download') {\n          const attributes = extend({}, defaultAttributes, {\n            element: 'a',\n            href: this.download,\n            target: '_blank'\n          });\n\n          // Set download attribute for HTML5 only\n          if (this.isHTML5) {\n            attributes.download = '';\n          }\n          const {\n            download\n          } = this.config.urls;\n          if (!is.url(download) && this.isEmbed) {\n            extend(attributes, {\n              icon: `logo-${this.provider}`,\n              label: this.provider\n            });\n          }\n          container.appendChild(createButton.call(this, 'download', attributes));\n        }\n\n        // Toggle fullscreen button\n        if (control === 'fullscreen') {\n          container.appendChild(createButton.call(this, 'fullscreen', defaultAttributes));\n        }\n      });\n\n      // Set available quality levels\n      if (this.isHTML5) {\n        setQualityMenu.call(this, html5.getQualityOptions.call(this));\n      }\n      setSpeedMenu.call(this);\n      return container;\n    },\n    // Insert controls\n    inject() {\n      // Sprite\n      if (this.config.loadSprite) {\n        const icon = controls.getIconUrl.call(this);\n\n        // Only load external sprite using AJAX\n        if (icon.cors) {\n          loadSprite(icon.url, 'sprite-plyr');\n        }\n      }\n\n      // Create a unique ID\n      this.id = Math.floor(Math.random() * 10000);\n\n      // Null by default\n      let container = null;\n      this.elements.controls = null;\n\n      // Set template properties\n      const props = {\n        id: this.id,\n        seektime: this.config.seekTime,\n        title: this.config.title\n      };\n      let update = true;\n\n      // If function, run it and use output\n      if (is.function(this.config.controls)) {\n        this.config.controls = this.config.controls.call(this, props);\n      }\n\n      // Convert falsy controls to empty array (primarily for empty strings)\n      if (!this.config.controls) {\n        this.config.controls = [];\n      }\n      if (is.element(this.config.controls) || is.string(this.config.controls)) {\n        // HTMLElement or Non-empty string passed as the option\n        container = this.config.controls;\n      } else {\n        // Create controls\n        container = controls.create.call(this, {\n          id: this.id,\n          seektime: this.config.seekTime,\n          speed: this.speed,\n          quality: this.quality,\n          captions: captions.getLabel.call(this)\n          // TODO: Looping\n          // loop: 'None',\n        });\n\n        update = false;\n      }\n\n      // Replace props with their value\n      const replace = input => {\n        let result = input;\n        Object.entries(props).forEach(([key, value]) => {\n          result = replaceAll(result, `{${key}}`, value);\n        });\n        return result;\n      };\n\n      // Update markup\n      if (update) {\n        if (is.string(this.config.controls)) {\n          container = replace(container);\n        }\n      }\n\n      // Controls container\n      let target;\n\n      // Inject to custom location\n      if (is.string(this.config.selectors.controls.container)) {\n        target = document.querySelector(this.config.selectors.controls.container);\n      }\n\n      // Inject into the container by default\n      if (!is.element(target)) {\n        target = this.elements.container;\n      }\n\n      // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n      const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n      target[insertMethod]('afterbegin', container);\n\n      // Find the elements if need be\n      if (!is.element(this.elements.controls)) {\n        controls.findElements.call(this);\n      }\n\n      // Add pressed property to buttons\n      if (!is.empty(this.elements.buttons)) {\n        const addProperty = button => {\n          const className = this.config.classNames.controlPressed;\n          button.setAttribute('aria-pressed', 'false');\n          Object.defineProperty(button, 'pressed', {\n            configurable: true,\n            enumerable: true,\n            get() {\n              return hasClass(button, className);\n            },\n            set(pressed = false) {\n              toggleClass(button, className, pressed);\n              button.setAttribute('aria-pressed', pressed ? 'true' : 'false');\n            }\n          });\n        };\n\n        // Toggle classname when pressed property is set\n        Object.values(this.elements.buttons).filter(Boolean).forEach(button => {\n          if (is.array(button) || is.nodeList(button)) {\n            Array.from(button).filter(Boolean).forEach(addProperty);\n          } else {\n            addProperty(button);\n          }\n        });\n      }\n\n      // Edge sometimes doesn't finish the paint so force a repaint\n      if (browser.isEdge) {\n        repaint(target);\n      }\n\n      // Setup tooltips\n      if (this.config.tooltips.controls) {\n        const {\n          classNames,\n          selectors\n        } = this.config;\n        const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n        const labels = getElements.call(this, selector);\n        Array.from(labels).forEach(label => {\n          toggleClass(label, this.config.classNames.hidden, false);\n          toggleClass(label, this.config.classNames.tooltip, true);\n        });\n      }\n    },\n    // Set media metadata\n    setMediaMetadata() {\n      try {\n        if ('mediaSession' in navigator) {\n          navigator.mediaSession.metadata = new window.MediaMetadata({\n            title: this.config.mediaMetadata.title,\n            artist: this.config.mediaMetadata.artist,\n            album: this.config.mediaMetadata.album,\n            artwork: this.config.mediaMetadata.artwork\n          });\n        }\n      } catch (_) {\n        // Do nothing\n      }\n    },\n    // Add markers\n    setMarkers() {\n      var _this$config$markers2, _this$config$markers3;\n      if (!this.duration || this.elements.markers) return;\n\n      // Get valid points\n      const points = (_this$config$markers2 = this.config.markers) === null || _this$config$markers2 === void 0 ? void 0 : (_this$config$markers3 = _this$config$markers2.points) === null || _this$config$markers3 === void 0 ? void 0 : _this$config$markers3.filter(({\n        time\n      }) => time > 0 && time < this.duration);\n      if (!(points !== null && points !== void 0 && points.length)) return;\n      const containerFragment = document.createDocumentFragment();\n      const pointsFragment = document.createDocumentFragment();\n      let tipElement = null;\n      const tipVisible = `${this.config.classNames.tooltip}--visible`;\n      const toggleTip = show => toggleClass(tipElement, tipVisible, show);\n\n      // Inject markers to progress container\n      points.forEach(point => {\n        const markerElement = createElement('span', {\n          class: this.config.classNames.marker\n        }, '');\n        const left = `${point.time / this.duration * 100}%`;\n        if (tipElement) {\n          // Show on hover\n          markerElement.addEventListener('mouseenter', () => {\n            if (point.label) return;\n            tipElement.style.left = left;\n            tipElement.innerHTML = point.label;\n            toggleTip(true);\n          });\n\n          // Hide on leave\n          markerElement.addEventListener('mouseleave', () => {\n            toggleTip(false);\n          });\n        }\n        markerElement.addEventListener('click', () => {\n          this.currentTime = point.time;\n        });\n        markerElement.style.left = left;\n        pointsFragment.appendChild(markerElement);\n      });\n      containerFragment.appendChild(pointsFragment);\n\n      // Inject a tooltip if needed\n      if (!this.config.tooltips.seek) {\n        tipElement = createElement('span', {\n          class: this.config.classNames.tooltip\n        }, '');\n        containerFragment.appendChild(tipElement);\n      }\n      this.elements.markers = {\n        points: pointsFragment,\n        tip: tipElement\n      };\n      this.elements.progress.appendChild(containerFragment);\n    }\n  };\n\n  // ==========================================================================\n\n  /**\n   * Parse a string to a URL object\n   * @param {String} input - the URL to be parsed\n   * @param {Boolean} safe - failsafe parsing\n   */\n  function parseUrl(input, safe = true) {\n    let url = input;\n    if (safe) {\n      const parser = document.createElement('a');\n      parser.href = url;\n      url = parser.href;\n    }\n    try {\n      return new URL(url);\n    } catch (_) {\n      return null;\n    }\n  }\n\n  // Convert object to URLSearchParams\n  function buildUrlParams(input) {\n    const params = new URLSearchParams();\n    if (is.object(input)) {\n      Object.entries(input).forEach(([key, value]) => {\n        params.set(key, value);\n      });\n    }\n    return params;\n  }\n\n  // ==========================================================================\n  const captions = {\n    // Setup captions\n    setup() {\n      // Requires UI support\n      if (!this.supported.ui) {\n        return;\n      }\n\n      // Only Vimeo and HTML5 video supported at this point\n      if (!this.isVideo || this.isYouTube || this.isHTML5 && !support.textTracks) {\n        // Clear menu and hide\n        if (is.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n          controls.setCaptionsMenu.call(this);\n        }\n        return;\n      }\n\n      // Inject the container\n      if (!is.element(this.elements.captions)) {\n        this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n        this.elements.captions.setAttribute('dir', 'auto');\n        insertAfter(this.elements.captions, this.elements.wrapper);\n      }\n\n      // Fix IE captions if CORS is used\n      // Fetch captions and inject as blobs instead (data URIs not supported!)\n      if (browser.isIE && window.URL) {\n        const elements = this.media.querySelectorAll('track');\n        Array.from(elements).forEach(track => {\n          const src = track.getAttribute('src');\n          const url = parseUrl(src);\n          if (url !== null && url.hostname !== window.location.href.hostname && ['http:', 'https:'].includes(url.protocol)) {\n            fetch(src, 'blob').then(blob => {\n              track.setAttribute('src', window.URL.createObjectURL(blob));\n            }).catch(() => {\n              removeElement(track);\n            });\n          }\n        });\n      }\n\n      // Get and set initial data\n      // The \"preferred\" options are not realized unless / until the wanted language has a match\n      // * languages: Array of user's browser languages.\n      // * language:  The language preferred by user settings or config\n      // * active:    The state preferred by user settings or config\n      // * toggled:   The real captions state\n\n      const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n      const languages = dedupe(browserLanguages.map(language => language.split('-')[0]));\n      let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n      // Use first browser language when language is 'auto'\n      if (language === 'auto') {\n        [language] = languages;\n      }\n      let active = this.storage.get('captions');\n      if (!is.boolean(active)) {\n        ({\n          active\n        } = this.config.captions);\n      }\n      Object.assign(this.captions, {\n        toggled: false,\n        active,\n        language,\n        languages\n      });\n\n      // Watch changes to textTracks and update captions menu\n      if (this.isHTML5) {\n        const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n        on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n      }\n\n      // Update available languages in list next tick (the event must not be triggered before the listeners)\n      setTimeout(captions.update.bind(this), 0);\n    },\n    // Update available language options in settings based on tracks\n    update() {\n      const tracks = captions.getTracks.call(this, true);\n      // Get the wanted language\n      const {\n        active,\n        language,\n        meta,\n        currentTrackNode\n      } = this.captions;\n      const languageExists = Boolean(tracks.find(track => track.language === language));\n\n      // Handle tracks (add event listener and \"pseudo\"-default)\n      if (this.isHTML5 && this.isVideo) {\n        tracks.filter(track => !meta.get(track)).forEach(track => {\n          this.debug.log('Track added', track);\n\n          // Attempt to store if the original dom element was \"default\"\n          meta.set(track, {\n            default: track.mode === 'showing'\n          });\n\n          // Turn off native caption rendering to avoid double captions\n          // Note: mode='hidden' forces a track to download. To ensure every track\n          // isn't downloaded at once, only 'showing' tracks should be reassigned\n          // eslint-disable-next-line no-param-reassign\n          if (track.mode === 'showing') {\n            // eslint-disable-next-line no-param-reassign\n            track.mode = 'hidden';\n          }\n\n          // Add event listener for cue changes\n          on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n        });\n      }\n\n      // Update language first time it matches, or if the previous matching track was removed\n      if (languageExists && this.language !== language || !tracks.includes(currentTrackNode)) {\n        captions.setLanguage.call(this, language);\n        captions.toggle.call(this, active && languageExists);\n      }\n\n      // Enable or disable captions based on track length\n      if (this.elements) {\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n      }\n\n      // Update available languages in list\n      if (is.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n        controls.setCaptionsMenu.call(this);\n      }\n    },\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n      // If there's no full support\n      if (!this.supported.ui) {\n        return;\n      }\n      const {\n        toggled\n      } = this.captions; // Current state\n      const activeClass = this.config.classNames.captions.active;\n      // Get the next state\n      // If the method is called without parameter, toggle based on current value\n      const active = is.nullOrUndefined(input) ? !toggled : input;\n\n      // Update state and trigger event\n      if (active !== toggled) {\n        // When passive, don't override user preferences\n        if (!passive) {\n          this.captions.active = active;\n          this.storage.set({\n            captions: active\n          });\n        }\n\n        // Force language if the call isn't passive and there is no matching language to toggle to\n        if (!this.language && active && !passive) {\n          const tracks = captions.getTracks.call(this);\n          const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n          // Override user preferences to avoid switching languages if a matching track is added\n          this.captions.language = track.language;\n\n          // Set caption, but don't store in localStorage as user preference\n          captions.set.call(this, tracks.indexOf(track));\n          return;\n        }\n\n        // Toggle button if it's enabled\n        if (this.elements.buttons.captions) {\n          this.elements.buttons.captions.pressed = active;\n        }\n\n        // Add class hook\n        toggleClass(this.elements.container, activeClass, active);\n        this.captions.toggled = active;\n\n        // Update settings menu\n        controls.updateSetting.call(this, 'captions');\n\n        // Trigger event (not used internally)\n        triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n      }\n\n      // Wait for the call stack to clear before setting mode='hidden'\n      // on the active track - forcing the browser to download it\n      setTimeout(() => {\n        if (active && this.captions.toggled) {\n          this.captions.currentTrackNode.mode = 'hidden';\n        }\n      });\n    },\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n      const tracks = captions.getTracks.call(this);\n\n      // Disable captions if setting to -1\n      if (index === -1) {\n        captions.toggle.call(this, false, passive);\n        return;\n      }\n      if (!is.number(index)) {\n        this.debug.warn('Invalid caption argument', index);\n        return;\n      }\n      if (!(index in tracks)) {\n        this.debug.warn('Track not found', index);\n        return;\n      }\n      if (this.captions.currentTrack !== index) {\n        this.captions.currentTrack = index;\n        const track = tracks[index];\n        const {\n          language\n        } = track || {};\n\n        // Store reference to node for invalidation on remove\n        this.captions.currentTrackNode = track;\n\n        // Update settings menu\n        controls.updateSetting.call(this, 'captions');\n\n        // When passive, don't override user preferences\n        if (!passive) {\n          this.captions.language = language;\n          this.storage.set({\n            language\n          });\n        }\n\n        // Handle Vimeo captions\n        if (this.isVimeo) {\n          this.embed.enableTextTrack(language);\n        }\n\n        // Trigger event\n        triggerEvent.call(this, this.media, 'languagechange');\n      }\n\n      // Show captions\n      captions.toggle.call(this, true, passive);\n      if (this.isHTML5 && this.isVideo) {\n        // If we change the active track while a cue is already displayed we need to update it\n        captions.updateCues.call(this);\n      }\n    },\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n      if (!is.string(input)) {\n        this.debug.warn('Invalid language argument', input);\n        return;\n      }\n      // Normalize\n      const language = input.toLowerCase();\n      this.captions.language = language;\n\n      // Set currentTrack\n      const tracks = captions.getTracks.call(this);\n      const track = captions.findTrack.call(this, [language]);\n      captions.set.call(this, tracks.indexOf(track), passive);\n    },\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n      // Handle media or textTracks missing or null\n      const tracks = Array.from((this.media || {}).textTracks || []);\n      // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n      // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n      return tracks.filter(track => !this.isHTML5 || update || this.captions.meta.has(track)).filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n      const tracks = captions.getTracks.call(this);\n      const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n      const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n      let track;\n      languages.every(language => {\n        track = sorted.find(t => t.language === language);\n        return !track; // Break iteration if there is a match\n      });\n\n      // If no match is found but is required, get first\n      return track || (force ? sorted[0] : undefined);\n    },\n    // Get the current track\n    getCurrentTrack() {\n      return captions.getTracks.call(this)[this.currentTrack];\n    },\n    // Get UI label for track\n    getLabel(track) {\n      let currentTrack = track;\n      if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n        currentTrack = captions.getCurrentTrack.call(this);\n      }\n      if (is.track(currentTrack)) {\n        if (!is.empty(currentTrack.label)) {\n          return currentTrack.label;\n        }\n        if (!is.empty(currentTrack.language)) {\n          return track.language.toUpperCase();\n        }\n        return i18n.get('enabled', this.config);\n      }\n      return i18n.get('disabled', this.config);\n    },\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n      // Requires UI\n      if (!this.supported.ui) {\n        return;\n      }\n      if (!is.element(this.elements.captions)) {\n        this.debug.warn('No captions element to render to');\n        return;\n      }\n\n      // Only accept array or empty input\n      if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n        this.debug.warn('updateCues: Invalid input', input);\n        return;\n      }\n      let cues = input;\n\n      // Get cues from track\n      if (!cues) {\n        const track = captions.getCurrentTrack.call(this);\n        cues = Array.from((track || {}).activeCues || []).map(cue => cue.getCueAsHTML()).map(getHTML);\n      }\n\n      // Set new caption text\n      const content = cues.map(cueText => cueText.trim()).join('\\n');\n      const changed = content !== this.elements.captions.innerHTML;\n      if (changed) {\n        // Empty the container and create a new child element\n        emptyElement(this.elements.captions);\n        const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n        caption.innerHTML = content;\n        this.elements.captions.appendChild(caption);\n\n        // Trigger event\n        triggerEvent.call(this, this.media, 'cuechange');\n      }\n    }\n  };\n\n  // ==========================================================================\n  // Plyr default config\n  // ==========================================================================\n\n  const defaults = {\n    // Disable\n    enabled: true,\n    // Custom media title\n    title: '',\n    // Logging to console\n    debug: false,\n    // Auto play (if supported)\n    autoplay: false,\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n    // Allow inline playback on iOS\n    playsinline: true,\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n    // Default volume\n    volume: 1,\n    muted: false,\n    // Pass a custom duration\n    duration: null,\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n    // Invert the current time to be a countdown\n    invertTime: true,\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n    // Force an aspect ratio\n    // The format must be `'w:h'` (e.g. `'16:9'`)\n    ratio: null,\n    // Click video container to play/pause\n    clickToPlay: true,\n    // Auto hide the controls\n    hideControls: true,\n    // Reset to start when playback ended\n    resetOnEnd: false,\n    // Disable the standard context menu\n    disableContextMenu: true,\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.7.8/plyr.svg',\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n    // Quality default\n    quality: {\n      default: 576,\n      // The options to display in the UI, if available for the source media\n      options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n      forced: false,\n      onChange: null\n    },\n    // Set loops\n    loop: {\n      active: false\n      // start: null,\n      // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n      selected: 1,\n      // The options to display in the UI, if available for the source media (e.g. Vimeo and YouTube only support 0.5x-4x)\n      options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 4]\n    },\n    // Keyboard shortcut settings\n    keyboard: {\n      focused: true,\n      global: false\n    },\n    // Display tooltips\n    tooltips: {\n      controls: false,\n      seek: true\n    },\n    // Captions settings\n    captions: {\n      active: false,\n      language: 'auto',\n      // Listen to new tracks added after Plyr is initialized.\n      // This is needed for streaming captions, but may result in unselectable options\n      update: false\n    },\n    // Fullscreen settings\n    fullscreen: {\n      enabled: true,\n      // Allow fullscreen?\n      fallback: true,\n      // Fallback using full viewport/window\n      iosNative: false // Use the native fullscreen in iOS (disables custom controls)\n      // Selector for the fullscreen container so contextual / non-player content can remain visible in fullscreen mode\n      // Non-ancestors of the player element will be ignored\n      // container: null, // defaults to the player element\n    },\n\n    // Local storage\n    storage: {\n      enabled: true,\n      key: 'plyr'\n    },\n    // Default controls\n    controls: ['play-large',\n    // 'restart',\n    // 'rewind',\n    'play',\n    // 'fast-forward',\n    'progress', 'current-time',\n    // 'duration',\n    'mute', 'volume', 'captions', 'settings', 'pip', 'airplay',\n    // 'download',\n    'fullscreen'],\n    settings: ['captions', 'quality', 'speed'],\n    // Localisation\n    i18n: {\n      restart: 'Restart',\n      rewind: 'Rewind {seektime}s',\n      play: 'Play',\n      pause: 'Pause',\n      fastForward: 'Forward {seektime}s',\n      seek: 'Seek',\n      seekLabel: '{currentTime} of {duration}',\n      played: 'Played',\n      buffered: 'Buffered',\n      currentTime: 'Current time',\n      duration: 'Duration',\n      volume: 'Volume',\n      mute: 'Mute',\n      unmute: 'Unmute',\n      enableCaptions: 'Enable captions',\n      disableCaptions: 'Disable captions',\n      download: 'Download',\n      enterFullscreen: 'Enter fullscreen',\n      exitFullscreen: 'Exit fullscreen',\n      frameTitle: 'Player for {title}',\n      captions: 'Captions',\n      settings: 'Settings',\n      pip: 'PIP',\n      menuBack: 'Go back to previous menu',\n      speed: 'Speed',\n      normal: 'Normal',\n      quality: 'Quality',\n      loop: 'Loop',\n      start: 'Start',\n      end: 'End',\n      all: 'All',\n      reset: 'Reset',\n      disabled: 'Disabled',\n      enabled: 'Enabled',\n      advertisement: 'Ad',\n      qualityBadge: {\n        2160: '4K',\n        1440: 'HD',\n        1080: 'HD',\n        720: 'HD',\n        576: 'SD',\n        480: 'SD'\n      }\n    },\n    // URLs\n    urls: {\n      download: null,\n      vimeo: {\n        sdk: 'https://player.vimeo.com/api/player.js',\n        iframe: 'https://player.vimeo.com/video/{0}?{1}',\n        api: 'https://vimeo.com/api/oembed.json?url={0}'\n      },\n      youtube: {\n        sdk: 'https://www.youtube.com/iframe_api',\n        api: 'https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}'\n      },\n      googleIMA: {\n        sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js'\n      }\n    },\n    // Custom control listeners\n    listeners: {\n      seek: null,\n      play: null,\n      pause: null,\n      restart: null,\n      rewind: null,\n      fastForward: null,\n      mute: null,\n      volume: null,\n      captions: null,\n      download: null,\n      fullscreen: null,\n      pip: null,\n      airplay: null,\n      speed: null,\n      quality: null,\n      loop: null,\n      language: null\n    },\n    // Events to watch and bubble\n    events: [\n    // Events to watch on HTML5 media elements and bubble\n    // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n    'ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'seeked', 'emptied', 'ratechange', 'cuechange',\n    // Custom events\n    'download', 'enterfullscreen', 'exitfullscreen', 'captionsenabled', 'captionsdisabled', 'languagechange', 'controlshidden', 'controlsshown', 'ready',\n    // YouTube\n    'statechange',\n    // Quality\n    'qualitychange',\n    // Ads\n    'adsloaded', 'adscontentpause', 'adscontentresume', 'adstarted', 'adsmidpoint', 'adscomplete', 'adsallcomplete', 'adsimpression', 'adsclick'],\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n      editable: 'input, textarea, select, [contenteditable]',\n      container: '.plyr',\n      controls: {\n        container: null,\n        wrapper: '.plyr__controls'\n      },\n      labels: '[data-plyr]',\n      buttons: {\n        play: '[data-plyr=\"play\"]',\n        pause: '[data-plyr=\"pause\"]',\n        restart: '[data-plyr=\"restart\"]',\n        rewind: '[data-plyr=\"rewind\"]',\n        fastForward: '[data-plyr=\"fast-forward\"]',\n        mute: '[data-plyr=\"mute\"]',\n        captions: '[data-plyr=\"captions\"]',\n        download: '[data-plyr=\"download\"]',\n        fullscreen: '[data-plyr=\"fullscreen\"]',\n        pip: '[data-plyr=\"pip\"]',\n        airplay: '[data-plyr=\"airplay\"]',\n        settings: '[data-plyr=\"settings\"]',\n        loop: '[data-plyr=\"loop\"]'\n      },\n      inputs: {\n        seek: '[data-plyr=\"seek\"]',\n        volume: '[data-plyr=\"volume\"]',\n        speed: '[data-plyr=\"speed\"]',\n        language: '[data-plyr=\"language\"]',\n        quality: '[data-plyr=\"quality\"]'\n      },\n      display: {\n        currentTime: '.plyr__time--current',\n        duration: '.plyr__time--duration',\n        buffer: '.plyr__progress__buffer',\n        loop: '.plyr__progress__loop',\n        // Used later\n        volume: '.plyr__volume--display'\n      },\n      progress: '.plyr__progress',\n      captions: '.plyr__captions',\n      caption: '.plyr__caption'\n    },\n    // Class hooks added to the player in different states\n    classNames: {\n      type: 'plyr--{0}',\n      provider: 'plyr--{0}',\n      video: 'plyr__video-wrapper',\n      embed: 'plyr__video-embed',\n      videoFixedRatio: 'plyr__video-wrapper--fixed-ratio',\n      embedContainer: 'plyr__video-embed__container',\n      poster: 'plyr__poster',\n      posterEnabled: 'plyr__poster-enabled',\n      ads: 'plyr__ads',\n      control: 'plyr__control',\n      controlPressed: 'plyr__control--pressed',\n      playing: 'plyr--playing',\n      paused: 'plyr--paused',\n      stopped: 'plyr--stopped',\n      loading: 'plyr--loading',\n      hover: 'plyr--hover',\n      tooltip: 'plyr__tooltip',\n      cues: 'plyr__cues',\n      marker: 'plyr__progress__marker',\n      hidden: 'plyr__sr-only',\n      hideControls: 'plyr--hide-controls',\n      isTouch: 'plyr--is-touch',\n      uiSupported: 'plyr--full-ui',\n      noTransition: 'plyr--no-transition',\n      display: {\n        time: 'plyr__time'\n      },\n      menu: {\n        value: 'plyr__menu__value',\n        badge: 'plyr__badge',\n        open: 'plyr--menu-open'\n      },\n      captions: {\n        enabled: 'plyr--captions-enabled',\n        active: 'plyr--captions-active'\n      },\n      fullscreen: {\n        enabled: 'plyr--fullscreen-enabled',\n        fallback: 'plyr--fullscreen-fallback'\n      },\n      pip: {\n        supported: 'plyr--pip-supported',\n        active: 'plyr--pip-active'\n      },\n      airplay: {\n        supported: 'plyr--airplay-supported',\n        active: 'plyr--airplay-active'\n      },\n      previewThumbnails: {\n        // Tooltip thumbs\n        thumbContainer: 'plyr__preview-thumb',\n        thumbContainerShown: 'plyr__preview-thumb--is-shown',\n        imageContainer: 'plyr__preview-thumb__image-container',\n        timeContainer: 'plyr__preview-thumb__time-container',\n        // Scrubbing\n        scrubbingContainer: 'plyr__preview-scrubbing',\n        scrubbingContainerShown: 'plyr__preview-scrubbing--is-shown'\n      }\n    },\n    // Embed attributes\n    attributes: {\n      embed: {\n        provider: 'data-plyr-provider',\n        id: 'data-plyr-embed-id',\n        hash: 'data-plyr-embed-hash'\n      }\n    },\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n      enabled: false,\n      publisherId: '',\n      tagUrl: ''\n    },\n    // Preview Thumbnails plugin\n    previewThumbnails: {\n      enabled: false,\n      src: ''\n    },\n    // Vimeo plugin\n    vimeo: {\n      byline: false,\n      portrait: false,\n      title: false,\n      speed: true,\n      transparent: false,\n      // Custom settings from Plyr\n      customControls: true,\n      referrerPolicy: null,\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy\n      // Whether the owner of the video has a Pro or Business account\n      // (which allows us to properly hide controls without CSS hacks, etc)\n      premium: false\n    },\n    // YouTube plugin\n    youtube: {\n      rel: 0,\n      // No related vids\n      showinfo: 0,\n      // Hide info\n      iv_load_policy: 3,\n      // Hide annotations\n      modestbranding: 1,\n      // Hide logos as much as possible (they still show one in the corner when paused)\n      // Custom settings from Plyr\n      customControls: true,\n      noCookie: false // Whether to use an alternative version of YouTube without cookies\n    },\n\n    // Media Metadata\n    mediaMetadata: {\n      title: '',\n      artist: '',\n      album: '',\n      artwork: []\n    },\n    // Markers\n    markers: {\n      enabled: false,\n      points: []\n    }\n  };\n\n  // ==========================================================================\n  // Plyr states\n  // ==========================================================================\n\n  const pip = {\n    active: 'picture-in-picture',\n    inactive: 'inline'\n  };\n\n  // ==========================================================================\n  // Plyr supported types and providers\n  // ==========================================================================\n\n  const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo'\n  };\n  const types = {\n    audio: 'audio',\n    video: 'video'\n  };\n\n  /**\n   * Get provider by URL\n   * @param {String} url\n   */\n  function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtube-nocookie\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n      return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n      return providers.vimeo;\n    }\n    return null;\n  }\n\n  // ==========================================================================\n  // Console wrapper\n  // ==========================================================================\n\n  const noop = () => {};\n  class Console {\n    constructor(enabled = false) {\n      this.enabled = window.console && enabled;\n      if (this.enabled) {\n        this.log('Debugging enabled');\n      }\n    }\n    get log() {\n      // eslint-disable-next-line no-console\n      return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n    get warn() {\n      // eslint-disable-next-line no-console\n      return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n    get error() {\n      // eslint-disable-next-line no-console\n      return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n  }\n\n  class Fullscreen {\n    constructor(player) {\n      _defineProperty$1(this, \"onChange\", () => {\n        if (!this.supported) return;\n\n        // Update toggle button\n        const button = this.player.elements.buttons.fullscreen;\n        if (is.element(button)) {\n          button.pressed = this.active;\n        }\n\n        // Always trigger events on the plyr / media element (not a fullscreen container) and let them bubble up\n        const target = this.target === this.player.media ? this.target : this.player.elements.container;\n        // Trigger an event\n        triggerEvent.call(this.player, target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n      });\n      _defineProperty$1(this, \"toggleFallback\", (toggle = false) => {\n        // Store or restore scroll position\n        if (toggle) {\n          this.scrollPosition = {\n            x: window.scrollX ?? 0,\n            y: window.scrollY ?? 0\n          };\n        } else {\n          window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n        }\n\n        // Toggle scroll\n        document.body.style.overflow = toggle ? 'hidden' : '';\n\n        // Toggle class hook\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n        // Force full viewport on iPhone X+\n        if (browser.isIos) {\n          let viewport = document.head.querySelector('meta[name=\"viewport\"]');\n          const property = 'viewport-fit=cover';\n\n          // Inject the viewport meta if required\n          if (!viewport) {\n            viewport = document.createElement('meta');\n            viewport.setAttribute('name', 'viewport');\n          }\n\n          // Check if the property already exists\n          const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\n          if (toggle) {\n            this.cleanupViewport = !hasProperty;\n            if (!hasProperty) viewport.content += `,${property}`;\n          } else if (this.cleanupViewport) {\n            viewport.content = viewport.content.split(',').filter(part => part.trim() !== property).join(',');\n          }\n        }\n\n        // Toggle button and fire events\n        this.onChange();\n      });\n      // Trap focus inside container\n      _defineProperty$1(this, \"trapFocus\", event => {\n        // Bail if iOS/iPadOS, not active, not the tab key\n        if (browser.isIos || browser.isIPadOS || !this.active || event.key !== 'Tab') return;\n\n        // Get the current focused element\n        const focused = document.activeElement;\n        const focusable = getElements.call(this.player, 'a[href], button:not(:disabled), input:not(:disabled), [tabindex]');\n        const [first] = focusable;\n        const last = focusable[focusable.length - 1];\n        if (focused === last && !event.shiftKey) {\n          // Move focus to first element that can be tabbed if Shift isn't used\n          first.focus();\n          event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n          // Move focus to last element that can be tabbed if Shift is used\n          last.focus();\n          event.preventDefault();\n        }\n      });\n      // Update UI\n      _defineProperty$1(this, \"update\", () => {\n        if (this.supported) {\n          let mode;\n          if (this.forceFallback) mode = 'Fallback (forced)';else if (Fullscreen.nativeSupported) mode = 'Native';else mode = 'Fallback';\n          this.player.debug.log(`${mode} fullscreen enabled`);\n        } else {\n          this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.supported);\n      });\n      // Make an element fullscreen\n      _defineProperty$1(this, \"enter\", () => {\n        if (!this.supported) return;\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n          if (this.player.isVimeo) {\n            this.player.embed.requestFullscreen();\n          } else {\n            this.target.webkitEnterFullscreen();\n          }\n        } else if (!Fullscreen.nativeSupported || this.forceFallback) {\n          this.toggleFallback(true);\n        } else if (!this.prefix) {\n          this.target.requestFullscreen({\n            navigationUI: 'hide'\n          });\n        } else if (!is.empty(this.prefix)) {\n          this.target[`${this.prefix}Request${this.property}`]();\n        }\n      });\n      // Bail from fullscreen\n      _defineProperty$1(this, \"exit\", () => {\n        if (!this.supported) return;\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n          if (this.player.isVimeo) {\n            this.player.embed.exitFullscreen();\n          } else {\n            this.target.webkitEnterFullscreen();\n          }\n          silencePromise(this.player.play());\n        } else if (!Fullscreen.nativeSupported || this.forceFallback) {\n          this.toggleFallback(false);\n        } else if (!this.prefix) {\n          (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n          const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n          document[`${this.prefix}${action}${this.property}`]();\n        }\n      });\n      // Toggle state\n      _defineProperty$1(this, \"toggle\", () => {\n        if (!this.active) this.enter();else this.exit();\n      });\n      // Keep reference to parent\n      this.player = player;\n\n      // Get prefix\n      this.prefix = Fullscreen.prefix;\n      this.property = Fullscreen.property;\n\n      // Scroll position\n      this.scrollPosition = {\n        x: 0,\n        y: 0\n      };\n\n      // Force the use of 'full window/browser' rather than fullscreen\n      this.forceFallback = player.config.fullscreen.fallback === 'force';\n\n      // Get the fullscreen element\n      // Checks container is an ancestor, defaults to null\n      this.player.elements.fullscreen = player.config.fullscreen.container && closest$1(this.player.elements.container, player.config.fullscreen.container);\n\n      // Register event listeners\n      // Handle event (incase user presses escape etc)\n      on.call(this.player, document, this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`, () => {\n        // TODO: Filter for target??\n        this.onChange();\n      });\n\n      // Fullscreen toggle on double click\n      on.call(this.player, this.player.elements.container, 'dblclick', event => {\n        // Ignore double click in controls\n        if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n          return;\n        }\n        this.player.listeners.proxy(event, this.toggle, 'fullscreen');\n      });\n\n      // Tap focus when in fullscreen\n      on.call(this, this.player.elements.container, 'keydown', event => this.trapFocus(event));\n\n      // Update the UI\n      this.update();\n    }\n\n    // Determine if native supported\n    static get nativeSupported() {\n      return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled);\n    }\n\n    // If we're actually using native\n    get useNative() {\n      return Fullscreen.nativeSupported && !this.forceFallback;\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n      // No prefix\n      if (is.function(document.exitFullscreen)) return '';\n\n      // Check for fullscreen support by vendor prefix\n      let value = '';\n      const prefixes = ['webkit', 'moz', 'ms'];\n      prefixes.some(pre => {\n        if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n          value = pre;\n          return true;\n        }\n        return false;\n      });\n      return value;\n    }\n    static get property() {\n      return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is supported\n    get supported() {\n      return [\n      // Fullscreen is enabled in config\n      this.player.config.fullscreen.enabled,\n      // Must be a video\n      this.player.isVideo,\n      // Either native is supported or fallback enabled\n      Fullscreen.nativeSupported || this.player.config.fullscreen.fallback,\n      // YouTube has no way to trigger fullscreen, so on devices with no native support, playsinline\n      // must be enabled and iosNative fullscreen must be disabled to offer the fullscreen fallback\n      !this.player.isYouTube || Fullscreen.nativeSupported || !browser.isIos || this.player.config.playsinline && !this.player.config.fullscreen.iosNative].every(Boolean);\n    }\n\n    // Get active state\n    get active() {\n      if (!this.supported) return false;\n\n      // Fallback using classname\n      if (!Fullscreen.nativeSupported || this.forceFallback) {\n        return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n      }\n      const element = !this.prefix ? this.target.getRootNode().fullscreenElement : this.target.getRootNode()[`${this.prefix}${this.property}Element`];\n      return element && element.shadowRoot ? element === this.target.getRootNode().host : element === this.target;\n    }\n\n    // Get target element\n    get target() {\n      return browser.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.fullscreen ?? this.player.elements.container;\n    }\n  }\n\n  // ==========================================================================\n  // Load image avoiding xhr/fetch CORS issues\n  // Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n  // By default it checks if it is at least 1px, but you can add a second argument to change this\n  // ==========================================================================\n\n  function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      const handler = () => {\n        delete image.onload;\n        delete image.onerror;\n        (image.naturalWidth >= minWidth ? resolve : reject)(image);\n      };\n      Object.assign(image, {\n        onload: handler,\n        onerror: handler,\n        src\n      });\n    });\n  }\n\n  // ==========================================================================\n  const ui = {\n    addStyleHook() {\n      toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n      toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n      if (toggle && this.isHTML5) {\n        this.media.setAttribute('controls', '');\n      } else {\n        this.media.removeAttribute('controls');\n      }\n    },\n    // Setup the UI\n    build() {\n      // Re-attach media element listeners\n      // TODO: Use event bubbling?\n      this.listeners.media();\n\n      // Don't setup interface if no support\n      if (!this.supported.ui) {\n        this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n        // Restore native controls\n        ui.toggleNativeControls.call(this, true);\n\n        // Bail\n        return;\n      }\n\n      // Inject custom controls if not present\n      if (!is.element(this.elements.controls)) {\n        // Inject custom controls\n        controls.inject.call(this);\n\n        // Re-attach control listeners\n        this.listeners.controls();\n      }\n\n      // Remove native controls\n      ui.toggleNativeControls.call(this);\n\n      // Setup captions for HTML5\n      if (this.isHTML5) {\n        captions.setup.call(this);\n      }\n\n      // Reset volume\n      this.volume = null;\n\n      // Reset mute state\n      this.muted = null;\n\n      // Reset loop state\n      this.loop = null;\n\n      // Reset quality setting\n      this.quality = null;\n\n      // Reset speed\n      this.speed = null;\n\n      // Reset volume display\n      controls.updateVolume.call(this);\n\n      // Reset time display\n      controls.timeUpdate.call(this);\n\n      // Reset duration display\n      controls.durationUpdate.call(this);\n\n      // Update the UI\n      ui.checkPlaying.call(this);\n\n      // Check for picture-in-picture support\n      toggleClass(this.elements.container, this.config.classNames.pip.supported, support.pip && this.isHTML5 && this.isVideo);\n\n      // Check for airplay support\n      toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n      // Add touch class\n      toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n      // Ready for API calls\n      this.ready = true;\n\n      // Ready event at end of execution stack\n      setTimeout(() => {\n        triggerEvent.call(this, this.media, 'ready');\n      }, 0);\n\n      // Set the title\n      ui.setTitle.call(this);\n\n      // Assure the poster image is set, if the property was added before the element was created\n      if (this.poster) {\n        ui.setPoster.call(this, this.poster, false).catch(() => {});\n      }\n\n      // Manually set the duration if user has overridden it.\n      // The event listeners for it doesn't get called if preload is disabled (#701)\n      if (this.config.duration) {\n        controls.durationUpdate.call(this);\n      }\n\n      // Media metadata\n      if (this.config.mediaMetadata) {\n        controls.setMediaMetadata.call(this);\n      }\n    },\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n      // Find the current text\n      let label = i18n.get('play', this.config);\n\n      // If there's a media title set, use that for the label\n      if (is.string(this.config.title) && !is.empty(this.config.title)) {\n        label += `, ${this.config.title}`;\n      }\n\n      // If there's a play button, set label\n      Array.from(this.elements.buttons.play || []).forEach(button => {\n        button.setAttribute('aria-label', label);\n      });\n\n      // Set iframe title\n      // https://github.com/sampotts/plyr/issues/124\n      if (this.isEmbed) {\n        const iframe = getElement.call(this, 'iframe');\n        if (!is.element(iframe)) {\n          return;\n        }\n\n        // Default to media type\n        const title = !is.empty(this.config.title) ? this.config.title : 'video';\n        const format = i18n.get('frameTitle', this.config);\n        iframe.setAttribute('title', format.replace('{title}', title));\n      }\n    },\n    // Toggle poster\n    togglePoster(enable) {\n      toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n      // Don't override if call is passive\n      if (passive && this.poster) {\n        return Promise.reject(new Error('Poster already set'));\n      }\n\n      // Set property synchronously to respect the call order\n      this.media.setAttribute('data-poster', poster);\n\n      // Show the poster\n      this.elements.poster.removeAttribute('hidden');\n\n      // Wait until ui is ready\n      return ready.call(this)\n      // Load image\n      .then(() => loadImage(poster)).catch(error => {\n        // Hide poster on error unless it's been set by another call\n        if (poster === this.poster) {\n          ui.togglePoster.call(this, false);\n        }\n        // Rethrow\n        throw error;\n      }).then(() => {\n        // Prevent race conditions\n        if (poster !== this.poster) {\n          throw new Error('setPoster cancelled by later call to setPoster');\n        }\n      }).then(() => {\n        Object.assign(this.elements.poster.style, {\n          backgroundImage: `url('${poster}')`,\n          // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n          backgroundSize: ''\n        });\n        ui.togglePoster.call(this, true);\n        return poster;\n      });\n    },\n    // Check playing state\n    checkPlaying(event) {\n      // Class hooks\n      toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n      toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n      toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n      // Set state\n      Array.from(this.elements.buttons.play || []).forEach(target => {\n        Object.assign(target, {\n          pressed: this.playing\n        });\n        target.setAttribute('aria-label', i18n.get(this.playing ? 'pause' : 'play', this.config));\n      });\n\n      // Only update controls on non timeupdate events\n      if (is.event(event) && event.type === 'timeupdate') {\n        return;\n      }\n\n      // Toggle controls\n      ui.toggleControls.call(this);\n    },\n    // Check if media is loading\n    checkLoading(event) {\n      this.loading = ['stalled', 'waiting'].includes(event.type);\n\n      // Clear timer\n      clearTimeout(this.timers.loading);\n\n      // Timer to prevent flicker when seeking\n      this.timers.loading = setTimeout(() => {\n        // Update progress bar loading class state\n        toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n        // Update controls visibility\n        ui.toggleControls.call(this);\n      }, this.loading ? 250 : 0);\n    },\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n      const {\n        controls: controlsElement\n      } = this.elements;\n      if (controlsElement && this.config.hideControls) {\n        // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n        const recentTouchSeek = this.touch && this.lastSeekTime + 2000 > Date.now();\n\n        // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n        this.toggleControls(Boolean(force || this.loading || this.paused || controlsElement.pressed || controlsElement.hover || recentTouchSeek));\n      }\n    },\n    // Migrate any custom properties from the media to the parent\n    migrateStyles() {\n      // Loop through values (as they are the keys when the object is spread 🤔)\n      Object.values({\n        ...this.media.style\n      })\n      // We're only fussed about Plyr specific properties\n      .filter(key => !is.empty(key) && is.string(key) && key.startsWith('--plyr')).forEach(key => {\n        // Set on the container\n        this.elements.container.style.setProperty(key, this.media.style.getPropertyValue(key));\n\n        // Clean up from media element\n        this.media.style.removeProperty(key);\n      });\n\n      // Remove attribute if empty\n      if (is.empty(this.media.style)) {\n        this.media.removeAttribute('style');\n      }\n    }\n  };\n\n  class Listeners {\n    constructor(_player) {\n      // Device is touch enabled\n      _defineProperty$1(this, \"firstTouch\", () => {\n        const {\n          player\n        } = this;\n        const {\n          elements\n        } = player;\n        player.touch = true;\n\n        // Add touch class\n        toggleClass(elements.container, player.config.classNames.isTouch, true);\n      });\n      // Global window & document listeners\n      _defineProperty$1(this, \"global\", (toggle = true) => {\n        const {\n          player\n        } = this;\n\n        // Keyboard shortcuts\n        if (player.config.keyboard.global) {\n          toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(player, document.body, 'touchstart', this.firstTouch);\n      });\n      // Container listeners\n      _defineProperty$1(this, \"container\", () => {\n        const {\n          player\n        } = this;\n        const {\n          config,\n          elements,\n          timers\n        } = player;\n\n        // Keyboard shortcuts\n        if (!config.keyboard.global && config.keyboard.focused) {\n          on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(player, elements.container, 'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen', event => {\n          const {\n            controls: controlsElement\n          } = elements;\n\n          // Remove button states for fullscreen\n          if (controlsElement && event.type === 'enterfullscreen') {\n            controlsElement.pressed = false;\n            controlsElement.hover = false;\n          }\n\n          // Show, then hide after a timeout unless another control event occurs\n          const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n          let delay = 0;\n          if (show) {\n            ui.toggleControls.call(player, true);\n            // Use longer timeout for touch devices\n            delay = player.touch ? 3000 : 2000;\n          }\n\n          // Clear timer\n          clearTimeout(timers.controls);\n\n          // Set new timer to prevent flicker when seeking\n          timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n        });\n\n        // Set a gutter for Vimeo\n        const setGutter = () => {\n          if (!player.isVimeo || player.config.vimeo.premium) {\n            return;\n          }\n          const target = elements.wrapper;\n          const {\n            active\n          } = player.fullscreen;\n          const [videoWidth, videoHeight] = getAspectRatio.call(player);\n          const useNativeAspectRatio = supportsCSS(`aspect-ratio: ${videoWidth} / ${videoHeight}`);\n\n          // If not active, remove styles\n          if (!active) {\n            if (useNativeAspectRatio) {\n              target.style.width = null;\n              target.style.height = null;\n            } else {\n              target.style.maxWidth = null;\n              target.style.margin = null;\n            }\n            return;\n          }\n\n          // Determine which dimension will overflow and constrain view\n          const [viewportWidth, viewportHeight] = getViewportSize();\n          const overflow = viewportWidth / viewportHeight > videoWidth / videoHeight;\n          if (useNativeAspectRatio) {\n            target.style.width = overflow ? 'auto' : '100%';\n            target.style.height = overflow ? '100%' : 'auto';\n          } else {\n            target.style.maxWidth = overflow ? `${viewportHeight / videoHeight * videoWidth}px` : null;\n            target.style.margin = overflow ? '0 auto' : null;\n          }\n        };\n\n        // Handle resizing\n        const resized = () => {\n          clearTimeout(timers.resized);\n          timers.resized = setTimeout(setGutter, 50);\n        };\n        on.call(player, elements.container, 'enterfullscreen exitfullscreen', event => {\n          const {\n            target\n          } = player.fullscreen;\n\n          // Ignore events not from target\n          if (target !== elements.container) {\n            return;\n          }\n\n          // If it's not an embed and no ratio specified\n          if (!player.isEmbed && is.empty(player.config.ratio)) {\n            return;\n          }\n\n          // Set Vimeo gutter\n          setGutter();\n\n          // Watch for resizes\n          const method = event.type === 'enterfullscreen' ? on : off;\n          method.call(player, window, 'resize', resized);\n        });\n      });\n      // Listen for media events\n      _defineProperty$1(this, \"media\", () => {\n        const {\n          player\n        } = this;\n        const {\n          elements\n        } = player;\n\n        // Time change on media\n        on.call(player, player.media, 'timeupdate seeking seeked', event => controls.timeUpdate.call(player, event));\n\n        // Display duration\n        on.call(player, player.media, 'durationchange loadeddata loadedmetadata', event => controls.durationUpdate.call(player, event));\n\n        // Handle the media finishing\n        on.call(player, player.media, 'ended', () => {\n          // Show poster on end\n          if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n            // Restart\n            player.restart();\n\n            // Call pause otherwise IE11 will start playing the video again\n            player.pause();\n          }\n        });\n\n        // Check for buffer progress\n        on.call(player, player.media, 'progress playing seeking seeked', event => controls.updateProgress.call(player, event));\n\n        // Handle volume changes\n        on.call(player, player.media, 'volumechange', event => controls.updateVolume.call(player, event));\n\n        // Handle play/pause\n        on.call(player, player.media, 'playing play pause ended emptied timeupdate', event => ui.checkPlaying.call(player, event));\n\n        // Loading state\n        on.call(player, player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(player, event));\n\n        // Click video\n        if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n          // Re-fetch the wrapper\n          const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n          // Bail if there's no wrapper (this should never happen)\n          if (!is.element(wrapper)) {\n            return;\n          }\n\n          // On click play, pause or restart\n          on.call(player, elements.container, 'click', event => {\n            const targets = [elements.container, wrapper];\n\n            // Ignore if click if not container or in video wrapper\n            if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n              return;\n            }\n\n            // Touch devices will just show controls (if hidden)\n            if (player.touch && player.config.hideControls) {\n              return;\n            }\n            if (player.ended) {\n              this.proxy(event, player.restart, 'restart');\n              this.proxy(event, () => {\n                silencePromise(player.play());\n              }, 'play');\n            } else {\n              this.proxy(event, () => {\n                silencePromise(player.togglePlay());\n              }, 'play');\n            }\n          });\n        }\n\n        // Disable right click\n        if (player.supported.ui && player.config.disableContextMenu) {\n          on.call(player, elements.wrapper, 'contextmenu', event => {\n            event.preventDefault();\n          }, false);\n        }\n\n        // Volume change\n        on.call(player, player.media, 'volumechange', () => {\n          // Save to storage\n          player.storage.set({\n            volume: player.volume,\n            muted: player.muted\n          });\n        });\n\n        // Speed change\n        on.call(player, player.media, 'ratechange', () => {\n          // Update UI\n          controls.updateSetting.call(player, 'speed');\n\n          // Save to storage\n          player.storage.set({\n            speed: player.speed\n          });\n        });\n\n        // Quality change\n        on.call(player, player.media, 'qualitychange', event => {\n          // Update UI\n          controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n        });\n\n        // Update download link when ready and if quality changes\n        on.call(player, player.media, 'ready qualitychange', () => {\n          controls.setDownloadUrl.call(player);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n        on.call(player, player.media, proxyEvents, event => {\n          let {\n            detail = {}\n          } = event;\n\n          // Get error details from media\n          if (event.type === 'error') {\n            detail = player.media.error;\n          }\n          triggerEvent.call(player, elements.container, event.type, true, detail);\n        });\n      });\n      // Run default and custom handlers\n      _defineProperty$1(this, \"proxy\", (event, defaultHandler, customHandlerKey) => {\n        const {\n          player\n        } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n          returned = customHandler.call(player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned !== false && is.function(defaultHandler)) {\n          defaultHandler.call(player, event);\n        }\n      });\n      // Trigger custom and default handlers\n      _defineProperty$1(this, \"bind\", (element, type, defaultHandler, customHandlerKey, passive = true) => {\n        const {\n          player\n        } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        on.call(player, element, type, event => this.proxy(event, defaultHandler, customHandlerKey), passive && !hasCustomHandler);\n      });\n      // Listen for control events\n      _defineProperty$1(this, \"controls\", () => {\n        const {\n          player\n        } = this;\n        const {\n          elements\n        } = player;\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Play/pause toggle\n        if (elements.buttons.play) {\n          Array.from(elements.buttons.play).forEach(button => {\n            this.bind(button, 'click', () => {\n              silencePromise(player.togglePlay());\n            }, 'play');\n          });\n        }\n\n        // Pause\n        this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n        // Rewind\n        this.bind(elements.buttons.rewind, 'click', () => {\n          // Record seek time so we can prevent hiding controls for a few seconds after rewind\n          player.lastSeekTime = Date.now();\n          player.rewind();\n        }, 'rewind');\n\n        // Rewind\n        this.bind(elements.buttons.fastForward, 'click', () => {\n          // Record seek time so we can prevent hiding controls for a few seconds after fast forward\n          player.lastSeekTime = Date.now();\n          player.forward();\n        }, 'fastForward');\n\n        // Mute toggle\n        this.bind(elements.buttons.mute, 'click', () => {\n          player.muted = !player.muted;\n        }, 'mute');\n\n        // Captions toggle\n        this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n        // Download\n        this.bind(elements.buttons.download, 'click', () => {\n          triggerEvent.call(player, player.media, 'download');\n        }, 'download');\n\n        // Fullscreen toggle\n        this.bind(elements.buttons.fullscreen, 'click', () => {\n          player.fullscreen.toggle();\n        }, 'fullscreen');\n\n        // Picture-in-Picture\n        this.bind(elements.buttons.pip, 'click', () => {\n          player.pip = 'toggle';\n        }, 'pip');\n\n        // Airplay\n        this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n        // Settings menu - click toggle\n        this.bind(elements.buttons.settings, 'click', event => {\n          // Prevent the document click listener closing the menu\n          event.stopPropagation();\n          event.preventDefault();\n          controls.toggleMenu.call(player, event);\n        }, null, false); // Can't be passive as we're preventing default\n\n        // Settings menu - keyboard toggle\n        // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n        this.bind(elements.buttons.settings, 'keyup', event => {\n          if (![' ', 'Enter'].includes(event.key)) {\n            return;\n          }\n\n          // Because return triggers a click anyway, all we need to do is set focus\n          if (event.key === 'Enter') {\n            controls.focusFirstMenuItem.call(player, null, true);\n            return;\n          }\n\n          // Prevent scroll\n          event.preventDefault();\n\n          // Prevent playing video (Firefox)\n          event.stopPropagation();\n\n          // Toggle menu\n          controls.toggleMenu.call(player, event);\n        }, null, false // Can't be passive as we're preventing default\n        );\n\n        // Escape closes menu\n        this.bind(elements.settings.menu, 'keydown', event => {\n          if (event.key === 'Escape') {\n            controls.toggleMenu.call(player, event);\n          }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(elements.inputs.seek, 'mousedown mousemove', event => {\n          const rect = elements.progress.getBoundingClientRect();\n          const percent = 100 / rect.width * (event.pageX - rect.left);\n          event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n          const seek = event.currentTarget;\n          const attribute = 'play-on-seeked';\n          if (is.keyboardEvent(event) && !['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n            return;\n          }\n\n          // Record seek time so we can prevent hiding controls for a few seconds after seek\n          player.lastSeekTime = Date.now();\n\n          // Was playing before?\n          const play = seek.hasAttribute(attribute);\n          // Done seeking\n          const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n          // If we're done seeking and it was playing, resume playback\n          if (play && done) {\n            seek.removeAttribute(attribute);\n            silencePromise(player.play());\n          } else if (!done && player.playing) {\n            seek.setAttribute(attribute, '');\n            player.pause();\n          }\n        });\n\n        // Fix range inputs on iOS\n        // Super weird iOS bug where after you interact with an <input type=\"range\">,\n        // it takes over further interactions on the page. This is a hack\n        if (browser.isIos) {\n          const inputs = getElements.call(player, 'input[type=\"range\"]');\n          Array.from(inputs).forEach(input => this.bind(input, inputEvent, event => repaint(event.target)));\n        }\n\n        // Seek\n        this.bind(elements.inputs.seek, inputEvent, event => {\n          const seek = event.currentTarget;\n          // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n          let seekTo = seek.getAttribute('seek-value');\n          if (is.empty(seekTo)) {\n            seekTo = seek.value;\n          }\n          seek.removeAttribute('seek-value');\n          player.currentTime = seekTo / seek.max * player.duration;\n        }, 'seek');\n\n        // Seek tooltip\n        this.bind(elements.progress, 'mouseenter mouseleave mousemove', event => controls.updateSeekTooltip.call(player, event));\n\n        // Preview thumbnails plugin\n        // TODO: Really need to work on some sort of plug-in wide event bus or pub-sub for this\n        this.bind(elements.progress, 'mousemove touchmove', event => {\n          const {\n            previewThumbnails\n          } = player;\n          if (previewThumbnails && previewThumbnails.loaded) {\n            previewThumbnails.startMove(event);\n          }\n        });\n\n        // Hide thumbnail preview - on mouse click, mouse leave, and video play/seek. All four are required, e.g., for buffering\n        this.bind(elements.progress, 'mouseleave touchend click', () => {\n          const {\n            previewThumbnails\n          } = player;\n          if (previewThumbnails && previewThumbnails.loaded) {\n            previewThumbnails.endMove(false, true);\n          }\n        });\n\n        // Show scrubbing preview\n        this.bind(elements.progress, 'mousedown touchstart', event => {\n          const {\n            previewThumbnails\n          } = player;\n          if (previewThumbnails && previewThumbnails.loaded) {\n            previewThumbnails.startScrubbing(event);\n          }\n        });\n        this.bind(elements.progress, 'mouseup touchend', event => {\n          const {\n            previewThumbnails\n          } = player;\n          if (previewThumbnails && previewThumbnails.loaded) {\n            previewThumbnails.endScrubbing(event);\n          }\n        });\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebKit) {\n          Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(element => {\n            this.bind(element, 'input', event => controls.updateRangeFill.call(player, event.target));\n          });\n        }\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n          this.bind(elements.display.currentTime, 'click', () => {\n            // Do nothing if we're at the start\n            if (player.currentTime === 0) {\n              return;\n            }\n            player.config.invertTime = !player.config.invertTime;\n            controls.timeUpdate.call(player);\n          });\n        }\n\n        // Volume\n        this.bind(elements.inputs.volume, inputEvent, event => {\n          player.volume = event.target.value;\n        }, 'volume');\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mouseenter mouseleave', event => {\n          elements.controls.hover = !player.touch && event.type === 'mouseenter';\n        });\n\n        // Also update controls.hover state for any non-player children of fullscreen element (as above)\n        if (elements.fullscreen) {\n          Array.from(elements.fullscreen.children).filter(c => !c.contains(elements.container)).forEach(child => {\n            this.bind(child, 'mouseenter mouseleave', event => {\n              if (elements.controls) {\n                elements.controls.hover = !player.touch && event.type === 'mouseenter';\n              }\n            });\n          });\n        }\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n          elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Show controls when they receive focus (e.g., when using keyboard tab key)\n        this.bind(elements.controls, 'focusin', () => {\n          const {\n            config,\n            timers\n          } = player;\n\n          // Skip transition to prevent focus from scrolling the parent element\n          toggleClass(elements.controls, config.classNames.noTransition, true);\n\n          // Toggle\n          ui.toggleControls.call(player, true);\n\n          // Restore transition\n          setTimeout(() => {\n            toggleClass(elements.controls, config.classNames.noTransition, false);\n          }, 0);\n\n          // Delay a little more for mouse users\n          const delay = this.touch ? 3000 : 4000;\n\n          // Clear timer\n          clearTimeout(timers.controls);\n\n          // Hide again after delay\n          timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n        });\n\n        // Mouse wheel for volume\n        this.bind(elements.inputs.volume, 'wheel', event => {\n          // Detect \"natural\" scroll - supported on OS X Safari only\n          // Other browsers on OS X will be inverted until support improves\n          const inverted = event.webkitDirectionInvertedFromDevice;\n          // Get delta from event. Invert if `inverted` is true\n          const [x, y] = [event.deltaX, -event.deltaY].map(value => inverted ? -value : value);\n          // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n          const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n          // Change the volume by 2%\n          player.increaseVolume(direction / 50);\n\n          // Don't break page scrolling at max and min\n          const {\n            volume\n          } = player.media;\n          if (direction === 1 && volume < 1 || direction === -1 && volume > 0) {\n            event.preventDefault();\n          }\n        }, 'volume', false);\n      });\n      this.player = _player;\n      this.lastKey = null;\n      this.focusTimer = null;\n      this.lastKeyDown = null;\n      this.handleKey = this.handleKey.bind(this);\n      this.toggleMenu = this.toggleMenu.bind(this);\n      this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n      const {\n        player\n      } = this;\n      const {\n        elements\n      } = player;\n      const {\n        key,\n        type,\n        altKey,\n        ctrlKey,\n        metaKey,\n        shiftKey\n      } = event;\n      const pressed = type === 'keydown';\n      const repeat = pressed && key === this.lastKey;\n\n      // Bail if a modifier key is set\n      if (altKey || ctrlKey || metaKey || shiftKey) {\n        return;\n      }\n\n      // If the event is bubbled from the media element\n      // Firefox doesn't get the key for whatever reason\n      if (!key) {\n        return;\n      }\n\n      // Seek by increment\n      const seekByIncrement = increment => {\n        // Divide the max duration into 10th's and times by the number value\n        player.currentTime = player.duration / 10 * increment;\n      };\n\n      // Handle the key on keydown\n      // Reset on keyup\n      if (pressed) {\n        // Check focused element\n        // and if the focused element is not editable (e.g. text input)\n        // and any that accept key input http://webaim.org/techniques/keyboard/\n        const focused = document.activeElement;\n        if (is.element(focused)) {\n          const {\n            editable\n          } = player.config.selectors;\n          const {\n            seek\n          } = elements.inputs;\n          if (focused !== seek && matches(focused, editable)) {\n            return;\n          }\n          if (event.key === ' ' && matches(focused, 'button, [role^=\"menuitem\"]')) {\n            return;\n          }\n        }\n\n        // Which keys should we prevent default\n        const preventDefault = [' ', 'ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'c', 'f', 'k', 'l', 'm'];\n\n        // If the key is found prevent default (e.g. prevent scrolling for arrows)\n        if (preventDefault.includes(key)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        switch (key) {\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9':\n            if (!repeat) {\n              seekByIncrement(parseInt(key, 10));\n            }\n            break;\n          case ' ':\n          case 'k':\n            if (!repeat) {\n              silencePromise(player.togglePlay());\n            }\n            break;\n          case 'ArrowUp':\n            player.increaseVolume(0.1);\n            break;\n          case 'ArrowDown':\n            player.decreaseVolume(0.1);\n            break;\n          case 'm':\n            if (!repeat) {\n              player.muted = !player.muted;\n            }\n            break;\n          case 'ArrowRight':\n            player.forward();\n            break;\n          case 'ArrowLeft':\n            player.rewind();\n            break;\n          case 'f':\n            player.fullscreen.toggle();\n            break;\n          case 'c':\n            if (!repeat) {\n              player.toggleCaptions();\n            }\n            break;\n          case 'l':\n            player.loop = !player.loop;\n            break;\n        }\n\n        // Escape is handle natively when in full screen\n        // So we only need to worry about non native\n        if (key === 'Escape' && !player.fullscreen.usingNative && player.fullscreen.active) {\n          player.fullscreen.toggle();\n        }\n\n        // Store last key for next cycle\n        this.lastKey = key;\n      } else {\n        this.lastKey = null;\n      }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n      controls.toggleMenu.call(this.player, event);\n    }\n  }\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var loadjs_umd = createCommonjsModule(function (module, exports) {\n    (function (root, factory) {\n      {\n        module.exports = factory();\n      }\n    })(commonjsGlobal, function () {\n      /**\n       * Global dependencies.\n       * @global {Object} document - DOM\n       */\n\n      var devnull = function () {},\n        bundleIdCache = {},\n        bundleResultCache = {},\n        bundleCallbackQueue = {};\n\n      /**\n       * Subscribe to bundle load event.\n       * @param {string[]} bundleIds - Bundle ids\n       * @param {Function} callbackFn - The callback function\n       */\n      function subscribe(bundleIds, callbackFn) {\n        // listify\n        bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n        var depsNotFound = [],\n          i = bundleIds.length,\n          numWaiting = i,\n          fn,\n          bundleId,\n          r,\n          q;\n\n        // define callback function\n        fn = function (bundleId, pathsNotFound) {\n          if (pathsNotFound.length) depsNotFound.push(bundleId);\n          numWaiting--;\n          if (!numWaiting) callbackFn(depsNotFound);\n        };\n\n        // register callback\n        while (i--) {\n          bundleId = bundleIds[i];\n\n          // execute callback if in result cache\n          r = bundleResultCache[bundleId];\n          if (r) {\n            fn(bundleId, r);\n            continue;\n          }\n\n          // add to callback queue\n          q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n          q.push(fn);\n        }\n      }\n\n      /**\n       * Publish bundle load event.\n       * @param {string} bundleId - Bundle id\n       * @param {string[]} pathsNotFound - List of files not found\n       */\n      function publish(bundleId, pathsNotFound) {\n        // exit if id isn't defined\n        if (!bundleId) return;\n        var q = bundleCallbackQueue[bundleId];\n\n        // cache result\n        bundleResultCache[bundleId] = pathsNotFound;\n\n        // exit if queue is empty\n        if (!q) return;\n\n        // empty callback queue\n        while (q.length) {\n          q[0](bundleId, pathsNotFound);\n          q.splice(0, 1);\n        }\n      }\n\n      /**\n       * Execute callbacks.\n       * @param {Object or Function} args - The callback args\n       * @param {string[]} depsNotFound - List of dependencies not found\n       */\n      function executeCallbacks(args, depsNotFound) {\n        // accept function as argument\n        if (args.call) args = {\n          success: args\n        };\n\n        // success and error callbacks\n        if (depsNotFound.length) (args.error || devnull)(depsNotFound);else (args.success || devnull)(args);\n      }\n\n      /**\n       * Load individual file.\n       * @param {string} path - The file path\n       * @param {Function} callbackFn - The callback function\n       */\n      function loadFile(path, callbackFn, args, numTries) {\n        var doc = document,\n          async = args.async,\n          maxTries = (args.numRetries || 0) + 1,\n          beforeCallbackFn = args.before || devnull,\n          pathname = path.replace(/[\\?|#].*$/, ''),\n          pathStripped = path.replace(/^(css|img)!/, ''),\n          isLegacyIECss,\n          e;\n        numTries = numTries || 0;\n        if (/(^css!|\\.css$)/.test(pathname)) {\n          // css\n          e = doc.createElement('link');\n          e.rel = 'stylesheet';\n          e.href = pathStripped;\n\n          // tag IE9+\n          isLegacyIECss = 'hideFocus' in e;\n\n          // use preload in IE Edge (to detect load errors)\n          if (isLegacyIECss && e.relList) {\n            isLegacyIECss = 0;\n            e.rel = 'preload';\n            e.as = 'style';\n          }\n        } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n          // image\n          e = doc.createElement('img');\n          e.src = pathStripped;\n        } else {\n          // javascript\n          e = doc.createElement('script');\n          e.src = path;\n          e.async = async === undefined ? true : async;\n        }\n        e.onload = e.onerror = e.onbeforeload = function (ev) {\n          var result = ev.type[0];\n\n          // treat empty stylesheets as failures to get around lack of onerror\n          // support in IE9-11\n          if (isLegacyIECss) {\n            try {\n              if (!e.sheet.cssText.length) result = 'e';\n            } catch (x) {\n              // sheets objects created from load errors don't allow access to\n              // `cssText` (unless error is Code:18 SecurityError)\n              if (x.code != 18) result = 'e';\n            }\n          }\n\n          // handle retries in case of load failure\n          if (result == 'e') {\n            // increment counter\n            numTries += 1;\n\n            // exit function and try again\n            if (numTries < maxTries) {\n              return loadFile(path, callbackFn, args, numTries);\n            }\n          } else if (e.rel == 'preload' && e.as == 'style') {\n            // activate preloaded stylesheets\n            return e.rel = 'stylesheet'; // jshint ignore:line\n          }\n\n          // execute callback\n          callbackFn(path, result, ev.defaultPrevented);\n        };\n\n        // add to document (unless callback returns `false`)\n        if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n      }\n\n      /**\n       * Load multiple files.\n       * @param {string[]} paths - The file paths\n       * @param {Function} callbackFn - The callback function\n       */\n      function loadFiles(paths, callbackFn, args) {\n        // listify paths\n        paths = paths.push ? paths : [paths];\n        var numWaiting = paths.length,\n          x = numWaiting,\n          pathsNotFound = [],\n          fn,\n          i;\n\n        // define callback function\n        fn = function (path, result, defaultPrevented) {\n          // handle error\n          if (result == 'e') pathsNotFound.push(path);\n\n          // handle beforeload event. If defaultPrevented then that means the load\n          // will be blocked (ex. Ghostery/ABP on Safari)\n          if (result == 'b') {\n            if (defaultPrevented) pathsNotFound.push(path);else return;\n          }\n          numWaiting--;\n          if (!numWaiting) callbackFn(pathsNotFound);\n        };\n\n        // load scripts\n        for (i = 0; i < x; i++) loadFile(paths[i], fn, args);\n      }\n\n      /**\n       * Initiate script load and register bundle.\n       * @param {(string|string[])} paths - The file paths\n       * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n       *   callback or (3) object literal with success/error arguments, numRetries,\n       *   etc.\n       * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n       *   literal with success/error arguments, numRetries, etc.\n       */\n      function loadjs(paths, arg1, arg2) {\n        var bundleId, args;\n\n        // bundleId (if string)\n        if (arg1 && arg1.trim) bundleId = arg1;\n\n        // args (default is {})\n        args = (bundleId ? arg2 : arg1) || {};\n\n        // throw error if bundle is already defined\n        if (bundleId) {\n          if (bundleId in bundleIdCache) {\n            throw \"LoadJS\";\n          } else {\n            bundleIdCache[bundleId] = true;\n          }\n        }\n        function loadFn(resolve, reject) {\n          loadFiles(paths, function (pathsNotFound) {\n            // execute callbacks\n            executeCallbacks(args, pathsNotFound);\n\n            // resolve Promise\n            if (resolve) {\n              executeCallbacks({\n                success: resolve,\n                error: reject\n              }, pathsNotFound);\n            }\n\n            // publish bundle load event\n            publish(bundleId, pathsNotFound);\n          }, args);\n        }\n        if (args.returnPromise) return new Promise(loadFn);else loadFn();\n      }\n\n      /**\n       * Execute callbacks when dependencies have been satisfied.\n       * @param {(string|string[])} deps - List of bundle ids\n       * @param {Object} args - success/error arguments\n       */\n      loadjs.ready = function ready(deps, args) {\n        // subscribe to bundle load event\n        subscribe(deps, function (depsNotFound) {\n          // execute callbacks\n          executeCallbacks(args, depsNotFound);\n        });\n        return loadjs;\n      };\n\n      /**\n       * Manually satisfy bundle dependencies.\n       * @param {string} bundleId - The bundle id\n       */\n      loadjs.done = function done(bundleId) {\n        publish(bundleId, []);\n      };\n\n      /**\n       * Reset loadjs dependencies statuses\n       */\n      loadjs.reset = function reset() {\n        bundleIdCache = {};\n        bundleResultCache = {};\n        bundleCallbackQueue = {};\n      };\n\n      /**\n       * Determine if bundle has already been defined\n       * @param String} bundleId - The bundle id\n       */\n      loadjs.isDefined = function isDefined(bundleId) {\n        return bundleId in bundleIdCache;\n      };\n\n      // export\n      return loadjs;\n    });\n  });\n\n  // ==========================================================================\n  function loadScript(url) {\n    return new Promise((resolve, reject) => {\n      loadjs_umd(url, {\n        success: resolve,\n        error: reject\n      });\n    });\n  }\n\n  // ==========================================================================\n\n  // Parse Vimeo ID from URL\n  function parseId$1(url) {\n    if (is.empty(url)) {\n      return null;\n    }\n    if (is.number(Number(url))) {\n      return url;\n    }\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n  }\n\n  // Try to extract a hash for private videos from the URL\n  function parseHash(url) {\n    /* This regex matches a hexadecimal hash if given in any of these forms:\n     *  - [https://player.]vimeo.com/video/{id}/{hash}[?params]\n     *  - [https://player.]vimeo.com/video/{id}?h={hash}[&params]\n     *  - [https://player.]vimeo.com/video/{id}?[params]&h={hash}\n     *  - video/{id}/{hash}\n     * If matched, the hash is available in capture group 4\n     */\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+)(\\?.*&*h=|\\/)+([\\d,a-f]+)/;\n    const found = url.match(regex);\n    return found && found.length === 5 ? found[4] : null;\n  }\n\n  // Set playback state and trigger change (only on actual change)\n  function assurePlaybackState$1(play) {\n    if (play && !this.embed.hasPlayed) {\n      this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n      this.media.paused = !play;\n      triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n  }\n  const vimeo = {\n    setup() {\n      const player = this;\n\n      // Add embed class for responsive\n      toggleClass(player.elements.wrapper, player.config.classNames.embed, true);\n\n      // Set speed options from config\n      player.options.speed = player.config.speed.options;\n\n      // Set intial ratio\n      setAspectRatio.call(player);\n\n      // Load the SDK if not already\n      if (!is.object(window.Vimeo)) {\n        loadScript(player.config.urls.vimeo.sdk).then(() => {\n          vimeo.ready.call(player);\n        }).catch(error => {\n          player.debug.warn('Vimeo SDK (player.js) failed to load', error);\n        });\n      } else {\n        vimeo.ready.call(player);\n      }\n    },\n    // API Ready\n    ready() {\n      const player = this;\n      const config = player.config.vimeo;\n      const {\n        premium,\n        referrerPolicy,\n        ...frameParams\n      } = config;\n      // Get the source URL or ID\n      let source = player.media.getAttribute('src');\n      let hash = '';\n      // Get from <div> if needed\n      if (is.empty(source)) {\n        source = player.media.getAttribute(player.config.attributes.embed.id);\n        // hash can also be set as attribute on the <div>\n        hash = player.media.getAttribute(player.config.attributes.embed.hash);\n      } else {\n        hash = parseHash(source);\n      }\n      const hashParam = hash ? {\n        h: hash\n      } : {};\n\n      // If the owner has a pro or premium account then we can hide controls etc\n      if (premium) {\n        Object.assign(frameParams, {\n          controls: false,\n          sidedock: false\n        });\n      }\n\n      // Get Vimeo params for the iframe\n      const params = buildUrlParams({\n        loop: player.config.loop.active,\n        autoplay: player.autoplay,\n        muted: player.muted,\n        gesture: 'media',\n        playsinline: player.config.playsinline,\n        // hash has to be added to iframe-URL\n        ...hashParam,\n        ...frameParams\n      });\n      const id = parseId$1(source);\n      // Build an iframe\n      const iframe = createElement('iframe');\n      const src = format(player.config.urls.vimeo.iframe, id, params);\n      iframe.setAttribute('src', src);\n      iframe.setAttribute('allowfullscreen', '');\n      iframe.setAttribute('allow', ['autoplay', 'fullscreen', 'picture-in-picture', 'encrypted-media', 'accelerometer', 'gyroscope'].join('; '));\n\n      // Set the referrer policy if required\n      if (!is.empty(referrerPolicy)) {\n        iframe.setAttribute('referrerPolicy', referrerPolicy);\n      }\n\n      // Inject the package\n      if (premium || !config.customControls) {\n        iframe.setAttribute('data-poster', player.poster);\n        player.media = replaceElement(iframe, player.media);\n      } else {\n        const wrapper = createElement('div', {\n          class: player.config.classNames.embedContainer,\n          'data-poster': player.poster\n        });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n      }\n\n      // Get poster image\n      if (!config.customControls) {\n        fetch(format(player.config.urls.vimeo.api, src)).then(response => {\n          if (is.empty(response) || !response.thumbnail_url) {\n            return;\n          }\n\n          // Set and show poster\n          ui.setPoster.call(player, response.thumbnail_url).catch(() => {});\n        });\n      }\n\n      // Setup instance\n      // https://github.com/vimeo/player.js\n      player.embed = new window.Vimeo.Player(iframe, {\n        autopause: player.config.autopause,\n        muted: player.muted\n      });\n      player.media.paused = true;\n      player.media.currentTime = 0;\n\n      // Disable native text track rendering\n      if (player.supported.ui) {\n        player.embed.disableTextTrack();\n      }\n\n      // Create a faux HTML5 API using the Vimeo API\n      player.media.play = () => {\n        assurePlaybackState$1.call(player, true);\n        return player.embed.play();\n      };\n      player.media.pause = () => {\n        assurePlaybackState$1.call(player, false);\n        return player.embed.pause();\n      };\n      player.media.stop = () => {\n        player.pause();\n        player.currentTime = 0;\n      };\n\n      // Seeking\n      let {\n        currentTime\n      } = player.media;\n      Object.defineProperty(player.media, 'currentTime', {\n        get() {\n          return currentTime;\n        },\n        set(time) {\n          // Vimeo will automatically play on seek if the video hasn't been played before\n\n          // Get current paused state and volume etc\n          const {\n            embed,\n            media,\n            paused,\n            volume\n          } = player;\n          const restorePause = paused && !embed.hasPlayed;\n\n          // Set seeking state and trigger event\n          media.seeking = true;\n          triggerEvent.call(player, media, 'seeking');\n\n          // If paused, mute until seek is complete\n          Promise.resolve(restorePause && embed.setVolume(0))\n          // Seek\n          .then(() => embed.setCurrentTime(time))\n          // Restore paused\n          .then(() => restorePause && embed.pause())\n          // Restore volume\n          .then(() => restorePause && embed.setVolume(volume)).catch(() => {\n            // Do nothing\n          });\n        }\n      });\n\n      // Playback speed\n      let speed = player.config.speed.selected;\n      Object.defineProperty(player.media, 'playbackRate', {\n        get() {\n          return speed;\n        },\n        set(input) {\n          player.embed.setPlaybackRate(input).then(() => {\n            speed = input;\n            triggerEvent.call(player, player.media, 'ratechange');\n          }).catch(() => {\n            // Cannot set Playback Rate, Video is probably not on Pro account\n            player.options.speed = [1];\n          });\n        }\n      });\n\n      // Volume\n      let {\n        volume\n      } = player.config;\n      Object.defineProperty(player.media, 'volume', {\n        get() {\n          return volume;\n        },\n        set(input) {\n          player.embed.setVolume(input).then(() => {\n            volume = input;\n            triggerEvent.call(player, player.media, 'volumechange');\n          });\n        }\n      });\n\n      // Muted\n      let {\n        muted\n      } = player.config;\n      Object.defineProperty(player.media, 'muted', {\n        get() {\n          return muted;\n        },\n        set(input) {\n          const toggle = is.boolean(input) ? input : false;\n          player.embed.setMuted(toggle ? true : player.config.muted).then(() => {\n            muted = toggle;\n            triggerEvent.call(player, player.media, 'volumechange');\n          });\n        }\n      });\n\n      // Loop\n      let {\n        loop\n      } = player.config;\n      Object.defineProperty(player.media, 'loop', {\n        get() {\n          return loop;\n        },\n        set(input) {\n          const toggle = is.boolean(input) ? input : player.config.loop.active;\n          player.embed.setLoop(toggle).then(() => {\n            loop = toggle;\n          });\n        }\n      });\n\n      // Source\n      let currentSrc;\n      player.embed.getVideoUrl().then(value => {\n        currentSrc = value;\n        controls.setDownloadUrl.call(player);\n      }).catch(error => {\n        this.debug.warn(error);\n      });\n      Object.defineProperty(player.media, 'currentSrc', {\n        get() {\n          return currentSrc;\n        }\n      });\n\n      // Ended\n      Object.defineProperty(player.media, 'ended', {\n        get() {\n          return player.currentTime === player.duration;\n        }\n      });\n\n      // Set aspect ratio based on video size\n      Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n        const [width, height] = dimensions;\n        player.embed.ratio = roundAspectRatio(width, height);\n        setAspectRatio.call(this);\n      });\n\n      // Set autopause\n      player.embed.setAutopause(player.config.autopause).then(state => {\n        player.config.autopause = state;\n      });\n\n      // Get title\n      player.embed.getVideoTitle().then(title => {\n        player.config.title = title;\n        ui.setTitle.call(this);\n      });\n\n      // Get current time\n      player.embed.getCurrentTime().then(value => {\n        currentTime = value;\n        triggerEvent.call(player, player.media, 'timeupdate');\n      });\n\n      // Get duration\n      player.embed.getDuration().then(value => {\n        player.media.duration = value;\n        triggerEvent.call(player, player.media, 'durationchange');\n      });\n\n      // Get captions\n      player.embed.getTextTracks().then(tracks => {\n        player.media.textTracks = tracks;\n        captions.setup.call(player);\n      });\n      player.embed.on('cuechange', ({\n        cues = []\n      }) => {\n        const strippedCues = cues.map(cue => stripHTML(cue.text));\n        captions.updateCues.call(player, strippedCues);\n      });\n      player.embed.on('loaded', () => {\n        // Assure state and events are updated on autoplay\n        player.embed.getPaused().then(paused => {\n          assurePlaybackState$1.call(player, !paused);\n          if (!paused) {\n            triggerEvent.call(player, player.media, 'playing');\n          }\n        });\n        if (is.element(player.embed.element) && player.supported.ui) {\n          const frame = player.embed.element;\n\n          // Fix keyboard focus issues\n          // https://github.com/sampotts/plyr/issues/317\n          frame.setAttribute('tabindex', -1);\n        }\n      });\n      player.embed.on('bufferstart', () => {\n        triggerEvent.call(player, player.media, 'waiting');\n      });\n      player.embed.on('bufferend', () => {\n        triggerEvent.call(player, player.media, 'playing');\n      });\n      player.embed.on('play', () => {\n        assurePlaybackState$1.call(player, true);\n        triggerEvent.call(player, player.media, 'playing');\n      });\n      player.embed.on('pause', () => {\n        assurePlaybackState$1.call(player, false);\n      });\n      player.embed.on('timeupdate', data => {\n        player.media.seeking = false;\n        currentTime = data.seconds;\n        triggerEvent.call(player, player.media, 'timeupdate');\n      });\n      player.embed.on('progress', data => {\n        player.media.buffered = data.percent;\n        triggerEvent.call(player, player.media, 'progress');\n\n        // Check all loaded\n        if (parseInt(data.percent, 10) === 1) {\n          triggerEvent.call(player, player.media, 'canplaythrough');\n        }\n\n        // Get duration as if we do it before load, it gives an incorrect value\n        // https://github.com/sampotts/plyr/issues/891\n        player.embed.getDuration().then(value => {\n          if (value !== player.media.duration) {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n          }\n        });\n      });\n      player.embed.on('seeked', () => {\n        player.media.seeking = false;\n        triggerEvent.call(player, player.media, 'seeked');\n      });\n      player.embed.on('ended', () => {\n        player.media.paused = true;\n        triggerEvent.call(player, player.media, 'ended');\n      });\n      player.embed.on('error', detail => {\n        player.media.error = detail;\n        triggerEvent.call(player, player.media, 'error');\n      });\n\n      // Rebuild UI\n      if (config.customControls) {\n        setTimeout(() => ui.build.call(player), 0);\n      }\n    }\n  };\n\n  // ==========================================================================\n\n  // Parse YouTube ID from URL\n  function parseId(url) {\n    if (is.empty(url)) {\n      return null;\n    }\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n  }\n\n  // Set playback state and trigger change (only on actual change)\n  function assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n      this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n      this.media.paused = !play;\n      triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n  }\n  function getHost(config) {\n    if (config.noCookie) {\n      return 'https://www.youtube-nocookie.com';\n    }\n    if (window.location.protocol === 'http:') {\n      return 'http://www.youtube.com';\n    }\n\n    // Use YouTube's default\n    return undefined;\n  }\n  const youtube = {\n    setup() {\n      // Add embed class for responsive\n      toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n      // Setup API\n      if (is.object(window.YT) && is.function(window.YT.Player)) {\n        youtube.ready.call(this);\n      } else {\n        // Reference current global callback\n        const callback = window.onYouTubeIframeAPIReady;\n\n        // Set callback to process queue\n        window.onYouTubeIframeAPIReady = () => {\n          // Call global callback if set\n          if (is.function(callback)) {\n            callback();\n          }\n          youtube.ready.call(this);\n        };\n\n        // Load the SDK\n        loadScript(this.config.urls.youtube.sdk).catch(error => {\n          this.debug.warn('YouTube API failed to load', error);\n        });\n      }\n    },\n    // Get the media title\n    getTitle(videoId) {\n      const url = format(this.config.urls.youtube.api, videoId);\n      fetch(url).then(data => {\n        if (is.object(data)) {\n          const {\n            title,\n            height,\n            width\n          } = data;\n\n          // Set title\n          this.config.title = title;\n          ui.setTitle.call(this);\n\n          // Set aspect ratio\n          this.embed.ratio = roundAspectRatio(width, height);\n        }\n        setAspectRatio.call(this);\n      }).catch(() => {\n        // Set aspect ratio\n        setAspectRatio.call(this);\n      });\n    },\n    // API ready\n    ready() {\n      const player = this;\n      const config = player.config.youtube;\n      // Ignore already setup (race condition)\n      const currentId = player.media && player.media.getAttribute('id');\n      if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n        return;\n      }\n\n      // Get the source URL or ID\n      let source = player.media.getAttribute('src');\n\n      // Get from <div> if needed\n      if (is.empty(source)) {\n        source = player.media.getAttribute(this.config.attributes.embed.id);\n      }\n\n      // Replace the <iframe> with a <div> due to YouTube API issues\n      const videoId = parseId(source);\n      const id = generateId(player.provider);\n      // Replace media element\n      const container = createElement('div', {\n        id,\n        'data-poster': config.customControls ? player.poster : undefined\n      });\n      player.media = replaceElement(container, player.media);\n\n      // Only load the poster when using custom controls\n      if (config.customControls) {\n        const posterSrc = s => `https://i.ytimg.com/vi/${videoId}/${s}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Highest quality and un-padded\n        .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n        .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n        .then(image => ui.setPoster.call(player, image.src)).then(src => {\n          // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n          if (!src.includes('maxres')) {\n            player.elements.poster.style.backgroundSize = 'cover';\n          }\n        }).catch(() => {});\n      }\n\n      // Setup instance\n      // https://developers.google.com/youtube/iframe_api_reference\n      player.embed = new window.YT.Player(player.media, {\n        videoId,\n        host: getHost(config),\n        playerVars: extend({}, {\n          // Autoplay\n          autoplay: player.config.autoplay ? 1 : 0,\n          // iframe interface language\n          hl: player.config.hl,\n          // Only show controls if not fully supported or opted out\n          controls: player.supported.ui && config.customControls ? 0 : 1,\n          // Disable keyboard as we handle it\n          disablekb: 1,\n          // Allow iOS inline playback\n          playsinline: player.config.playsinline && !player.config.fullscreen.iosNative ? 1 : 0,\n          // Captions are flaky on YouTube\n          cc_load_policy: player.captions.active ? 1 : 0,\n          cc_lang_pref: player.config.captions.language,\n          // Tracking for stats\n          widget_referrer: window ? window.location.href : null\n        }, config),\n        events: {\n          onError(event) {\n            // YouTube may fire onError twice, so only handle it once\n            if (!player.media.error) {\n              const code = event.data;\n              // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n              const message = {\n                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                150: 'The owner of the requested video does not allow it to be played in embedded players.'\n              }[code] || 'An unknown error occurred';\n              player.media.error = {\n                code,\n                message\n              };\n              triggerEvent.call(player, player.media, 'error');\n            }\n          },\n          onPlaybackRateChange(event) {\n            // Get the instance\n            const instance = event.target;\n\n            // Get current speed\n            player.media.playbackRate = instance.getPlaybackRate();\n            triggerEvent.call(player, player.media, 'ratechange');\n          },\n          onReady(event) {\n            // Bail if onReady has already been called. See issue #1108\n            if (is.function(player.media.play)) {\n              return;\n            }\n            // Get the instance\n            const instance = event.target;\n\n            // Get the title\n            youtube.getTitle.call(player, videoId);\n\n            // Create a faux HTML5 API using the YouTube API\n            player.media.play = () => {\n              assurePlaybackState.call(player, true);\n              instance.playVideo();\n            };\n            player.media.pause = () => {\n              assurePlaybackState.call(player, false);\n              instance.pauseVideo();\n            };\n            player.media.stop = () => {\n              instance.stopVideo();\n            };\n            player.media.duration = instance.getDuration();\n            player.media.paused = true;\n\n            // Seeking\n            player.media.currentTime = 0;\n            Object.defineProperty(player.media, 'currentTime', {\n              get() {\n                return Number(instance.getCurrentTime());\n              },\n              set(time) {\n                // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                if (player.paused && !player.embed.hasPlayed) {\n                  player.embed.mute();\n                }\n\n                // Set seeking state and trigger event\n                player.media.seeking = true;\n                triggerEvent.call(player, player.media, 'seeking');\n\n                // Seek after events sent\n                instance.seekTo(time);\n              }\n            });\n\n            // Playback speed\n            Object.defineProperty(player.media, 'playbackRate', {\n              get() {\n                return instance.getPlaybackRate();\n              },\n              set(input) {\n                instance.setPlaybackRate(input);\n              }\n            });\n\n            // Volume\n            let {\n              volume\n            } = player.config;\n            Object.defineProperty(player.media, 'volume', {\n              get() {\n                return volume;\n              },\n              set(input) {\n                volume = input;\n                instance.setVolume(volume * 100);\n                triggerEvent.call(player, player.media, 'volumechange');\n              }\n            });\n\n            // Muted\n            let {\n              muted\n            } = player.config;\n            Object.defineProperty(player.media, 'muted', {\n              get() {\n                return muted;\n              },\n              set(input) {\n                const toggle = is.boolean(input) ? input : muted;\n                muted = toggle;\n                instance[toggle ? 'mute' : 'unMute']();\n                instance.setVolume(volume * 100);\n                triggerEvent.call(player, player.media, 'volumechange');\n              }\n            });\n\n            // Source\n            Object.defineProperty(player.media, 'currentSrc', {\n              get() {\n                return instance.getVideoUrl();\n              }\n            });\n\n            // Ended\n            Object.defineProperty(player.media, 'ended', {\n              get() {\n                return player.currentTime === player.duration;\n              }\n            });\n\n            // Get available speeds\n            const speeds = instance.getAvailablePlaybackRates();\n            // Filter based on config\n            player.options.speed = speeds.filter(s => player.config.speed.options.includes(s));\n\n            // Set the tabindex to avoid focus entering iframe\n            if (player.supported.ui && config.customControls) {\n              player.media.setAttribute('tabindex', -1);\n            }\n            triggerEvent.call(player, player.media, 'timeupdate');\n            triggerEvent.call(player, player.media, 'durationchange');\n\n            // Reset timer\n            clearInterval(player.timers.buffering);\n\n            // Setup buffering\n            player.timers.buffering = setInterval(() => {\n              // Get loaded % from YouTube\n              player.media.buffered = instance.getVideoLoadedFraction();\n\n              // Trigger progress only when we actually buffer something\n              if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                triggerEvent.call(player, player.media, 'progress');\n              }\n\n              // Set last buffer point\n              player.media.lastBuffered = player.media.buffered;\n\n              // Bail if we're at 100%\n              if (player.media.buffered === 1) {\n                clearInterval(player.timers.buffering);\n\n                // Trigger event\n                triggerEvent.call(player, player.media, 'canplaythrough');\n              }\n            }, 200);\n\n            // Rebuild UI\n            if (config.customControls) {\n              setTimeout(() => ui.build.call(player), 50);\n            }\n          },\n          onStateChange(event) {\n            // Get the instance\n            const instance = event.target;\n\n            // Reset timer\n            clearInterval(player.timers.playing);\n            const seeked = player.media.seeking && [1, 2].includes(event.data);\n            if (seeked) {\n              // Unset seeking and fire seeked event\n              player.media.seeking = false;\n              triggerEvent.call(player, player.media, 'seeked');\n            }\n\n            // Handle events\n            // -1   Unstarted\n            // 0    Ended\n            // 1    Playing\n            // 2    Paused\n            // 3    Buffering\n            // 5    Video cued\n            switch (event.data) {\n              case -1:\n                // Update scrubber\n                triggerEvent.call(player, player.media, 'timeupdate');\n\n                // Get loaded % from YouTube\n                player.media.buffered = instance.getVideoLoadedFraction();\n                triggerEvent.call(player, player.media, 'progress');\n                break;\n              case 0:\n                assurePlaybackState.call(player, false);\n\n                // YouTube doesn't support loop for a single video, so mimick it.\n                if (player.media.loop) {\n                  // YouTube needs a call to `stopVideo` before playing again\n                  instance.stopVideo();\n                  instance.playVideo();\n                } else {\n                  triggerEvent.call(player, player.media, 'ended');\n                }\n                break;\n              case 1:\n                // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                if (config.customControls && !player.config.autoplay && player.media.paused && !player.embed.hasPlayed) {\n                  player.media.pause();\n                } else {\n                  assurePlaybackState.call(player, true);\n                  triggerEvent.call(player, player.media, 'playing');\n\n                  // Poll to get playback progress\n                  player.timers.playing = setInterval(() => {\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                  }, 50);\n\n                  // Check duration again due to YouTube bug\n                  // https://github.com/sampotts/plyr/issues/374\n                  // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                  if (player.media.duration !== instance.getDuration()) {\n                    player.media.duration = instance.getDuration();\n                    triggerEvent.call(player, player.media, 'durationchange');\n                  }\n                }\n                break;\n              case 2:\n                // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                if (!player.muted) {\n                  player.embed.unMute();\n                }\n                assurePlaybackState.call(player, false);\n                break;\n              case 3:\n                // Trigger waiting event to add loading classes to container as the video buffers.\n                triggerEvent.call(player, player.media, 'waiting');\n                break;\n            }\n            triggerEvent.call(player, player.elements.container, 'statechange', false, {\n              code: event.data\n            });\n          }\n        }\n      });\n    }\n  };\n\n  // ==========================================================================\n  const media = {\n    // Setup media\n    setup() {\n      // If there's no media, bail\n      if (!this.media) {\n        this.debug.warn('No media element found!');\n        return;\n      }\n\n      // Add type class\n      toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n      // Add provider class\n      toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n      // Add video class for embeds\n      // This will require changes if audio embeds are added\n      if (this.isEmbed) {\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n      }\n\n      // Inject the player wrapper\n      if (this.isVideo) {\n        // Create the wrapper div\n        this.elements.wrapper = createElement('div', {\n          class: this.config.classNames.video\n        });\n\n        // Wrap the video in a container\n        wrap(this.media, this.elements.wrapper);\n\n        // Poster image container\n        this.elements.poster = createElement('div', {\n          class: this.config.classNames.poster\n        });\n        this.elements.wrapper.appendChild(this.elements.poster);\n      }\n      if (this.isHTML5) {\n        html5.setup.call(this);\n      } else if (this.isYouTube) {\n        youtube.setup.call(this);\n      } else if (this.isVimeo) {\n        vimeo.setup.call(this);\n      }\n    }\n  };\n\n  const destroy = instance => {\n    // Destroy our adsManager\n    if (instance.manager) {\n      instance.manager.destroy();\n    }\n\n    // Destroy our adsManager\n    if (instance.elements.displayContainer) {\n      instance.elements.displayContainer.destroy();\n    }\n    instance.elements.container.remove();\n  };\n  class Ads {\n    /**\n     * Ads constructor.\n     * @param {Object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n      /**\n       * Load the IMA SDK\n       */\n      _defineProperty$1(this, \"load\", () => {\n        if (!this.enabled) {\n          return;\n        }\n\n        // Check if the Google IMA3 SDK is loaded or load it ourselves\n        if (!is.object(window.google) || !is.object(window.google.ima)) {\n          loadScript(this.player.config.urls.googleIMA.sdk).then(() => {\n            this.ready();\n          }).catch(() => {\n            // Script failed to load or is blocked\n            this.trigger('error', new Error('Google IMA SDK failed to load'));\n          });\n        } else {\n          this.ready();\n        }\n      });\n      /**\n       * Get the ads instance ready\n       */\n      _defineProperty$1(this, \"ready\", () => {\n        // Double check we're enabled\n        if (!this.enabled) {\n          destroy(this);\n        }\n\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n          this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n      });\n      /**\n       * In order for the SDK to display ads for our video, we need to tell it where to put them,\n       * so here we define our ad container. This div is set up to render on top of the video player.\n       * Using the code below, we tell the SDK to render ads within that div. We also provide a\n       * handle to the content video player - the SDK will poll the current time of our player to\n       * properly place mid-rolls. After we create the ad display container, we initialize it. On\n       * mobile devices, this initialization is done as the result of a user action.\n       */\n      _defineProperty$1(this, \"setupIMA\", () => {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n          class: this.player.config.classNames.ads\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // Set playback for iOS10+\n        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline);\n\n        // We assume the adContainer is the video container of the plyr element that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container, this.player.media);\n\n        // Create ads loader\n        this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n        // Listen and respond to ads loaded and error events\n        this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, event => this.onAdsManagerLoaded(event), false);\n        this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n      });\n      /**\n       * Request advertisements\n       */\n      _defineProperty$1(this, \"requestAds\", () => {\n        const {\n          container\n        } = this.player.elements;\n        try {\n          // Request video ads\n          const request = new google.ima.AdsRequest();\n          request.adTagUrl = this.tagUrl;\n\n          // Specify the linear and nonlinear slot sizes. This helps the SDK\n          // to select the correct creative if multiple are returned\n          request.linearAdSlotWidth = container.offsetWidth;\n          request.linearAdSlotHeight = container.offsetHeight;\n          request.nonLinearAdSlotWidth = container.offsetWidth;\n          request.nonLinearAdSlotHeight = container.offsetHeight;\n\n          // We only overlay ads as we only support video.\n          request.forceNonLinearFullSlot = false;\n\n          // Mute based on current state\n          request.setAdWillPlayMuted(!this.player.muted);\n          this.loader.requestAds(request);\n        } catch (error) {\n          this.onAdError(error);\n        }\n      });\n      /**\n       * Update the ad countdown\n       * @param {Boolean} start\n       */\n      _defineProperty$1(this, \"pollCountdown\", (start = false) => {\n        if (!start) {\n          clearInterval(this.countdownTimer);\n          this.elements.container.removeAttribute('data-badge-text');\n          return;\n        }\n        const update = () => {\n          const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n          const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n          this.elements.container.setAttribute('data-badge-text', label);\n        };\n        this.countdownTimer = setInterval(update, 100);\n      });\n      /**\n       * This method is called whenever the ads are ready inside the AdDisplayContainer\n       * @param {Event} event - adsManagerLoadedEvent\n       */\n      _defineProperty$1(this, \"onAdsManagerLoaded\", event => {\n        // Load could occur after a source change (race condition)\n        if (!this.enabled) {\n          return;\n        }\n\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n          this.manager.addEventListener(google.ima.AdEvent.Type[type], e => this.onAdEvent(e));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n      });\n      _defineProperty$1(this, \"addCuePoints\", () => {\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n          this.cuePoints.forEach(cuePoint => {\n            if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n              const seekElement = this.player.elements.progress;\n              if (is.element(seekElement)) {\n                const cuePercentage = 100 / this.player.duration * cuePoint;\n                const cue = createElement('span', {\n                  class: this.player.config.classNames.cues\n                });\n                cue.style.left = `${cuePercentage.toString()}%`;\n                seekElement.appendChild(cue);\n              }\n            }\n          });\n        }\n      });\n      /**\n       * This is where all the event handling takes place. Retrieve the ad from the event. Some\n       * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n       * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n       * @param {Event} event\n       */\n      _defineProperty$1(this, \"onAdEvent\", event => {\n        const {\n          container\n        } = this.player.elements;\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n        const adData = event.getAdData();\n\n        // Proxy event\n        const dispatchEvent = type => {\n          triggerEvent.call(this.player, this.player.media, `ads${type.replace(/_/g, '').toLowerCase()}`);\n        };\n\n        // Bubble the event\n        dispatchEvent(event.type);\n        switch (event.type) {\n          case google.ima.AdEvent.Type.LOADED:\n            // This is the first event sent for an ad - it is possible to determine whether the\n            // ad is a video ad or an overlay\n            this.trigger('loaded');\n\n            // Start countdown\n            this.pollCountdown(true);\n            if (!ad.isLinear()) {\n              // Position AdDisplayContainer correctly for overlay\n              ad.width = container.offsetWidth;\n              ad.height = container.offsetHeight;\n            }\n\n            // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n            // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n\n            break;\n          case google.ima.AdEvent.Type.STARTED:\n            // Set volume to match player\n            this.manager.setVolume(this.player.volume);\n            break;\n          case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n            // All ads for the current videos are done. We can now request new advertisements\n            // in case the video is re-played\n\n            // TODO: Example for what happens when a next video in a playlist would be loaded.\n            // So here we load a new video when all ads are done.\n            // Then we load new ads within a new adsManager. When the video\n            // Is started - after - the ads are loaded, then we get ads.\n            // You can also easily test cancelling and reloading by running\n            // player.ads.cancel() and player.ads.play from the console I guess.\n            // this.player.source = {\n            //     type: 'video',\n            //     title: 'View From A Blue Moon',\n            //     sources: [{\n            //         src:\n            // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n            // 'video/mp4', }], poster:\n            // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n            // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n            // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n            // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n            // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n            // };\n\n            // TODO: So there is still this thing where a video should only be allowed to start\n            // playing when the IMA SDK is ready or has failed\n\n            if (this.player.ended) {\n              this.loadAds();\n            } else {\n              // The SDK won't allow new ads to be called without receiving a contentComplete()\n              this.loader.contentComplete();\n            }\n            break;\n          case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n            // This event indicates the ad has started - the video player can adjust the UI,\n            // for example display a pause button and remaining time. Fired when content should\n            // be paused. This usually happens right before an ad is about to cover the content\n\n            this.pauseContent();\n            break;\n          case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n            // This event indicates the ad has finished - the video player can perform\n            // appropriate UI actions, such as removing the timer for remaining time detection.\n            // Fired when content should be resumed. This usually happens when an ad finishes\n            // or collapses\n\n            this.pollCountdown();\n            this.resumeContent();\n            break;\n          case google.ima.AdEvent.Type.LOG:\n            if (adData.adError) {\n              this.player.debug.warn(`Non-fatal ad error: ${adData.adError.getMessage()}`);\n            }\n            break;\n        }\n      });\n      /**\n       * Any ad error handling comes through here\n       * @param {Event} event\n       */\n      _defineProperty$1(this, \"onAdError\", event => {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n      });\n      /**\n       * Setup hooks for Plyr and window events. This ensures\n       * the mid- and post-roll launch at the correct time. And\n       * resize the advertisement when the player resizes\n       */\n      _defineProperty$1(this, \"listeners\", () => {\n        const {\n          container\n        } = this.player.elements;\n        let time;\n        this.player.on('canplay', () => {\n          this.addCuePoints();\n        });\n        this.player.on('ended', () => {\n          this.loader.contentComplete();\n        });\n        this.player.on('timeupdate', () => {\n          time = this.player.currentTime;\n        });\n        this.player.on('seeked', () => {\n          const seekedTime = this.player.currentTime;\n          if (is.empty(this.cuePoints)) {\n            return;\n          }\n          this.cuePoints.forEach((cuePoint, index) => {\n            if (time < cuePoint && cuePoint < seekedTime) {\n              this.manager.discardAdBreak();\n              this.cuePoints.splice(index, 1);\n            }\n          });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n          if (this.manager) {\n            this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n          }\n        });\n      });\n      /**\n       * Initialize the adsManager and start playing advertisements\n       */\n      _defineProperty$1(this, \"play\", () => {\n        const {\n          container\n        } = this.player.elements;\n        if (!this.managerPromise) {\n          this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise.then(() => {\n          // Set volume to match player\n          this.manager.setVolume(this.player.volume);\n\n          // Initialize the container. Must be done via a user action on mobile devices\n          this.elements.displayContainer.initialize();\n          try {\n            if (!this.initialized) {\n              // Initialize the ads manager. Ad rules playlist will start at this time\n              this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n              // Call play to start showing the ad. Single video and overlay ads will\n              // start at this time; the call will be ignored for ad rules\n              this.manager.start();\n            }\n            this.initialized = true;\n          } catch (adError) {\n            // An error may be thrown if there was a problem with the\n            // VAST response\n            this.onAdError(adError);\n          }\n        }).catch(() => {});\n      });\n      /**\n       * Resume our video\n       */\n      _defineProperty$1(this, \"resumeContent\", () => {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play video\n        silencePromise(this.player.media.play());\n      });\n      /**\n       * Pause our video\n       */\n      _defineProperty$1(this, \"pauseContent\", () => {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing\n        this.playing = true;\n\n        // Pause our video.\n        this.player.media.pause();\n      });\n      /**\n       * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n       * allowed to call new ads based on google policies, as they interpret this as an accidental\n       * video requests. https://developers.google.com/interactive-\n       * media-ads/docs/sdks/android/faq#8\n       */\n      _defineProperty$1(this, \"cancel\", () => {\n        // Pause our video\n        if (this.initialized) {\n          this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n      });\n      /**\n       * Re-create our adsManager\n       */\n      _defineProperty$1(this, \"loadAds\", () => {\n        // Tell our adsManager to go bye bye\n        this.managerPromise.then(() => {\n          // Destroy our adsManager\n          if (this.manager) {\n            this.manager.destroy();\n          }\n\n          // Re-set our adsManager promises\n          this.managerPromise = new Promise(resolve => {\n            this.on('loaded', resolve);\n            this.player.debug.log(this.manager);\n          });\n          // Now that the manager has been destroyed set it to also be un-initialized\n          this.initialized = false;\n\n          // Now request some new advertisements\n          this.requestAds();\n        }).catch(() => {});\n      });\n      /**\n       * Handles callbacks after an ad event was invoked\n       * @param {String} event - Event type\n       * @param args\n       */\n      _defineProperty$1(this, \"trigger\", (event, ...args) => {\n        const handlers = this.events[event];\n        if (is.array(handlers)) {\n          handlers.forEach(handler => {\n            if (is.function(handler)) {\n              handler.apply(this, args);\n            }\n          });\n        }\n      });\n      /**\n       * Add event listeners\n       * @param {String} event - Event type\n       * @param {Function} callback - Callback for when event occurs\n       * @return {Ads}\n       */\n      _defineProperty$1(this, \"on\", (event, callback) => {\n        if (!is.array(this.events[event])) {\n          this.events[event] = [];\n        }\n        this.events[event].push(callback);\n        return this;\n      });\n      /**\n       * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n       * The advertisement has 12 seconds to get its things together. We stop this timer when the\n       * advertisement is playing, or when a user action is required to start, then we clear the\n       * timer on ad ready\n       * @param {Number} time\n       * @param {String} from\n       */\n      _defineProperty$1(this, \"startSafetyTimer\", (time, from) => {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n        this.safetyTimer = setTimeout(() => {\n          this.cancel();\n          this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n      });\n      /**\n       * Clear our safety timer(s)\n       * @param {String} from\n       */\n      _defineProperty$1(this, \"clearSafetyTimer\", from => {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n          this.player.debug.log(`Safety timer cleared from: ${from}`);\n          clearTimeout(this.safetyTimer);\n          this.safetyTimer = null;\n        }\n      });\n      this.player = player;\n      this.config = player.config.ads;\n      this.playing = false;\n      this.initialized = false;\n      this.elements = {\n        container: null,\n        displayContainer: null\n      };\n      this.manager = null;\n      this.loader = null;\n      this.cuePoints = null;\n      this.events = {};\n      this.safetyTimer = null;\n      this.countdownTimer = null;\n\n      // Setup a promise to resolve when the IMA manager is ready\n      this.managerPromise = new Promise((resolve, reject) => {\n        // The ad is loaded and ready\n        this.on('loaded', resolve);\n\n        // Ads failed\n        this.on('error', reject);\n      });\n      this.load();\n    }\n    get enabled() {\n      const {\n        config\n      } = this;\n      return this.player.isHTML5 && this.player.isVideo && config.enabled && (!is.empty(config.publisherId) || is.url(config.tagUrl));\n    }\n    // Build the tag URL\n    get tagUrl() {\n      const {\n        config\n      } = this;\n      if (is.url(config.tagUrl)) {\n        return config.tagUrl;\n      }\n      const params = {\n        AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n        AV_CHANNELID: '5a0458dc28a06145e4519d21',\n        AV_URL: window.location.hostname,\n        cb: Date.now(),\n        AV_WIDTH: 640,\n        AV_HEIGHT: 480,\n        AV_CDIM2: config.publisherId\n      };\n      const base = 'https://go.aniview.com/api/adserver6/vast/';\n      return `${base}?${buildUrlParams(params)}`;\n    }\n  }\n\n  /**\n   * Returns a number whose value is limited to the given range.\n   *\n   * Example: limit the output of this computation to between 0 and 255\n   * (x * 255).clamp(0, 255)\n   *\n   * @param {Number} input\n   * @param {Number} min The lower boundary of the output range\n   * @param {Number} max The upper boundary of the output range\n   * @returns A number within the bounds of min and max\n   * @type Number\n   */\n  function clamp(input = 0, min = 0, max = 255) {\n    return Math.min(Math.max(input, min), max);\n  }\n\n  // Arg: vttDataString example: \"WEBVTT\\n\\n1\\n00:00:05.000 --> 00:00:10.000\\n1080p-00001.jpg\"\n  const parseVtt = vttDataString => {\n    const processedList = [];\n    const frames = vttDataString.split(/\\r\\n\\r\\n|\\n\\n|\\r\\r/);\n    frames.forEach(frame => {\n      const result = {};\n      const lines = frame.split(/\\r\\n|\\n|\\r/);\n      lines.forEach(line => {\n        if (!is.number(result.startTime)) {\n          // The line with start and end times on it is the first line of interest\n          const matchTimes = line.match(/([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/); // Note that this currently ignores caption formatting directives that are optionally on the end of this line - fine for non-captions VTT\n\n          if (matchTimes) {\n            result.startTime = Number(matchTimes[1] || 0) * 60 * 60 + Number(matchTimes[2]) * 60 + Number(matchTimes[3]) + Number(`0.${matchTimes[4]}`);\n            result.endTime = Number(matchTimes[6] || 0) * 60 * 60 + Number(matchTimes[7]) * 60 + Number(matchTimes[8]) + Number(`0.${matchTimes[9]}`);\n          }\n        } else if (!is.empty(line.trim()) && is.empty(result.text)) {\n          // If we already have the startTime, then we're definitely up to the text line(s)\n          const lineSplit = line.trim().split('#xywh=');\n          [result.text] = lineSplit;\n\n          // If there's content in lineSplit[1], then we have sprites. If not, then it's just one frame per image\n          if (lineSplit[1]) {\n            [result.x, result.y, result.w, result.h] = lineSplit[1].split(',');\n          }\n        }\n      });\n      if (result.text) {\n        processedList.push(result);\n      }\n    });\n    return processedList;\n  };\n\n  /**\n   * Preview thumbnails for seek hover and scrubbing\n   * Seeking: Hover over the seek bar (desktop only): shows a small preview container above the seek bar\n   * Scrubbing: Click and drag the seek bar (desktop and mobile): shows the preview image over the entire video, as if the video is scrubbing at very high speed\n   *\n   * Notes:\n   * - Thumbs are set via JS settings on Plyr init, not HTML5 'track' property. Using the track property would be a bit gross, because it doesn't support custom 'kinds'. kind=metadata might be used for something else, and we want to allow multiple thumbnails tracks. Tracks must have a unique combination of 'kind' and 'label'. We would have to do something like kind=metadata,label=thumbnails1 / kind=metadata,label=thumbnails2. Square peg, round hole\n   * - VTT info: the image URL is relative to the VTT, not the current document. But if the url starts with a slash, it will naturally be relative to the current domain. https://support.jwplayer.com/articles/how-to-add-preview-thumbnails\n   * - This implementation uses multiple separate img elements. Other implementations use background-image on one element. This would be nice and simple, but Firefox and Safari have flickering issues with replacing backgrounds of larger images. It seems that YouTube perhaps only avoids this because they don't have the option for high-res previews (even the fullscreen ones, when mousedown/seeking). Images appear over the top of each other, and previous ones are discarded once the new ones have been rendered\n   */\n\n  const fitRatio = (ratio, outer) => {\n    const targetRatio = outer.width / outer.height;\n    const result = {};\n    if (ratio > targetRatio) {\n      result.width = outer.width;\n      result.height = 1 / ratio * outer.width;\n    } else {\n      result.height = outer.height;\n      result.width = ratio * outer.height;\n    }\n    return result;\n  };\n  class PreviewThumbnails {\n    /**\n     * PreviewThumbnails constructor.\n     * @param {Plyr} player\n     * @return {PreviewThumbnails}\n     */\n    constructor(player) {\n      _defineProperty$1(this, \"load\", () => {\n        // Toggle the regular seek tooltip\n        if (this.player.elements.display.seekTooltip) {\n          this.player.elements.display.seekTooltip.hidden = this.enabled;\n        }\n        if (!this.enabled) return;\n        this.getThumbnails().then(() => {\n          if (!this.enabled) {\n            return;\n          }\n\n          // Render DOM elements\n          this.render();\n\n          // Check to see if thumb container size was specified manually in CSS\n          this.determineContainerAutoSizing();\n\n          // Set up listeners\n          this.listeners();\n          this.loaded = true;\n        });\n      });\n      // Download VTT files and parse them\n      _defineProperty$1(this, \"getThumbnails\", () => {\n        return new Promise(resolve => {\n          const {\n            src\n          } = this.player.config.previewThumbnails;\n          if (is.empty(src)) {\n            throw new Error('Missing previewThumbnails.src config attribute');\n          }\n\n          // Resolve promise\n          const sortAndResolve = () => {\n            // Sort smallest to biggest (e.g., [120p, 480p, 1080p])\n            this.thumbnails.sort((x, y) => x.height - y.height);\n            this.player.debug.log('Preview thumbnails', this.thumbnails);\n            resolve();\n          };\n\n          // Via callback()\n          if (is.function(src)) {\n            src(thumbnails => {\n              this.thumbnails = thumbnails;\n              sortAndResolve();\n            });\n          }\n          // VTT urls\n          else {\n            // If string, convert into single-element list\n            const urls = is.string(src) ? [src] : src;\n            // Loop through each src URL. Download and process the VTT file, storing the resulting data in this.thumbnails\n            const promises = urls.map(u => this.getThumbnail(u));\n            // Resolve\n            Promise.all(promises).then(sortAndResolve);\n          }\n        });\n      });\n      // Process individual VTT file\n      _defineProperty$1(this, \"getThumbnail\", url => {\n        return new Promise(resolve => {\n          fetch(url).then(response => {\n            const thumbnail = {\n              frames: parseVtt(response),\n              height: null,\n              urlPrefix: ''\n            };\n\n            // If the URLs don't start with '/', then we need to set their relative path to be the location of the VTT file\n            // If the URLs do start with '/', then they obviously don't need a prefix, so it will remain blank\n            // If the thumbnail URLs start with with none of '/', 'http://' or 'https://', then we need to set their relative path to be the location of the VTT file\n            if (!thumbnail.frames[0].text.startsWith('/') && !thumbnail.frames[0].text.startsWith('http://') && !thumbnail.frames[0].text.startsWith('https://')) {\n              thumbnail.urlPrefix = url.substring(0, url.lastIndexOf('/') + 1);\n            }\n\n            // Download the first frame, so that we can determine/set the height of this thumbnailsDef\n            const tempImage = new Image();\n            tempImage.onload = () => {\n              thumbnail.height = tempImage.naturalHeight;\n              thumbnail.width = tempImage.naturalWidth;\n              this.thumbnails.push(thumbnail);\n              resolve();\n            };\n            tempImage.src = thumbnail.urlPrefix + thumbnail.frames[0].text;\n          });\n        });\n      });\n      _defineProperty$1(this, \"startMove\", event => {\n        if (!this.loaded) return;\n        if (!is.event(event) || !['touchmove', 'mousemove'].includes(event.type)) return;\n\n        // Wait until media has a duration\n        if (!this.player.media.duration) return;\n        if (event.type === 'touchmove') {\n          // Calculate seek hover position as approx video seconds\n          this.seekTime = this.player.media.duration * (this.player.elements.inputs.seek.value / 100);\n        } else {\n          var _this$player$config$m, _this$player$config$m2;\n          // Calculate seek hover position as approx video seconds\n          const clientRect = this.player.elements.progress.getBoundingClientRect();\n          const percentage = 100 / clientRect.width * (event.pageX - clientRect.left);\n          this.seekTime = this.player.media.duration * (percentage / 100);\n          if (this.seekTime < 0) {\n            // The mousemove fires for 10+px out to the left\n            this.seekTime = 0;\n          }\n          if (this.seekTime > this.player.media.duration - 1) {\n            // Took 1 second off the duration for safety, because different players can disagree on the real duration of a video\n            this.seekTime = this.player.media.duration - 1;\n          }\n          this.mousePosX = event.pageX;\n\n          // Set time text inside image container\n          this.elements.thumb.time.innerText = formatTime(this.seekTime);\n\n          // Get marker point for time\n          const point = (_this$player$config$m = this.player.config.markers) === null || _this$player$config$m === void 0 ? void 0 : (_this$player$config$m2 = _this$player$config$m.points) === null || _this$player$config$m2 === void 0 ? void 0 : _this$player$config$m2.find(({\n            time: t\n          }) => t === Math.round(this.seekTime));\n\n          // Append the point label to the tooltip\n          if (point) {\n            // this.elements.thumb.time.innerText.concat('\\n');\n            this.elements.thumb.time.insertAdjacentHTML('afterbegin', `${point.label}<br>`);\n          }\n        }\n\n        // Download and show image\n        this.showImageAtCurrentTime();\n      });\n      _defineProperty$1(this, \"endMove\", () => {\n        this.toggleThumbContainer(false, true);\n      });\n      _defineProperty$1(this, \"startScrubbing\", event => {\n        // Only act on left mouse button (0), or touch device (event.button does not exist or is false)\n        if (is.nullOrUndefined(event.button) || event.button === false || event.button === 0) {\n          this.mouseDown = true;\n\n          // Wait until media has a duration\n          if (this.player.media.duration) {\n            this.toggleScrubbingContainer(true);\n            this.toggleThumbContainer(false, true);\n\n            // Download and show image\n            this.showImageAtCurrentTime();\n          }\n        }\n      });\n      _defineProperty$1(this, \"endScrubbing\", () => {\n        this.mouseDown = false;\n\n        // Hide scrubbing preview. But wait until the video has successfully seeked before hiding the scrubbing preview\n        if (Math.ceil(this.lastTime) === Math.ceil(this.player.media.currentTime)) {\n          // The video was already seeked/loaded at the chosen time - hide immediately\n          this.toggleScrubbingContainer(false);\n        } else {\n          // The video hasn't seeked yet. Wait for that\n          once.call(this.player, this.player.media, 'timeupdate', () => {\n            // Re-check mousedown - we might have already started scrubbing again\n            if (!this.mouseDown) {\n              this.toggleScrubbingContainer(false);\n            }\n          });\n        }\n      });\n      /**\n       * Setup hooks for Plyr and window events\n       */\n      _defineProperty$1(this, \"listeners\", () => {\n        // Hide thumbnail preview - on mouse click, mouse leave (in listeners.js for now), and video play/seek. All four are required, e.g., for buffering\n        this.player.on('play', () => {\n          this.toggleThumbContainer(false, true);\n        });\n        this.player.on('seeked', () => {\n          this.toggleThumbContainer(false);\n        });\n        this.player.on('timeupdate', () => {\n          this.lastTime = this.player.media.currentTime;\n        });\n      });\n      /**\n       * Create HTML elements for image containers\n       */\n      _defineProperty$1(this, \"render\", () => {\n        // Create HTML element: plyr__preview-thumbnail-container\n        this.elements.thumb.container = createElement('div', {\n          class: this.player.config.classNames.previewThumbnails.thumbContainer\n        });\n\n        // Wrapper for the image for styling\n        this.elements.thumb.imageContainer = createElement('div', {\n          class: this.player.config.classNames.previewThumbnails.imageContainer\n        });\n        this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);\n\n        // Create HTML element, parent+span: time text (e.g., 01:32:00)\n        const timeContainer = createElement('div', {\n          class: this.player.config.classNames.previewThumbnails.timeContainer\n        });\n        this.elements.thumb.time = createElement('span', {}, '00:00');\n        timeContainer.appendChild(this.elements.thumb.time);\n        this.elements.thumb.imageContainer.appendChild(timeContainer);\n\n        // Inject the whole thumb\n        if (is.element(this.player.elements.progress)) {\n          this.player.elements.progress.appendChild(this.elements.thumb.container);\n        }\n\n        // Create HTML element: plyr__preview-scrubbing-container\n        this.elements.scrubbing.container = createElement('div', {\n          class: this.player.config.classNames.previewThumbnails.scrubbingContainer\n        });\n        this.player.elements.wrapper.appendChild(this.elements.scrubbing.container);\n      });\n      _defineProperty$1(this, \"destroy\", () => {\n        if (this.elements.thumb.container) {\n          this.elements.thumb.container.remove();\n        }\n        if (this.elements.scrubbing.container) {\n          this.elements.scrubbing.container.remove();\n        }\n      });\n      _defineProperty$1(this, \"showImageAtCurrentTime\", () => {\n        if (this.mouseDown) {\n          this.setScrubbingContainerSize();\n        } else {\n          this.setThumbContainerSizeAndPos();\n        }\n\n        // Find the desired thumbnail index\n        // TODO: Handle a video longer than the thumbs where thumbNum is null\n        const thumbNum = this.thumbnails[0].frames.findIndex(frame => this.seekTime >= frame.startTime && this.seekTime <= frame.endTime);\n        const hasThumb = thumbNum >= 0;\n        let qualityIndex = 0;\n\n        // Show the thumb container if we're not scrubbing\n        if (!this.mouseDown) {\n          this.toggleThumbContainer(hasThumb);\n        }\n\n        // No matching thumb found\n        if (!hasThumb) {\n          return;\n        }\n\n        // Check to see if we've already downloaded higher quality versions of this image\n        this.thumbnails.forEach((thumbnail, index) => {\n          if (this.loadedImages.includes(thumbnail.frames[thumbNum].text)) {\n            qualityIndex = index;\n          }\n        });\n\n        // Only proceed if either thumb num or thumbfilename has changed\n        if (thumbNum !== this.showingThumb) {\n          this.showingThumb = thumbNum;\n          this.loadImage(qualityIndex);\n        }\n      });\n      // Show the image that's currently specified in this.showingThumb\n      _defineProperty$1(this, \"loadImage\", (qualityIndex = 0) => {\n        const thumbNum = this.showingThumb;\n        const thumbnail = this.thumbnails[qualityIndex];\n        const {\n          urlPrefix\n        } = thumbnail;\n        const frame = thumbnail.frames[thumbNum];\n        const thumbFilename = thumbnail.frames[thumbNum].text;\n        const thumbUrl = urlPrefix + thumbFilename;\n        if (!this.currentImageElement || this.currentImageElement.dataset.filename !== thumbFilename) {\n          // If we're already loading a previous image, remove its onload handler - we don't want it to load after this one\n          // Only do this if not using sprites. Without sprites we really want to show as many images as possible, as a best-effort\n          if (this.loadingImage && this.usingSprites) {\n            this.loadingImage.onload = null;\n          }\n\n          // We're building and adding a new image. In other implementations of similar functionality (YouTube), background image\n          // is instead used. But this causes issues with larger images in Firefox and Safari - switching between background\n          // images causes a flicker. Putting a new image over the top does not\n          const previewImage = new Image();\n          previewImage.src = thumbUrl;\n          previewImage.dataset.index = thumbNum;\n          previewImage.dataset.filename = thumbFilename;\n          this.showingThumbFilename = thumbFilename;\n          this.player.debug.log(`Loading image: ${thumbUrl}`);\n\n          // For some reason, passing the named function directly causes it to execute immediately. So I've wrapped it in an anonymous function...\n          previewImage.onload = () => this.showImage(previewImage, frame, qualityIndex, thumbNum, thumbFilename, true);\n          this.loadingImage = previewImage;\n          this.removeOldImages(previewImage);\n        } else {\n          // Update the existing image\n          this.showImage(this.currentImageElement, frame, qualityIndex, thumbNum, thumbFilename, false);\n          this.currentImageElement.dataset.index = thumbNum;\n          this.removeOldImages(this.currentImageElement);\n        }\n      });\n      _defineProperty$1(this, \"showImage\", (previewImage, frame, qualityIndex, thumbNum, thumbFilename, newImage = true) => {\n        this.player.debug.log(`Showing thumb: ${thumbFilename}. num: ${thumbNum}. qual: ${qualityIndex}. newimg: ${newImage}`);\n        this.setImageSizeAndOffset(previewImage, frame);\n        if (newImage) {\n          this.currentImageContainer.appendChild(previewImage);\n          this.currentImageElement = previewImage;\n          if (!this.loadedImages.includes(thumbFilename)) {\n            this.loadedImages.push(thumbFilename);\n          }\n        }\n\n        // Preload images before and after the current one\n        // Show higher quality of the same frame\n        // Each step here has a short time delay, and only continues if still hovering/seeking the same spot. This is to protect slow connections from overloading\n        this.preloadNearby(thumbNum, true).then(this.preloadNearby(thumbNum, false)).then(this.getHigherQuality(qualityIndex, previewImage, frame, thumbFilename));\n      });\n      // Remove all preview images that aren't the designated current image\n      _defineProperty$1(this, \"removeOldImages\", currentImage => {\n        // Get a list of all images, convert it from a DOM list to an array\n        Array.from(this.currentImageContainer.children).forEach(image => {\n          if (image.tagName.toLowerCase() !== 'img') {\n            return;\n          }\n          const removeDelay = this.usingSprites ? 500 : 1000;\n          if (image.dataset.index !== currentImage.dataset.index && !image.dataset.deleting) {\n            // Wait 200ms, as the new image can take some time to show on certain browsers (even though it was downloaded before showing). This will prevent flicker, and show some generosity towards slower clients\n            // First set attribute 'deleting' to prevent multi-handling of this on repeat firing of this function\n            // eslint-disable-next-line no-param-reassign\n            image.dataset.deleting = true;\n\n            // This has to be set before the timeout - to prevent issues switching between hover and scrub\n            const {\n              currentImageContainer\n            } = this;\n            setTimeout(() => {\n              currentImageContainer.removeChild(image);\n              this.player.debug.log(`Removing thumb: ${image.dataset.filename}`);\n            }, removeDelay);\n          }\n        });\n      });\n      // Preload images before and after the current one. Only if the user is still hovering/seeking the same frame\n      // This will only preload the lowest quality\n      _defineProperty$1(this, \"preloadNearby\", (thumbNum, forward = true) => {\n        return new Promise(resolve => {\n          setTimeout(() => {\n            const oldThumbFilename = this.thumbnails[0].frames[thumbNum].text;\n            if (this.showingThumbFilename === oldThumbFilename) {\n              // Find the nearest thumbs with different filenames. Sometimes it'll be the next index, but in the case of sprites, it might be 100+ away\n              let thumbnailsClone;\n              if (forward) {\n                thumbnailsClone = this.thumbnails[0].frames.slice(thumbNum);\n              } else {\n                thumbnailsClone = this.thumbnails[0].frames.slice(0, thumbNum).reverse();\n              }\n              let foundOne = false;\n              thumbnailsClone.forEach(frame => {\n                const newThumbFilename = frame.text;\n                if (newThumbFilename !== oldThumbFilename) {\n                  // Found one with a different filename. Make sure it hasn't already been loaded on this page visit\n                  if (!this.loadedImages.includes(newThumbFilename)) {\n                    foundOne = true;\n                    this.player.debug.log(`Preloading thumb filename: ${newThumbFilename}`);\n                    const {\n                      urlPrefix\n                    } = this.thumbnails[0];\n                    const thumbURL = urlPrefix + newThumbFilename;\n                    const previewImage = new Image();\n                    previewImage.src = thumbURL;\n                    previewImage.onload = () => {\n                      this.player.debug.log(`Preloaded thumb filename: ${newThumbFilename}`);\n                      if (!this.loadedImages.includes(newThumbFilename)) this.loadedImages.push(newThumbFilename);\n\n                      // We don't resolve until the thumb is loaded\n                      resolve();\n                    };\n                  }\n                }\n              });\n\n              // If there are none to preload then we want to resolve immediately\n              if (!foundOne) {\n                resolve();\n              }\n            }\n          }, 300);\n        });\n      });\n      // If user has been hovering current image for half a second, look for a higher quality one\n      _defineProperty$1(this, \"getHigherQuality\", (currentQualityIndex, previewImage, frame, thumbFilename) => {\n        if (currentQualityIndex < this.thumbnails.length - 1) {\n          // Only use the higher quality version if it's going to look any better - if the current thumb is of a lower pixel density than the thumbnail container\n          let previewImageHeight = previewImage.naturalHeight;\n          if (this.usingSprites) {\n            previewImageHeight = frame.h;\n          }\n          if (previewImageHeight < this.thumbContainerHeight) {\n            // Recurse back to the loadImage function - show a higher quality one, but only if the viewer is on this frame for a while\n            setTimeout(() => {\n              // Make sure the mouse hasn't already moved on and started hovering at another image\n              if (this.showingThumbFilename === thumbFilename) {\n                this.player.debug.log(`Showing higher quality thumb for: ${thumbFilename}`);\n                this.loadImage(currentQualityIndex + 1);\n              }\n            }, 300);\n          }\n        }\n      });\n      _defineProperty$1(this, \"toggleThumbContainer\", (toggle = false, clearShowing = false) => {\n        const className = this.player.config.classNames.previewThumbnails.thumbContainerShown;\n        this.elements.thumb.container.classList.toggle(className, toggle);\n        if (!toggle && clearShowing) {\n          this.showingThumb = null;\n          this.showingThumbFilename = null;\n        }\n      });\n      _defineProperty$1(this, \"toggleScrubbingContainer\", (toggle = false) => {\n        const className = this.player.config.classNames.previewThumbnails.scrubbingContainerShown;\n        this.elements.scrubbing.container.classList.toggle(className, toggle);\n        if (!toggle) {\n          this.showingThumb = null;\n          this.showingThumbFilename = null;\n        }\n      });\n      _defineProperty$1(this, \"determineContainerAutoSizing\", () => {\n        if (this.elements.thumb.imageContainer.clientHeight > 20 || this.elements.thumb.imageContainer.clientWidth > 20) {\n          // This will prevent auto sizing in this.setThumbContainerSizeAndPos()\n          this.sizeSpecifiedInCSS = true;\n        }\n      });\n      // Set the size to be about a quarter of the size of video. Unless option dynamicSize === false, in which case it needs to be set in CSS\n      _defineProperty$1(this, \"setThumbContainerSizeAndPos\", () => {\n        const {\n          imageContainer\n        } = this.elements.thumb;\n        if (!this.sizeSpecifiedInCSS) {\n          const thumbWidth = Math.floor(this.thumbContainerHeight * this.thumbAspectRatio);\n          imageContainer.style.height = `${this.thumbContainerHeight}px`;\n          imageContainer.style.width = `${thumbWidth}px`;\n        } else if (imageContainer.clientHeight > 20 && imageContainer.clientWidth < 20) {\n          const thumbWidth = Math.floor(imageContainer.clientHeight * this.thumbAspectRatio);\n          imageContainer.style.width = `${thumbWidth}px`;\n        } else if (imageContainer.clientHeight < 20 && imageContainer.clientWidth > 20) {\n          const thumbHeight = Math.floor(imageContainer.clientWidth / this.thumbAspectRatio);\n          imageContainer.style.height = `${thumbHeight}px`;\n        }\n        this.setThumbContainerPos();\n      });\n      _defineProperty$1(this, \"setThumbContainerPos\", () => {\n        const scrubberRect = this.player.elements.progress.getBoundingClientRect();\n        const containerRect = this.player.elements.container.getBoundingClientRect();\n        const {\n          container\n        } = this.elements.thumb;\n        // Find the lowest and highest desired left-position, so we don't slide out the side of the video container\n        const min = containerRect.left - scrubberRect.left + 10;\n        const max = containerRect.right - scrubberRect.left - container.clientWidth - 10;\n        // Set preview container position to: mousepos, minus seekbar.left, minus half of previewContainer.clientWidth\n        const position = this.mousePosX - scrubberRect.left - container.clientWidth / 2;\n        const clamped = clamp(position, min, max);\n\n        // Move the popover position\n        container.style.left = `${clamped}px`;\n\n        // The arrow can follow the cursor\n        container.style.setProperty('--preview-arrow-offset', `${position - clamped}px`);\n      });\n      // Can't use 100% width, in case the video is a different aspect ratio to the video container\n      _defineProperty$1(this, \"setScrubbingContainerSize\", () => {\n        const {\n          width,\n          height\n        } = fitRatio(this.thumbAspectRatio, {\n          width: this.player.media.clientWidth,\n          height: this.player.media.clientHeight\n        });\n        this.elements.scrubbing.container.style.width = `${width}px`;\n        this.elements.scrubbing.container.style.height = `${height}px`;\n      });\n      // Sprites need to be offset to the correct location\n      _defineProperty$1(this, \"setImageSizeAndOffset\", (previewImage, frame) => {\n        if (!this.usingSprites) return;\n\n        // Find difference between height and preview container height\n        const multiplier = this.thumbContainerHeight / frame.h;\n\n        // eslint-disable-next-line no-param-reassign\n        previewImage.style.height = `${previewImage.naturalHeight * multiplier}px`;\n        // eslint-disable-next-line no-param-reassign\n        previewImage.style.width = `${previewImage.naturalWidth * multiplier}px`;\n        // eslint-disable-next-line no-param-reassign\n        previewImage.style.left = `-${frame.x * multiplier}px`;\n        // eslint-disable-next-line no-param-reassign\n        previewImage.style.top = `-${frame.y * multiplier}px`;\n      });\n      this.player = player;\n      this.thumbnails = [];\n      this.loaded = false;\n      this.lastMouseMoveTime = Date.now();\n      this.mouseDown = false;\n      this.loadedImages = [];\n      this.elements = {\n        thumb: {},\n        scrubbing: {}\n      };\n      this.load();\n    }\n    get enabled() {\n      return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled;\n    }\n    get currentImageContainer() {\n      return this.mouseDown ? this.elements.scrubbing.container : this.elements.thumb.imageContainer;\n    }\n    get usingSprites() {\n      return Object.keys(this.thumbnails[0].frames[0]).includes('w');\n    }\n    get thumbAspectRatio() {\n      if (this.usingSprites) {\n        return this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h;\n      }\n      return this.thumbnails[0].width / this.thumbnails[0].height;\n    }\n    get thumbContainerHeight() {\n      if (this.mouseDown) {\n        const {\n          height\n        } = fitRatio(this.thumbAspectRatio, {\n          width: this.player.media.clientWidth,\n          height: this.player.media.clientHeight\n        });\n        return height;\n      }\n\n      // If css is used this needs to return the css height for sprites to work (see setImageSizeAndOffset)\n      if (this.sizeSpecifiedInCSS) {\n        return this.elements.thumb.imageContainer.clientHeight;\n      }\n      return Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4);\n    }\n    get currentImageElement() {\n      return this.mouseDown ? this.currentScrubbingImageElement : this.currentThumbnailImageElement;\n    }\n    set currentImageElement(element) {\n      if (this.mouseDown) {\n        this.currentScrubbingImageElement = element;\n      } else {\n        this.currentThumbnailImageElement = element;\n      }\n    }\n  }\n\n  // ==========================================================================\n  const source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n      if (is.string(attributes)) {\n        insertElement(type, this.media, {\n          src: attributes\n        });\n      } else if (is.array(attributes)) {\n        attributes.forEach(attribute => {\n          insertElement(type, this.media, attribute);\n        });\n      }\n    },\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n      if (!getDeep(input, 'sources.length')) {\n        this.debug.warn('Invalid source format');\n        return;\n      }\n\n      // Cancel current network requests\n      html5.cancelRequests.call(this);\n\n      // Destroy instance and re-setup\n      this.destroy.call(this, () => {\n        // Reset quality options\n        this.options.quality = [];\n\n        // Remove elements\n        removeElement(this.media);\n        this.media = null;\n\n        // Reset class name\n        if (is.element(this.elements.container)) {\n          this.elements.container.removeAttribute('class');\n        }\n\n        // Set the type and provider\n        const {\n          sources,\n          type\n        } = input;\n        const [{\n          provider = providers.html5,\n          src\n        }] = sources;\n        const tagName = provider === 'html5' ? type : 'div';\n        const attributes = provider === 'html5' ? {} : {\n          src\n        };\n        Object.assign(this, {\n          provider,\n          type,\n          // Check for support\n          supported: support.check(type, provider, this.config.playsinline),\n          // Create new element\n          media: createElement(tagName, attributes)\n        });\n\n        // Inject the new element\n        this.elements.container.appendChild(this.media);\n\n        // Autoplay the new source?\n        if (is.boolean(input.autoplay)) {\n          this.config.autoplay = input.autoplay;\n        }\n\n        // Set attributes for audio and video\n        if (this.isHTML5) {\n          if (this.config.crossorigin) {\n            this.media.setAttribute('crossorigin', '');\n          }\n          if (this.config.autoplay) {\n            this.media.setAttribute('autoplay', '');\n          }\n          if (!is.empty(input.poster)) {\n            this.poster = input.poster;\n          }\n          if (this.config.loop.active) {\n            this.media.setAttribute('loop', '');\n          }\n          if (this.config.muted) {\n            this.media.setAttribute('muted', '');\n          }\n          if (this.config.playsinline) {\n            this.media.setAttribute('playsinline', '');\n          }\n        }\n\n        // Restore class hook\n        ui.addStyleHook.call(this);\n\n        // Set new sources for html5\n        if (this.isHTML5) {\n          source.insertElements.call(this, 'source', sources);\n        }\n\n        // Set video title\n        this.config.title = input.title;\n\n        // Set up from scratch\n        media.setup.call(this);\n\n        // HTML5 stuff\n        if (this.isHTML5) {\n          // Setup captions\n          if (Object.keys(input).includes('tracks')) {\n            source.insertElements.call(this, 'track', input.tracks);\n          }\n        }\n\n        // If HTML5 or embed but not fully supported, setupInterface and call ready now\n        if (this.isHTML5 || this.isEmbed && !this.supported.ui) {\n          // Setup interface\n          ui.build.call(this);\n        }\n\n        // Load HTML5 sources\n        if (this.isHTML5) {\n          this.media.load();\n        }\n\n        // Update previewThumbnails config & reload plugin\n        if (!is.empty(input.previewThumbnails)) {\n          Object.assign(this.config.previewThumbnails, input.previewThumbnails);\n\n          // Cleanup previewThumbnails plugin if it was loaded\n          if (this.previewThumbnails && this.previewThumbnails.loaded) {\n            this.previewThumbnails.destroy();\n            this.previewThumbnails = null;\n          }\n\n          // Create new instance if it is still enabled\n          if (this.config.previewThumbnails.enabled) {\n            this.previewThumbnails = new PreviewThumbnails(this);\n          }\n        }\n\n        // Update the fullscreen support\n        this.fullscreen.update();\n      }, true);\n    }\n  };\n\n  // Private properties\n  // TODO: Use a WeakMap for private globals\n  // const globals = new WeakMap();\n\n  // Plyr instance\n  class Plyr {\n    constructor(target, options) {\n      /**\n       * Play the media, or play the advertisement (if they are not blocked)\n       */\n      _defineProperty$1(this, \"play\", () => {\n        if (!is.function(this.media.play)) {\n          return null;\n        }\n\n        // Intecept play with ads\n        if (this.ads && this.ads.enabled) {\n          this.ads.managerPromise.then(() => this.ads.play()).catch(() => silencePromise(this.media.play()));\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n      });\n      /**\n       * Pause the media\n       */\n      _defineProperty$1(this, \"pause\", () => {\n        if (!this.playing || !is.function(this.media.pause)) {\n          return null;\n        }\n        return this.media.pause();\n      });\n      /**\n       * Toggle playback based on current status\n       * @param {Boolean} input\n       */\n      _defineProperty$1(this, \"togglePlay\", input => {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n        if (toggle) {\n          return this.play();\n        }\n        return this.pause();\n      });\n      /**\n       * Stop playback\n       */\n      _defineProperty$1(this, \"stop\", () => {\n        if (this.isHTML5) {\n          this.pause();\n          this.restart();\n        } else if (is.function(this.media.stop)) {\n          this.media.stop();\n        }\n      });\n      /**\n       * Restart playback\n       */\n      _defineProperty$1(this, \"restart\", () => {\n        this.currentTime = 0;\n      });\n      /**\n       * Rewind\n       * @param {Number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n       */\n      _defineProperty$1(this, \"rewind\", seekTime => {\n        this.currentTime -= is.number(seekTime) ? seekTime : this.config.seekTime;\n      });\n      /**\n       * Fast forward\n       * @param {Number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n       */\n      _defineProperty$1(this, \"forward\", seekTime => {\n        this.currentTime += is.number(seekTime) ? seekTime : this.config.seekTime;\n      });\n      /**\n       * Increase volume\n       * @param {Boolean} step - How much to decrease by (between 0 and 1)\n       */\n      _defineProperty$1(this, \"increaseVolume\", step => {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n      });\n      /**\n       * Decrease volume\n       * @param {Boolean} step - How much to decrease by (between 0 and 1)\n       */\n      _defineProperty$1(this, \"decreaseVolume\", step => {\n        this.increaseVolume(-step);\n      });\n      /**\n       * Trigger the airplay dialog\n       * TODO: update player with state, support, enabled\n       */\n      _defineProperty$1(this, \"airplay\", () => {\n        // Show dialog if supported\n        if (support.airplay) {\n          this.media.webkitShowPlaybackTargetPicker();\n        }\n      });\n      /**\n       * Toggle the player controls\n       * @param {Boolean} [toggle] - Whether to show the controls\n       */\n      _defineProperty$1(this, \"toggleControls\", toggle => {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n          // Get state before change\n          const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n          // Negate the argument if not undefined since adding the class to hides the controls\n          const force = typeof toggle === 'undefined' ? undefined : !toggle;\n          // Apply and get updated state\n          const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n          // Close menu\n          if (hiding && is.array(this.config.controls) && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            controls.toggleMenu.call(this, false);\n          }\n\n          // Trigger event on change\n          if (hiding !== isHidden) {\n            const eventName = hiding ? 'controlshidden' : 'controlsshown';\n            triggerEvent.call(this, this.media, eventName);\n          }\n          return !hiding;\n        }\n        return false;\n      });\n      /**\n       * Add event listeners\n       * @param {String} event - Event type\n       * @param {Function} callback - Callback for when event occurs\n       */\n      _defineProperty$1(this, \"on\", (event, callback) => {\n        on.call(this, this.elements.container, event, callback);\n      });\n      /**\n       * Add event listeners once\n       * @param {String} event - Event type\n       * @param {Function} callback - Callback for when event occurs\n       */\n      _defineProperty$1(this, \"once\", (event, callback) => {\n        once.call(this, this.elements.container, event, callback);\n      });\n      /**\n       * Remove event listeners\n       * @param {String} event - Event type\n       * @param {Function} callback - Callback for when event occurs\n       */\n      _defineProperty$1(this, \"off\", (event, callback) => {\n        off(this.elements.container, event, callback);\n      });\n      /**\n       * Destroy an instance\n       * Event listeners are removed when elements are removed\n       * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n       * @param {Function} callback - Callback for when destroy is complete\n       * @param {Boolean} soft - Whether it's a soft destroy (for source changes etc)\n       */\n      _defineProperty$1(this, \"destroy\", (callback, soft = false) => {\n        if (!this.ready) {\n          return;\n        }\n        const done = () => {\n          // Reset overflow (incase destroyed while in fullscreen)\n          document.body.style.overflow = '';\n\n          // GC for embed\n          this.embed = null;\n\n          // If it's a soft destroy, make minimal changes\n          if (soft) {\n            if (Object.keys(this.elements).length) {\n              // Remove elements\n              removeElement(this.elements.buttons.play);\n              removeElement(this.elements.captions);\n              removeElement(this.elements.controls);\n              removeElement(this.elements.wrapper);\n\n              // Clear for GC\n              this.elements.buttons.play = null;\n              this.elements.captions = null;\n              this.elements.controls = null;\n              this.elements.wrapper = null;\n            }\n\n            // Callback\n            if (is.function(callback)) {\n              callback();\n            }\n          } else {\n            // Unbind listeners\n            unbindListeners.call(this);\n\n            // Cancel current network requests\n            html5.cancelRequests.call(this);\n\n            // Replace the container with the original element provided\n            replaceElement(this.elements.original, this.elements.container);\n\n            // Event\n            triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n            // Callback\n            if (is.function(callback)) {\n              callback.call(this.elements.original);\n            }\n\n            // Reset state\n            this.ready = false;\n\n            // Clear for garbage collection\n            setTimeout(() => {\n              this.elements = null;\n              this.media = null;\n            }, 200);\n          }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Clear timeouts\n        clearTimeout(this.timers.loading);\n        clearTimeout(this.timers.controls);\n        clearTimeout(this.timers.resized);\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n          // Restore native video controls\n          ui.toggleNativeControls.call(this, true);\n\n          // Clean up\n          done();\n        } else if (this.isYouTube) {\n          // Clear timers\n          clearInterval(this.timers.buffering);\n          clearInterval(this.timers.playing);\n\n          // Destroy YouTube API\n          if (this.embed !== null && is.function(this.embed.destroy)) {\n            this.embed.destroy();\n          }\n\n          // Clean up\n          done();\n        } else if (this.isVimeo) {\n          // Destroy Vimeo API\n          // then clean up (wait, to prevent postmessage errors)\n          if (this.embed !== null) {\n            this.embed.unload().then(done);\n          }\n\n          // Vimeo does not always return\n          setTimeout(done, 200);\n        }\n      });\n      /**\n       * Check for support for a mime type (HTML5 only)\n       * @param {String} type - Mime type\n       */\n      _defineProperty$1(this, \"supports\", type => support.mime.call(this, type));\n      this.timers = {};\n\n      // State\n      this.ready = false;\n      this.loading = false;\n      this.failed = false;\n\n      // Touch device\n      this.touch = support.touch;\n\n      // Set the media element\n      this.media = target;\n\n      // String selector passed\n      if (is.string(this.media)) {\n        this.media = document.querySelectorAll(this.media);\n      }\n\n      // jQuery, NodeList or Array passed, use first element\n      if (window.jQuery && this.media instanceof jQuery || is.nodeList(this.media) || is.array(this.media)) {\n        // eslint-disable-next-line\n        this.media = this.media[0];\n      }\n\n      // Set config\n      this.config = extend({}, defaults, Plyr.defaults, options || {}, (() => {\n        try {\n          return JSON.parse(this.media.getAttribute('data-plyr-config'));\n        } catch (_) {\n          return {};\n        }\n      })());\n\n      // Elements cache\n      this.elements = {\n        container: null,\n        fullscreen: null,\n        captions: null,\n        buttons: {},\n        display: {},\n        progress: {},\n        inputs: {},\n        settings: {\n          popup: null,\n          menu: null,\n          panels: {},\n          buttons: {}\n        }\n      };\n\n      // Captions\n      this.captions = {\n        active: null,\n        currentTrack: -1,\n        meta: new WeakMap()\n      };\n\n      // Fullscreen\n      this.fullscreen = {\n        active: false\n      };\n\n      // Options\n      this.options = {\n        speed: [],\n        quality: []\n      };\n\n      // Debugging\n      // TODO: move to globals\n      this.debug = new Console(this.config.debug);\n\n      // Log config options and support\n      this.debug.log('Config', this.config);\n      this.debug.log('Support', support);\n\n      // We need an element to setup\n      if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n        this.debug.error('Setup failed: no suitable element passed');\n        return;\n      }\n\n      // Bail if the element is initialized\n      if (this.media.plyr) {\n        this.debug.warn('Target already setup');\n        return;\n      }\n\n      // Bail if not enabled\n      if (!this.config.enabled) {\n        this.debug.error('Setup failed: disabled by config');\n        return;\n      }\n\n      // Bail if disabled or no basic support\n      // You may want to disable certain UAs etc\n      if (!support.check().api) {\n        this.debug.error('Setup failed: no support');\n        return;\n      }\n\n      // Cache original element state for .destroy()\n      const clone = this.media.cloneNode(true);\n      clone.autoplay = false;\n      this.elements.original = clone;\n\n      // Set media type based on tag or data attribute\n      // Supported: video, audio, vimeo, youtube\n      const _type = this.media.tagName.toLowerCase();\n      // Embed properties\n      let iframe = null;\n      let url = null;\n\n      // Different setup based on type\n      switch (_type) {\n        case 'div':\n          // Find the frame\n          iframe = this.media.querySelector('iframe');\n\n          // <iframe> type\n          if (is.element(iframe)) {\n            // Detect provider\n            url = parseUrl(iframe.getAttribute('src'));\n            this.provider = getProviderByUrl(url.toString());\n\n            // Rework elements\n            this.elements.container = this.media;\n            this.media = iframe;\n\n            // Reset classname\n            this.elements.container.className = '';\n\n            // Get attributes from URL and set config\n            if (url.search.length) {\n              const truthy = ['1', 'true'];\n              if (truthy.includes(url.searchParams.get('autoplay'))) {\n                this.config.autoplay = true;\n              }\n              if (truthy.includes(url.searchParams.get('loop'))) {\n                this.config.loop.active = true;\n              }\n\n              // TODO: replace fullscreen.iosNative with this playsinline config option\n              // YouTube requires the playsinline in the URL\n              if (this.isYouTube) {\n                this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                this.config.youtube.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n              } else {\n                this.config.playsinline = true;\n              }\n            }\n          } else {\n            // <div> with attributes\n            this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n            // Remove attribute\n            this.media.removeAttribute(this.config.attributes.embed.provider);\n          }\n\n          // Unsupported or missing provider\n          if (is.empty(this.provider) || !Object.values(providers).includes(this.provider)) {\n            this.debug.error('Setup failed: Invalid provider');\n            return;\n          }\n\n          // Audio will come later for external providers\n          this.type = types.video;\n          break;\n        case 'video':\n        case 'audio':\n          this.type = _type;\n          this.provider = providers.html5;\n\n          // Get config from attributes\n          if (this.media.hasAttribute('crossorigin')) {\n            this.config.crossorigin = true;\n          }\n          if (this.media.hasAttribute('autoplay')) {\n            this.config.autoplay = true;\n          }\n          if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n            this.config.playsinline = true;\n          }\n          if (this.media.hasAttribute('muted')) {\n            this.config.muted = true;\n          }\n          if (this.media.hasAttribute('loop')) {\n            this.config.loop.active = true;\n          }\n          break;\n        default:\n          this.debug.error('Setup failed: unsupported type');\n          return;\n      }\n\n      // Check for support again but with type\n      this.supported = support.check(this.type, this.provider);\n\n      // If no support for even API, bail\n      if (!this.supported.api) {\n        this.debug.error('Setup failed: no support');\n        return;\n      }\n      this.eventListeners = [];\n\n      // Create listeners\n      this.listeners = new Listeners(this);\n\n      // Setup local storage for user settings\n      this.storage = new Storage(this);\n\n      // Store reference\n      this.media.plyr = this;\n\n      // Wrap media\n      if (!is.element(this.elements.container)) {\n        this.elements.container = createElement('div');\n        wrap(this.media, this.elements.container);\n      }\n\n      // Migrate custom properties from media to container (so they work 😉)\n      ui.migrateStyles.call(this);\n\n      // Add style hook\n      ui.addStyleHook.call(this);\n\n      // Setup media\n      media.setup.call(this);\n\n      // Listen for events if debugging\n      if (this.config.debug) {\n        on.call(this, this.elements.container, this.config.events.join(' '), event => {\n          this.debug.log(`event: ${event.type}`);\n        });\n      }\n\n      // Setup fullscreen\n      this.fullscreen = new Fullscreen(this);\n\n      // Setup interface\n      // If embed but not fully supported, build interface now to avoid flash of controls\n      if (this.isHTML5 || this.isEmbed && !this.supported.ui) {\n        ui.build.call(this);\n      }\n\n      // Container listeners\n      this.listeners.container();\n\n      // Global listeners\n      this.listeners.global();\n\n      // Setup ads if provided\n      if (this.config.ads.enabled) {\n        this.ads = new Ads(this);\n      }\n\n      // Autoplay if required\n      if (this.isHTML5 && this.config.autoplay) {\n        this.once('canplay', () => silencePromise(this.play()));\n      }\n\n      // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n      this.lastSeekTime = 0;\n\n      // Setup preview thumbnails if enabled\n      if (this.config.previewThumbnails.enabled) {\n        this.previewThumbnails = new PreviewThumbnails(this);\n      }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n      return this.provider === providers.html5;\n    }\n    get isEmbed() {\n      return this.isYouTube || this.isVimeo;\n    }\n    get isYouTube() {\n      return this.provider === providers.youtube;\n    }\n    get isVimeo() {\n      return this.provider === providers.vimeo;\n    }\n    get isVideo() {\n      return this.type === types.video;\n    }\n    get isAudio() {\n      return this.type === types.audio;\n    }\n    /**\n     * Get playing state\n     */\n    get playing() {\n      return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n      return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n      return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n      return Boolean(this.media.ended);\n    }\n    /**\n     * Seek to a time\n     * @param {Number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n      // Bail if media duration isn't available yet\n      if (!this.duration) {\n        return;\n      }\n\n      // Validate input\n      const inputIsValid = is.number(input) && input > 0;\n\n      // Set\n      this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n      // Logging\n      this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n      return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n      const {\n        buffered\n      } = this.media;\n\n      // YouTube / Vimeo return a float between 0-1\n      if (is.number(buffered)) {\n        return buffered;\n      }\n\n      // HTML5\n      // TODO: Handle buffered chunks of the media\n      // (i.e. seek to another section buffers only that section)\n      if (buffered && buffered.length && this.duration > 0) {\n        return buffered.end(0) / this.duration;\n      }\n      return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n      return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n      // Faux duration set via config\n      const fauxDuration = parseFloat(this.config.duration);\n      // Media duration can be NaN or Infinity before the media has loaded\n      const realDuration = (this.media || {}).duration;\n      const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n      // If config duration is funky, use regular duration\n      return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {Number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n      let volume = value;\n      const max = 1;\n      const min = 0;\n      if (is.string(volume)) {\n        volume = Number(volume);\n      }\n\n      // Load volume from storage if no value specified\n      if (!is.number(volume)) {\n        volume = this.storage.get('volume');\n      }\n\n      // Use config if all else fails\n      if (!is.number(volume)) {\n        ({\n          volume\n        } = this.config);\n      }\n\n      // Maximum is volumeMax\n      if (volume > max) {\n        volume = max;\n      }\n      // Minimum is volumeMin\n      if (volume < min) {\n        volume = min;\n      }\n\n      // Update config\n      this.config.volume = volume;\n\n      // Set the player volume\n      this.media.volume = volume;\n\n      // If muted, and we're increasing volume manually, reset muted state\n      if (!is.empty(value) && this.muted && volume > 0) {\n        this.muted = false;\n      }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n      return Number(this.media.volume);\n    }\n    /**\n     * Set muted state\n     * @param {Boolean} mute\n     */\n    set muted(mute) {\n      let toggle = mute;\n\n      // Load muted state from storage\n      if (!is.boolean(toggle)) {\n        toggle = this.storage.get('muted');\n      }\n\n      // Use config if all else fails\n      if (!is.boolean(toggle)) {\n        toggle = this.config.muted;\n      }\n\n      // Update config\n      this.config.muted = toggle;\n\n      // Set mute on the player\n      this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n      return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n      // Assume yes for all non HTML5 (as we can't tell...)\n      if (!this.isHTML5) {\n        return true;\n      }\n      if (this.isAudio) {\n        return true;\n      }\n\n      // Get audio tracks\n      return Boolean(this.media.mozHasAudio) || Boolean(this.media.webkitAudioDecodedByteCount) || Boolean(this.media.audioTracks && this.media.audioTracks.length);\n    }\n\n    /**\n     * Set playback speed\n     * @param {Number} input - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n      let speed = null;\n      if (is.number(input)) {\n        speed = input;\n      }\n      if (!is.number(speed)) {\n        speed = this.storage.get('speed');\n      }\n      if (!is.number(speed)) {\n        speed = this.config.speed.selected;\n      }\n\n      // Clamp to min/max\n      const {\n        minimumSpeed: min,\n        maximumSpeed: max\n      } = this;\n      speed = clamp(speed, min, max);\n\n      // Update config\n      this.config.speed.selected = speed;\n\n      // Set media speed\n      setTimeout(() => {\n        if (this.media) {\n          this.media.playbackRate = speed;\n        }\n      }, 0);\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n      return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Get the minimum allowed speed\n     */\n    get minimumSpeed() {\n      if (this.isYouTube) {\n        // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n        return Math.min(...this.options.speed);\n      }\n      if (this.isVimeo) {\n        // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n        return 0.5;\n      }\n\n      // https://stackoverflow.com/a/32320020/1191319\n      return 0.0625;\n    }\n\n    /**\n     * Get the maximum allowed speed\n     */\n    get maximumSpeed() {\n      if (this.isYouTube) {\n        // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n        return Math.max(...this.options.speed);\n      }\n      if (this.isVimeo) {\n        // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n        return 2;\n      }\n\n      // https://stackoverflow.com/a/32320020/1191319\n      return 16;\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {Number} input - Quality level\n     */\n    set quality(input) {\n      const config = this.config.quality;\n      const options = this.options.quality;\n      if (!options.length) {\n        return;\n      }\n      let quality = [!is.empty(input) && Number(input), this.storage.get('quality'), config.selected, config.default].find(is.number);\n      let updateStorage = true;\n      if (!options.includes(quality)) {\n        const value = closest(options, quality);\n        this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n        quality = value;\n\n        // Don't update storage if quality is not supported\n        updateStorage = false;\n      }\n\n      // Update config\n      config.selected = quality;\n\n      // Set quality\n      this.media.quality = quality;\n\n      // Save to storage\n      if (updateStorage) {\n        this.storage.set({\n          quality\n        });\n      }\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n      return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {Boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n      const toggle = is.boolean(input) ? input : this.config.loop.active;\n      this.config.loop.active = toggle;\n      this.media.loop = toggle;\n\n      // Set default to be a true toggle\n      /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n           switch (type) {\n              case 'start':\n                  if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                      this.config.loop.end = null;\n                  }\n                  this.config.loop.start = this.currentTime;\n                  // this.config.loop.indicator.start = this.elements.display.played.value;\n                  break;\n               case 'end':\n                  if (this.config.loop.start >= this.currentTime) {\n                      return this;\n                  }\n                  this.config.loop.end = this.currentTime;\n                  // this.config.loop.indicator.end = this.elements.display.played.value;\n                  break;\n               case 'all':\n                  this.config.loop.start = 0;\n                  this.config.loop.end = this.duration - 2;\n                  this.config.loop.indicator.start = 0;\n                  this.config.loop.indicator.end = 100;\n                  break;\n               case 'toggle':\n                  if (this.config.loop.active) {\n                      this.config.loop.start = 0;\n                      this.config.loop.end = null;\n                  } else {\n                      this.config.loop.start = 0;\n                      this.config.loop.end = this.duration - 2;\n                  }\n                  break;\n               default:\n                  this.config.loop.start = 0;\n                  this.config.loop.end = null;\n                  break;\n          } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n      return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {Object} input - The new source object (see docs)\n     */\n    set source(input) {\n      source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n      return this.media.currentSrc;\n    }\n\n    /**\n     * Get a download URL (either source or custom)\n     */\n    get download() {\n      const {\n        download\n      } = this.config.urls;\n      return is.url(download) ? download : this.source;\n    }\n\n    /**\n     * Set the download URL\n     */\n    set download(input) {\n      if (!is.url(input)) {\n        return;\n      }\n      this.config.urls.download = input;\n      controls.setDownloadUrl.call(this);\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {String} input - the URL for the new poster image\n     */\n    set poster(input) {\n      if (!this.isVideo) {\n        this.debug.warn('Poster can only be set for video');\n        return;\n      }\n      ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n      if (!this.isVideo) {\n        return null;\n      }\n      return this.media.getAttribute('poster') || this.media.getAttribute('data-poster');\n    }\n\n    /**\n     * Get the current aspect ratio in use\n     */\n    get ratio() {\n      if (!this.isVideo) {\n        return null;\n      }\n      const ratio = reduceAspectRatio(getAspectRatio.call(this));\n      return is.array(ratio) ? ratio.join(':') : ratio;\n    }\n\n    /**\n     * Set video aspect ratio\n     */\n    set ratio(input) {\n      if (!this.isVideo) {\n        this.debug.warn('Aspect ratio can only be set for video');\n        return;\n      }\n      if (!is.string(input) || !validateAspectRatio(input)) {\n        this.debug.error(`Invalid aspect ratio specified (${input})`);\n        return;\n      }\n      this.config.ratio = reduceAspectRatio(input);\n      setAspectRatio.call(this);\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {Boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n      this.config.autoplay = is.boolean(input) ? input : this.config.autoplay;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n      return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {Boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n      captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {Number} input - Caption index\n     */\n    set currentTrack(input) {\n      captions.set.call(this, input, false);\n      captions.setup.call(this);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n      const {\n        toggled,\n        currentTrack\n      } = this.captions;\n      return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {String} input - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n      captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n      return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n      // Bail if no support\n      if (!support.pip) {\n        return;\n      }\n\n      // Toggle based on current state if not passed\n      const toggle = is.boolean(input) ? input : !this.pip;\n\n      // Toggle based on current state\n      // Safari\n      if (is.function(this.media.webkitSetPresentationMode)) {\n        this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n      }\n\n      // Chrome\n      if (is.function(this.media.requestPictureInPicture)) {\n        if (!this.pip && toggle) {\n          this.media.requestPictureInPicture();\n        } else if (this.pip && !toggle) {\n          document.exitPictureInPicture();\n        }\n      }\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n      if (!support.pip) {\n        return null;\n      }\n\n      // Safari\n      if (!is.empty(this.media.webkitPresentationMode)) {\n        return this.media.webkitPresentationMode === pip.active;\n      }\n\n      // Chrome\n      return this.media === document.pictureInPictureElement;\n    }\n\n    /**\n     * Sets the preview thumbnails for the current source\n     */\n    setPreviewThumbnails(thumbnailSource) {\n      if (this.previewThumbnails && this.previewThumbnails.loaded) {\n        this.previewThumbnails.destroy();\n        this.previewThumbnails = null;\n      }\n      Object.assign(this.config.previewThumbnails, thumbnailSource);\n\n      // Create new instance if it is still enabled\n      if (this.config.previewThumbnails.enabled) {\n        this.previewThumbnails = new PreviewThumbnails(this);\n      }\n    }\n    /**\n     * Check for support\n     * @param {String} type - Player type (audio/video)\n     * @param {String} provider - Provider (html5/youtube/vimeo)\n     */\n    static supported(type, provider) {\n      return support.check(type, provider);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {String} url - URL for the SVG sprite\n     * @param {String} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n      return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {Object} options\n     */\n    static setup(selector, options = {}) {\n      let targets = null;\n      if (is.string(selector)) {\n        targets = Array.from(document.querySelectorAll(selector));\n      } else if (is.nodeList(selector)) {\n        targets = Array.from(selector);\n      } else if (is.array(selector)) {\n        targets = selector.filter(is.element);\n      }\n      if (is.empty(targets)) {\n        return null;\n      }\n      return targets.map(t => new Plyr(t, options));\n    }\n  }\n  Plyr.defaults = cloneDeep(defaults);\n\n  return Plyr;\n\n}));\n//# sourceMappingURL=plyr.js.map\n", "function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ownKeys(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(n),!0).forEach((function(t){_defineProperty(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var defaults={addCSS:!0,thumbWidth:15,watch:!0};function matches(e,t){return function(){return Array.from(document.querySelectorAll(t)).includes(this)}.call(e,t)}function trigger(e,t){if(e&&t){var n=new Event(t,{bubbles:!0});e.dispatchEvent(n)}}var getConstructor=function(e){return null!=e?e.constructor:null},instanceOf=function(e,t){return!!(e&&t&&e instanceof t)},isNullOrUndefined=function(e){return null==e},isObject=function(e){return getConstructor(e)===Object},isNumber=function(e){return getConstructor(e)===Number&&!Number.isNaN(e)},isString=function(e){return getConstructor(e)===String},isBoolean=function(e){return getConstructor(e)===Boolean},isFunction=function(e){return getConstructor(e)===Function},isArray=function(e){return Array.isArray(e)},isNodeList=function(e){return instanceOf(e,NodeList)},isElement=function(e){return instanceOf(e,Element)},isEvent=function(e){return instanceOf(e,Event)},isEmpty=function(e){return isNullOrUndefined(e)||(isString(e)||isArray(e)||isNodeList(e))&&!e.length||isObject(e)&&!Object.keys(e).length},is={nullOrUndefined:isNullOrUndefined,object:isObject,number:isNumber,string:isString,boolean:isBoolean,function:isFunction,array:isArray,nodeList:isNodeList,element:isElement,event:isEvent,empty:isEmpty};function getDecimalPlaces(e){var t=\"\".concat(e).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);return t?Math.max(0,(t[1]?t[1].length:0)-(t[2]?+t[2]:0)):0}function round(e,t){if(1>t){var n=getDecimalPlaces(t);return parseFloat(e.toFixed(n))}return Math.round(e/t)*t}var RangeTouch=function(){function e(t,n){_classCallCheck(this,e),is.element(t)?this.element=t:is.string(t)&&(this.element=document.querySelector(t)),is.element(this.element)&&is.empty(this.element.rangeTouch)&&(this.config=_objectSpread2({},defaults,{},n),this.init())}return _createClass(e,[{key:\"init\",value:function(){e.enabled&&(this.config.addCSS&&(this.element.style.userSelect=\"none\",this.element.style.webKitUserSelect=\"none\",this.element.style.touchAction=\"manipulation\"),this.listeners(!0),this.element.rangeTouch=this)}},{key:\"destroy\",value:function(){e.enabled&&(this.config.addCSS&&(this.element.style.userSelect=\"\",this.element.style.webKitUserSelect=\"\",this.element.style.touchAction=\"\"),this.listeners(!1),this.element.rangeTouch=null)}},{key:\"listeners\",value:function(e){var t=this,n=e?\"addEventListener\":\"removeEventListener\";[\"touchstart\",\"touchmove\",\"touchend\"].forEach((function(e){t.element[n](e,(function(e){return t.set(e)}),!1)}))}},{key:\"get\",value:function(t){if(!e.enabled||!is.event(t))return null;var n,r=t.target,i=t.changedTouches[0],o=parseFloat(r.getAttribute(\"min\"))||0,s=parseFloat(r.getAttribute(\"max\"))||100,u=parseFloat(r.getAttribute(\"step\"))||1,c=r.getBoundingClientRect(),a=100/c.width*(this.config.thumbWidth/2)/100;return 0>(n=100/c.width*(i.clientX-c.left))?n=0:100<n&&(n=100),50>n?n-=(100-2*n)*a:50<n&&(n+=2*(n-50)*a),o+round(n/100*(s-o),u)}},{key:\"set\",value:function(t){e.enabled&&is.event(t)&&!t.target.disabled&&(t.preventDefault(),t.target.value=this.get(t),trigger(t.target,\"touchend\"===t.type?\"change\":\"input\"))}}],[{key:\"setup\",value:function(t){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},r=null;if(is.empty(t)||is.string(t)?r=Array.from(document.querySelectorAll(is.string(t)?t:'input[type=\"range\"]')):is.element(t)?r=[t]:is.nodeList(t)?r=Array.from(t):is.array(t)&&(r=t.filter(is.element)),is.empty(r))return null;var i=_objectSpread2({},defaults,{},n);if(is.string(t)&&i.watch){var o=new MutationObserver((function(n){Array.from(n).forEach((function(n){Array.from(n.addedNodes).forEach((function(n){is.element(n)&&matches(n,t)&&new e(n,i)}))}))}));o.observe(document.body,{childList:!0,subtree:!0})}return r.map((function(t){return new e(t,n)}))}},{key:\"enabled\",get:function(){return\"ontouchstart\"in document.documentElement}}]),e}();export default RangeTouch;", "// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = (input) => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = (input) => input === null || typeof input === 'undefined';\nconst isObject = (input) => getConstructor(input) === Object;\nconst isNumber = (input) => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = (input) => getConstructor(input) === String;\nconst isBoolean = (input) => getConstructor(input) === Boolean;\nconst isFunction = (input) => typeof input === 'function';\nconst isArray = (input) => Array.isArray(input);\nconst isWeakMap = (input) => instanceOf(input, WeakMap);\nconst isNodeList = (input) => instanceOf(input, NodeList);\nconst isTextNode = (input) => getConstructor(input) === Text;\nconst isEvent = (input) => instanceOf(input, Event);\nconst isKeyboardEvent = (input) => instanceOf(input, KeyboardEvent);\nconst isCue = (input) => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = (input) => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\nconst isPromise = (input) => instanceOf(input, Promise) && isFunction(input.then);\n\nconst isElement = (input) =>\n  input !== null &&\n  typeof input === 'object' &&\n  input.nodeType === 1 &&\n  typeof input.style === 'object' &&\n  typeof input.ownerDocument === 'object';\n\nconst isEmpty = (input) =>\n  isNullOrUndefined(input) ||\n  ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n  (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = (input) => {\n  // Accept a URL object\n  if (instanceOf(input, window.URL)) {\n    return true;\n  }\n\n  // Must be string from here\n  if (!isString(input)) {\n    return false;\n  }\n\n  // Add the protocol if required\n  let string = input;\n  if (!input.startsWith('http://') || !input.startsWith('https://')) {\n    string = `http://${input}`;\n  }\n\n  try {\n    return !isEmpty(new URL(string).hostname);\n  } catch (_) {\n    return false;\n  }\n};\n\nexport default {\n  nullOrUndefined: isNullOrUndefined,\n  object: isObject,\n  number: isNumber,\n  string: isString,\n  boolean: isBoolean,\n  function: isFunction,\n  array: isArray,\n  weakMap: isWeakMap,\n  nodeList: isNodeList,\n  element: isElement,\n  textNode: isTextNode,\n  event: isEvent,\n  keyboardEvent: isKeyboardEvent,\n  cue: isCue,\n  track: isTrack,\n  promise: isPromise,\n  url: isUrl,\n  empty: isEmpty,\n};\n", "// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n  const element = document.createElement('span');\n\n  const events = {\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'transitionend',\n    OTransition: 'oTransitionEnd otransitionend',\n    transition: 'transitionend',\n  };\n\n  const type = Object.keys(events).find((event) => element.style[event] !== undefined);\n\n  return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element, delay) {\n  setTimeout(() => {\n    try {\n      // eslint-disable-next-line no-param-reassign\n      element.hidden = true;\n\n      // eslint-disable-next-line no-unused-expressions\n      element.offsetHeight;\n\n      // eslint-disable-next-line no-param-reassign\n      element.hidden = false;\n    } catch (_) {\n      // Do nothing\n    }\n  }, delay);\n}\n", "// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst isIE = Boolean(window.document.documentMode);\nconst isEdge = /Edge/g.test(navigator.userAgent);\nconst isWebKit = 'WebkitAppearance' in document.documentElement.style && !/Edge/g.test(navigator.userAgent);\nconst isIPhone = /iPhone|iPod/gi.test(navigator.userAgent) && navigator.maxTouchPoints > 1;\n// navigator.platform may be deprecated but this check is still required\nconst isIPadOS = navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\nconst isIos = /iPad|iPhone|iPod/gi.test(navigator.userAgent) && navigator.maxTouchPoints > 1;\n\nexport default {\n  isIE,\n  isEdge,\n  isWebKit,\n  isIPhone,\n  isIPadOS,\n  isIos,\n};\n", "// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n  return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n\n  const source = sources.shift();\n\n  if (!is.object(source)) {\n    return target;\n  }\n\n  Object.keys(source).forEach((key) => {\n    if (is.object(source[key])) {\n      if (!Object.keys(target).includes(key)) {\n        Object.assign(target, { [key]: {} });\n      }\n\n      extend(target[key], source[key]);\n    } else {\n      Object.assign(target, { [key]: source[key] });\n    }\n  });\n\n  return extend(target, ...sources);\n}\n", "// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport is from './is';\nimport { extend } from './objects';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n  // Convert `elements` to an array, if necessary.\n  const targets = elements.length ? elements : [elements];\n\n  // Loops backwards to prevent having to clone the wrapper on the\n  // first element (see `child` below).\n  Array.from(targets)\n    .reverse()\n    .forEach((element, index) => {\n      const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n      // Cache the current parent and sibling.\n      const parent = element.parentNode;\n      const sibling = element.nextSibling;\n\n      // Wrap the element (is automatically removed from its current\n      // parent).\n      child.appendChild(element);\n\n      // If the element had a sibling, insert the wrapper before\n      // the sibling to maintain the HTML structure; otherwise, just\n      // append it to the parent.\n      if (sibling) {\n        parent.insertBefore(child, sibling);\n      } else {\n        parent.appendChild(child);\n      }\n    });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n  if (!is.element(element) || is.empty(attributes)) return;\n\n  // Assume null and undefined attributes should be left out,\n  // Setting them would otherwise convert them to \"null\" and \"undefined\"\n  Object.entries(attributes)\n    .filter(([, value]) => !is.nullOrUndefined(value))\n    .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n  // Create a new <element>\n  const element = document.createElement(type);\n\n  // Set all passed attributes\n  if (is.object(attributes)) {\n    setAttributes(element, attributes);\n  }\n\n  // Add text node\n  if (is.string(text)) {\n    element.innerText = text;\n  }\n\n  // Return built element\n  return element;\n}\n\n// Insert an element after another\nexport function insertAfter(element, target) {\n  if (!is.element(element) || !is.element(target)) return;\n\n  target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n  if (!is.element(parent)) return;\n\n  parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n  if (is.nodeList(element) || is.array(element)) {\n    Array.from(element).forEach(removeElement);\n    return;\n  }\n\n  if (!is.element(element) || !is.element(element.parentNode)) {\n    return;\n  }\n\n  element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n  if (!is.element(element)) return;\n\n  let { length } = element.childNodes;\n\n  while (length > 0) {\n    element.removeChild(element.lastChild);\n    length -= 1;\n  }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n  if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) return null;\n\n  oldChild.parentNode.replaceChild(newChild, oldChild);\n\n  return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n  // For example:\n  // '.test' to { class: 'test' }\n  // '#test' to { id: 'test' }\n  // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n  if (!is.string(sel) || is.empty(sel)) return {};\n\n  const attributes = {};\n  const existing = extend({}, existingAttributes);\n\n  sel.split(',').forEach((s) => {\n    // Remove whitespace\n    const selector = s.trim();\n    const className = selector.replace('.', '');\n    const stripped = selector.replace(/[[\\]]/g, '');\n    // Get the parts and value\n    const parts = stripped.split('=');\n    const [key] = parts;\n    const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n    // Get the first character\n    const start = selector.charAt(0);\n\n    switch (start) {\n      case '.':\n        // Add to existing classname\n        if (is.string(existing.class)) {\n          attributes.class = `${existing.class} ${className}`;\n        } else {\n          attributes.class = className;\n        }\n        break;\n\n      case '#':\n        // ID selector\n        attributes.id = selector.replace('#', '');\n        break;\n\n      case '[':\n        // Attribute selector\n        attributes[key] = value;\n\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  return extend(existing, attributes);\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n  if (!is.element(element)) return;\n\n  let hide = hidden;\n\n  if (!is.boolean(hide)) {\n    hide = !element.hidden;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  element.hidden = hide;\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n  if (is.nodeList(element)) {\n    return Array.from(element).map((e) => toggleClass(e, className, force));\n  }\n\n  if (is.element(element)) {\n    let method = 'toggle';\n    if (typeof force !== 'undefined') {\n      method = force ? 'add' : 'remove';\n    }\n\n    element.classList[method](className);\n    return element.classList.contains(className);\n  }\n\n  return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n  return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n  const { prototype } = Element;\n\n  function match() {\n    return Array.from(document.querySelectorAll(selector)).includes(this);\n  }\n\n  const method =\n    prototype.matches ||\n    prototype.webkitMatchesSelector ||\n    prototype.mozMatchesSelector ||\n    prototype.msMatchesSelector ||\n    match;\n\n  return method.call(element, selector);\n}\n\n// Closest ancestor element matching selector (also tests element itself)\nexport function closest(element, selector) {\n  const { prototype } = Element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n  function closestElement() {\n    let el = this;\n\n    do {\n      if (matches.matches(el, selector)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  }\n\n  const method = prototype.closest || closestElement;\n\n  return method.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n  return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n  return this.elements.container.querySelector(selector);\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, focusVisible = false) {\n  if (!is.element(element)) return;\n\n  // Set regular focus\n  element.focus({ preventScroll: true, focusVisible });\n}\n", "// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n  'audio/ogg': 'vorbis',\n  'audio/wav': '1',\n  'video/webm': 'vp8, vorbis',\n  'video/mp4': 'avc1.42E01E, mp4a.40.2',\n  'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n  // Basic support\n  audio: 'canPlayType' in document.createElement('audio'),\n  video: 'canPlayType' in document.createElement('video'),\n\n  // Check for support\n  // Basic functionality vs full UI\n  check(type, provider) {\n    const api = support[type] || provider !== 'html5';\n    const ui = api && support.rangeInput;\n\n    return {\n      api,\n      ui,\n    };\n  },\n\n  // Picture-in-picture support\n  // Safari & Chrome only currently\n  pip: (() => {\n    // While iPhone's support picture-in-picture for some apps, seemingly Safari isn't one of them\n    // It will throw the following error when trying to enter picture-in-picture\n    // `NotSupportedError: The Picture-in-Picture mode is not supported.`\n    if (browser.isIPhone) {\n      return false;\n    }\n\n    // Safari\n    // https://developer.apple.com/documentation/webkitjs/adding_picture_in_picture_to_your_safari_media_controls\n    if (is.function(createElement('video').webkitSetPresentationMode)) {\n      return true;\n    }\n\n    // Chrome\n    // https://developers.google.com/web/updates/2018/10/watch-video-using-picture-in-picture\n    if (document.pictureInPictureEnabled && !createElement('video').disablePictureInPicture) {\n      return true;\n    }\n\n    return false;\n  })(),\n\n  // Airplay support\n  // Safari only currently\n  airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n  // Inline playback support\n  // https://webkit.org/blog/6784/new-video-policies-for-ios/\n  playsinline: 'playsInline' in document.createElement('video'),\n\n  // Check for mime type support against a player instance\n  // Credits: http://diveintohtml5.info/everything.html\n  // Related: http://www.leanbackplayer.com/test/h5mt.html\n  mime(input) {\n    if (is.empty(input)) {\n      return false;\n    }\n\n    const [mediaType] = input.split('/');\n    let type = input;\n\n    // Verify we're using HTML5 and there's no media type mismatch\n    if (!this.isHTML5 || mediaType !== this.type) {\n      return false;\n    }\n\n    // Add codec if required\n    if (Object.keys(defaultCodecs).includes(type)) {\n      type += `; codecs=\"${defaultCodecs[input]}\"`;\n    }\n\n    try {\n      return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n    } catch (_) {\n      return false;\n    }\n  },\n\n  // Check for textTracks support\n  textTracks: 'textTracks' in document.createElement('video'),\n\n  // <input type=\"range\"> Sliders\n  rangeInput: (() => {\n    const range = document.createElement('input');\n    range.type = 'range';\n    return range.type === 'range';\n  })(),\n\n  // Touch\n  // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n  touch: 'ontouchstart' in document.documentElement,\n\n  // Detect transitions support\n  transitions: transitionEndEvent !== false,\n\n  // Reduced motion iOS & MacOS setting\n  // https://webkit.org/blog/7551/responsive-design-for-motion/\n  reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n", "// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n  // Test via a getter in the options object to see if the passive property is accessed\n  let supported = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get() {\n        supported = true;\n        return null;\n      },\n    });\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (_) {\n    // Do nothing\n  }\n\n  return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n  // Bail if no element, event, or callback\n  if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n    return;\n  }\n\n  // Allow multiple events\n  const events = event.split(' ');\n  // Build options\n  // Default to just the capture boolean for browsers with no passive listener support\n  let options = capture;\n\n  // If passive events listeners are supported\n  if (supportsPassiveListeners) {\n    options = {\n      // Whether the listener can be passive (i.e. default never prevented)\n      passive,\n      // Whether the listener is a capturing listener or not\n      capture,\n    };\n  }\n\n  // If a single node is passed, bind the event listener\n  events.forEach((type) => {\n    if (this && this.eventListeners && toggle) {\n      // Cache event listener\n      this.eventListeners.push({ element, type, callback, options });\n    }\n\n    element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n  });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n  toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n  toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n  const onceCallback = (...args) => {\n    off(element, events, onceCallback, passive, capture);\n    callback.apply(this, args);\n  };\n\n  toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n  // Bail if no element\n  if (!is.element(element) || is.empty(type)) {\n    return;\n  }\n\n  // Create and dispatch the event\n  const event = new CustomEvent(type, {\n    bubbles,\n    detail: { ...detail, plyr: this },\n  });\n\n  // Dispatch the event\n  element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n  if (this && this.eventListeners) {\n    this.eventListeners.forEach((item) => {\n      const { element, type, callback, options } = item;\n      element.removeEventListener(type, callback, options);\n    });\n\n    this.eventListeners = [];\n  }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n  return new Promise((resolve) =>\n    this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve),\n  ).then(() => {});\n}\n", "import is from './is';\n/**\n * Silence a Promise-like object.\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n * @param  {Object} value An object that may or may not be `Promise`-like.\n */\nexport function silencePromise(value) {\n  if (is.promise(value)) {\n    value.then(null, () => {});\n  }\n}\n\nexport default { silencePromise };\n", "// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n  if (!is.array(array)) {\n    return array;\n  }\n\n  return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n  if (!is.array(array) || !array.length) {\n    return null;\n  }\n\n  return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n", "// ==========================================================================\n// Style utils\n// ==========================================================================\n\nimport { closest } from './arrays';\nimport is from './is';\n\n// Check support for a CSS declaration\nexport function supportsCSS(declaration) {\n  if (!window || !window.CSS) {\n    return false;\n  }\n\n  return window.CSS.supports(declaration);\n}\n\n// Standard/common aspect ratios\nconst standardRatios = [\n  [1, 1],\n  [4, 3],\n  [3, 4],\n  [5, 4],\n  [4, 5],\n  [3, 2],\n  [2, 3],\n  [16, 10],\n  [10, 16],\n  [16, 9],\n  [9, 16],\n  [21, 9],\n  [9, 21],\n  [32, 9],\n  [9, 32],\n].reduce((out, [x, y]) => ({ ...out, [x / y]: [x, y] }), {});\n\n// Validate an aspect ratio\nexport function validateAspectRatio(input) {\n  if (!is.array(input) && (!is.string(input) || !input.includes(':'))) {\n    return false;\n  }\n\n  const ratio = is.array(input) ? input : input.split(':');\n\n  return ratio.map(Number).every(is.number);\n}\n\n// Reduce an aspect ratio to it's lowest form\nexport function reduceAspectRatio(ratio) {\n  if (!is.array(ratio) || !ratio.every(is.number)) {\n    return null;\n  }\n\n  const [width, height] = ratio;\n  const getDivider = (w, h) => (h === 0 ? w : getDivider(h, w % h));\n  const divider = getDivider(width, height);\n\n  return [width / divider, height / divider];\n}\n\n// Calculate an aspect ratio\nexport function getAspectRatio(input) {\n  const parse = (ratio) => (validateAspectRatio(ratio) ? ratio.split(':').map(Number) : null);\n  // Try provided ratio\n  let ratio = parse(input);\n\n  // Get from config\n  if (ratio === null) {\n    ratio = parse(this.config.ratio);\n  }\n\n  // Get from embed\n  if (ratio === null && !is.empty(this.embed) && is.array(this.embed.ratio)) {\n    ({ ratio } = this.embed);\n  }\n\n  // Get from HTML5 video\n  if (ratio === null && this.isHTML5) {\n    const { videoWidth, videoHeight } = this.media;\n    ratio = [videoWidth, videoHeight];\n  }\n\n  return reduceAspectRatio(ratio);\n}\n\n// Set aspect ratio for responsive container\nexport function setAspectRatio(input) {\n  if (!this.isVideo) {\n    return {};\n  }\n\n  const { wrapper } = this.elements;\n  const ratio = getAspectRatio.call(this, input);\n\n  if (!is.array(ratio)) {\n    return {};\n  }\n\n  const [x, y] = reduceAspectRatio(ratio);\n  const useNative = supportsCSS(`aspect-ratio: ${x}/${y}`);\n  const padding = (100 / x) * y;\n\n  if (useNative) {\n    wrapper.style.aspectRatio = `${x}/${y}`;\n  } else {\n    wrapper.style.paddingBottom = `${padding}%`;\n  }\n\n  // For Vimeo we have an extra <div> to hide the standard controls and UI\n  if (this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {\n    const height = (100 / this.media.offsetWidth) * parseInt(window.getComputedStyle(this.media).paddingBottom, 10);\n    const offset = (height - padding) / (height / 50);\n\n    if (this.fullscreen.active) {\n      wrapper.style.paddingBottom = null;\n    } else {\n      this.media.style.transform = `translateY(-${offset}%)`;\n    }\n  } else if (this.isHTML5) {\n    wrapper.classList.add(this.config.classNames.videoFixedRatio);\n  }\n\n  return { padding, ratio };\n}\n\n// Round an aspect ratio to closest standard ratio\nexport function roundAspectRatio(x, y, tolerance = 0.05) {\n  const ratio = x / y;\n  const closestRatio = closest(Object.keys(standardRatios), ratio);\n\n  // Check match is within tolerance\n  if (Math.abs(closestRatio - ratio) <= tolerance) {\n    return standardRatios[closestRatio];\n  }\n\n  // No match\n  return [x, y];\n}\n\n// Get the size of the viewport\n// https://stackoverflow.com/questions/1248081/how-to-get-the-browser-viewport-dimensions\nexport function getViewportSize() {\n  const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n  const height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n  return [width, height];\n}\n", "// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport { silencePromise } from './utils/promise';\nimport { setAspectRatio } from './utils/style';\n\nconst html5 = {\n  getSources() {\n    if (!this.isHTML5) {\n      return [];\n    }\n\n    const sources = Array.from(this.media.querySelectorAll('source'));\n\n    // Filter out unsupported sources (if type is specified)\n    return sources.filter((source) => {\n      const type = source.getAttribute('type');\n\n      if (is.empty(type)) {\n        return true;\n      }\n\n      return support.mime.call(this, type);\n    });\n  },\n\n  // Get quality levels\n  getQualityOptions() {\n    // Whether we're forcing all options (e.g. for streaming)\n    if (this.config.quality.forced) {\n      return this.config.quality.options;\n    }\n\n    // Get sizes from <source> elements\n    return html5.getSources\n      .call(this)\n      .map((source) => Number(source.getAttribute('size')))\n      .filter(Boolean);\n  },\n\n  setup() {\n    if (!this.isHTML5) {\n      return;\n    }\n\n    const player = this;\n\n    // Set speed options from config\n    player.options.speed = player.config.speed.options;\n\n    // Set aspect ratio if fixed\n    if (!is.empty(this.config.ratio)) {\n      setAspectRatio.call(player);\n    }\n\n    // Quality\n    Object.defineProperty(player.media, 'quality', {\n      get() {\n        // Get sources\n        const sources = html5.getSources.call(player);\n        const source = sources.find((s) => s.getAttribute('src') === player.source);\n\n        // Return size, if match is found\n        return source && Number(source.getAttribute('size'));\n      },\n      set(input) {\n        if (player.quality === input) {\n          return;\n        }\n\n        // If we're using an external handler...\n        if (player.config.quality.forced && is.function(player.config.quality.onChange)) {\n          player.config.quality.onChange(input);\n        } else {\n          // Get sources\n          const sources = html5.getSources.call(player);\n          // Get first match for requested size\n          const source = sources.find((s) => Number(s.getAttribute('size')) === input);\n\n          // No matching source found\n          if (!source) {\n            return;\n          }\n\n          // Get current state\n          const { currentTime, paused, preload, readyState, playbackRate } = player.media;\n\n          // Set new source\n          player.media.src = source.getAttribute('src');\n\n          // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n          if (preload !== 'none' || readyState) {\n            // Restore time\n            player.once('loadedmetadata', () => {\n              player.speed = playbackRate;\n              player.currentTime = currentTime;\n\n              // Resume playing\n              if (!paused) {\n                silencePromise(player.play());\n              }\n            });\n\n            // Load new source\n            player.media.load();\n          }\n        }\n\n        // Trigger change event\n        triggerEvent.call(player, player.media, 'qualitychange', false, {\n          quality: input,\n        });\n      },\n    });\n  },\n\n  // Cancel current network requests\n  // See https://github.com/sampotts/plyr/issues/174\n  cancelRequests() {\n    if (!this.isHTML5) {\n      return;\n    }\n\n    // Remove child sources\n    removeElement(html5.getSources.call(this));\n\n    // Set blank video src attribute\n    // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n    // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n    this.media.setAttribute('src', this.config.blankVideo);\n\n    // Load the new empty source\n    // This will cancel existing requests\n    // See https://github.com/sampotts/plyr/issues/174\n    this.media.load();\n\n    // Debugging\n    this.debug.log('Cancelled network requests');\n  },\n};\n\nexport default html5;\n", "// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n  return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n  if (is.empty(input)) return input;\n\n  return input.toString().replace(/{(\\d+)}/g, (_, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n  if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n    return 0;\n  }\n\n  return ((current / max) * 100).toFixed(2);\n}\n\n// Replace all occurrences of a string in a string\nexport const replaceAll = (input = '', find = '', replace = '') =>\n  input.replace(new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'), replace.toString());\n\n// Convert to title case\nexport const toTitleCase = (input = '') =>\n  input.toString().replace(/\\w\\S*/g, (text) => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase());\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n  let string = input.toString();\n\n  // Convert kebab case\n  string = replaceAll(string, '-', ' ');\n\n  // Convert snake case\n  string = replaceAll(string, '_', ' ');\n\n  // Convert to title case\n  string = toTitleCase(string);\n\n  // Convert to pascal case\n  return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n  let string = input.toString();\n\n  // Convert to pascal case\n  string = toPascalCase(string);\n\n  // Convert first character to lowercase\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n  const fragment = document.createDocumentFragment();\n  const element = document.createElement('div');\n  fragment.appendChild(element);\n  element.innerHTML = source;\n  return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n  const wrapper = document.createElement('div');\n  wrapper.appendChild(element);\n  return wrapper.innerHTML;\n}\n", "// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './is';\nimport { getDeep } from './objects';\nimport { replaceAll } from './strings';\n\n// Skip i18n for abbreviations and brand names\nconst resources = {\n  pip: 'PIP',\n  airplay: 'AirPlay',\n  html5: 'HTML5',\n  vimeo: 'Vimeo',\n  youtube: 'YouTube',\n};\n\nconst i18n = {\n  get(key = '', config = {}) {\n    if (is.empty(key) || is.empty(config)) {\n      return '';\n    }\n\n    let string = getDeep(config.i18n, key);\n\n    if (is.empty(string)) {\n      if (Object.keys(resources).includes(key)) {\n        return resources[key];\n      }\n\n      return '';\n    }\n\n    const replace = {\n      '{seektime}': config.seekTime,\n      '{title}': config.title,\n    };\n\n    Object.entries(replace).forEach(([k, v]) => {\n      string = replaceAll(string, k, v);\n    });\n\n    return string;\n  },\n};\n\nexport default i18n;\n", "// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n  constructor(player) {\n    this.enabled = player.config.storage.enabled;\n    this.key = player.config.storage.key;\n  }\n\n  // Check for actual support (see if we can use it)\n  static get supported() {\n    try {\n      if (!('localStorage' in window)) {\n        return false;\n      }\n\n      const test = '___test';\n\n      // Try to use it (it might be disabled, e.g. user is in private mode)\n      // see: https://github.com/sampotts/plyr/issues/131\n      window.localStorage.setItem(test, test);\n      window.localStorage.removeItem(test);\n\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n\n  get = (key) => {\n    if (!Storage.supported || !this.enabled) {\n      return null;\n    }\n\n    const store = window.localStorage.getItem(this.key);\n\n    if (is.empty(store)) {\n      return null;\n    }\n\n    const json = JSON.parse(store);\n\n    return is.string(key) && key.length ? json[key] : json;\n  };\n\n  set = (object) => {\n    // Bail if we don't have localStorage support or it's disabled\n    if (!Storage.supported || !this.enabled) {\n      return;\n    }\n\n    // Can only store objectst\n    if (!is.object(object)) {\n      return;\n    }\n\n    // Get current storage\n    let storage = this.get();\n\n    // Default to empty object\n    if (is.empty(storage)) {\n      storage = {};\n    }\n\n    // Update the working copy of the values\n    extend(storage, object);\n\n    // Update storage\n    try {\n      window.localStorage.setItem(this.key, JSON.stringify(storage));\n    } catch (_) {\n      // Do nothing\n    }\n  };\n}\n\nexport default Storage;\n", "// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n  return new Promise((resolve, reject) => {\n    try {\n      const request = new XMLHttpRequest();\n\n      // Check for CORS support\n      if (!('withCredentials' in request)) {\n        return;\n      }\n\n      request.addEventListener('load', () => {\n        if (responseType === 'text') {\n          try {\n            resolve(JSON.parse(request.responseText));\n          } catch (_) {\n            resolve(request.responseText);\n          }\n        } else {\n          resolve(request.response);\n        }\n      });\n\n      request.addEventListener('error', () => {\n        throw new Error(request.status);\n      });\n\n      request.open('GET', url, true);\n\n      // Set the required response type\n      request.responseType = responseType;\n\n      request.send();\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n", "// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n  if (!is.string(url)) {\n    return;\n  }\n\n  const prefix = 'cache';\n  const hasId = is.string(id);\n  let isCached = false;\n  const exists = () => document.getElementById(id) !== null;\n\n  const update = (container, data) => {\n    // eslint-disable-next-line no-param-reassign\n    container.innerHTML = data;\n\n    // Check again incase of race condition\n    if (hasId && exists()) {\n      return;\n    }\n\n    // Inject the SVG to the body\n    document.body.insertAdjacentElement('afterbegin', container);\n  };\n\n  // Only load once if ID set\n  if (!hasId || !exists()) {\n    const useStorage = Storage.supported;\n    // Create container\n    const container = document.createElement('div');\n    container.setAttribute('hidden', '');\n\n    if (hasId) {\n      container.setAttribute('id', id);\n    }\n\n    // Check in cache\n    if (useStorage) {\n      const cached = window.localStorage.getItem(`${prefix}-${id}`);\n      isCached = cached !== null;\n\n      if (isCached) {\n        const data = JSON.parse(cached);\n        update(container, data.content);\n      }\n    }\n\n    // Get the sprite\n    fetch(url)\n      .then((result) => {\n        if (is.empty(result)) {\n          return;\n        }\n\n        if (useStorage) {\n          try {\n            window.localStorage.setItem(\n              `${prefix}-${id}`,\n              JSON.stringify({\n                content: result,\n              }),\n            );\n          } catch (_) {\n            // Do nothing\n          }\n        }\n\n        update(container, result);\n      })\n      .catch(() => {});\n  }\n}\n", "// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = (value) => Math.trunc((value / 60 / 60) % 60, 10);\nexport const getMinutes = (value) => Math.trunc((value / 60) % 60, 10);\nexport const getSeconds = (value) => Math.trunc(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n  // Bail if the value isn't a number\n  if (!is.number(time)) {\n    return formatTime(undefined, displayHours, inverted);\n  }\n\n  // Format time component to add leading zero\n  const format = (value) => `0${value}`.slice(-2);\n  // Breakdown to hours, mins, secs\n  let hours = getHours(time);\n  const mins = getMinutes(time);\n  const secs = getSeconds(time);\n\n  // Do we need to display hours?\n  if (displayHours || hours > 0) {\n    hours = `${hours}:`;\n  } else {\n    hours = '';\n  }\n\n  // Render\n  return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n", "// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport RangeTouch from 'rangetouch';\n\nimport captions from './captions';\nimport html5 from './html5';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n  createElement,\n  emptyElement,\n  getAttributesFromSelector,\n  getElement,\n  getElements,\n  hasClass,\n  matches,\n  removeElement,\n  setAttributes,\n  setFocus,\n  toggleClass,\n  toggleHidden,\n} from './utils/elements';\nimport { off, on } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadSprite from './utils/load-sprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n  // Get icon URL\n  getIconUrl() {\n    const url = new URL(this.config.iconUrl, window.location);\n    const host = window.location.host ? window.location.host : window.top.location.host;\n    const cors = url.host !== host || (browser.isIE && !window.svg4everybody);\n\n    return {\n      url: this.config.iconUrl,\n      cors,\n    };\n  },\n\n  // Find the UI controls\n  findElements() {\n    try {\n      this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n      // Buttons\n      this.elements.buttons = {\n        play: getElements.call(this, this.config.selectors.buttons.play),\n        pause: getElement.call(this, this.config.selectors.buttons.pause),\n        restart: getElement.call(this, this.config.selectors.buttons.restart),\n        rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n        fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n        mute: getElement.call(this, this.config.selectors.buttons.mute),\n        pip: getElement.call(this, this.config.selectors.buttons.pip),\n        airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n        settings: getElement.call(this, this.config.selectors.buttons.settings),\n        captions: getElement.call(this, this.config.selectors.buttons.captions),\n        fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n      };\n\n      // Progress\n      this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n      // Inputs\n      this.elements.inputs = {\n        seek: getElement.call(this, this.config.selectors.inputs.seek),\n        volume: getElement.call(this, this.config.selectors.inputs.volume),\n      };\n\n      // Display\n      this.elements.display = {\n        buffer: getElement.call(this, this.config.selectors.display.buffer),\n        currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n        duration: getElement.call(this, this.config.selectors.display.duration),\n      };\n\n      // Seek tooltip\n      if (is.element(this.elements.progress)) {\n        this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`);\n      }\n\n      return true;\n    } catch (error) {\n      // Log it\n      this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n      // Restore native video controls\n      this.toggleNativeControls(true);\n\n      return false;\n    }\n  },\n\n  // Create <svg> icon\n  createIcon(type, attributes) {\n    const namespace = 'http://www.w3.org/2000/svg';\n    const iconUrl = controls.getIconUrl.call(this);\n    const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n    // Create <svg>\n    const icon = document.createElementNS(namespace, 'svg');\n    setAttributes(\n      icon,\n      extend(attributes, {\n        'aria-hidden': 'true',\n        focusable: 'false',\n      }),\n    );\n\n    // Create the <use> to reference sprite\n    const use = document.createElementNS(namespace, 'use');\n    const path = `${iconPath}-${type}`;\n\n    // Set `href` attributes\n    // https://github.com/sampotts/plyr/issues/460\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n    if ('href' in use) {\n      use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n    }\n\n    // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n    use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n\n    // Add <use> to <svg>\n    icon.appendChild(use);\n\n    return icon;\n  },\n\n  // Create hidden text label\n  createLabel(key, attr = {}) {\n    const text = i18n.get(key, this.config);\n    const attributes = { ...attr, class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' ') };\n\n    return createElement('span', attributes, text);\n  },\n\n  // Create a badge\n  createBadge(text) {\n    if (is.empty(text)) {\n      return null;\n    }\n\n    const badge = createElement('span', {\n      class: this.config.classNames.menu.value,\n    });\n\n    badge.appendChild(\n      createElement(\n        'span',\n        {\n          class: this.config.classNames.menu.badge,\n        },\n        text,\n      ),\n    );\n\n    return badge;\n  },\n\n  // Create a <button>\n  createButton(buttonType, attr) {\n    const attributes = extend({}, attr);\n    let type = toCamelCase(buttonType);\n\n    const props = {\n      element: 'button',\n      toggle: false,\n      label: null,\n      icon: null,\n      labelPressed: null,\n      iconPressed: null,\n    };\n\n    ['element', 'icon', 'label'].forEach((key) => {\n      if (Object.keys(attributes).includes(key)) {\n        props[key] = attributes[key];\n        delete attributes[key];\n      }\n    });\n\n    // Default to 'button' type to prevent form submission\n    if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n      attributes.type = 'button';\n    }\n\n    // Set class name\n    if (Object.keys(attributes).includes('class')) {\n      if (!attributes.class.split(' ').some((c) => c === this.config.classNames.control)) {\n        extend(attributes, {\n          class: `${attributes.class} ${this.config.classNames.control}`,\n        });\n      }\n    } else {\n      attributes.class = this.config.classNames.control;\n    }\n\n    // Large play button\n    switch (buttonType) {\n      case 'play':\n        props.toggle = true;\n        props.label = 'play';\n        props.labelPressed = 'pause';\n        props.icon = 'play';\n        props.iconPressed = 'pause';\n        break;\n\n      case 'mute':\n        props.toggle = true;\n        props.label = 'mute';\n        props.labelPressed = 'unmute';\n        props.icon = 'volume';\n        props.iconPressed = 'muted';\n        break;\n\n      case 'captions':\n        props.toggle = true;\n        props.label = 'enableCaptions';\n        props.labelPressed = 'disableCaptions';\n        props.icon = 'captions-off';\n        props.iconPressed = 'captions-on';\n        break;\n\n      case 'fullscreen':\n        props.toggle = true;\n        props.label = 'enterFullscreen';\n        props.labelPressed = 'exitFullscreen';\n        props.icon = 'enter-fullscreen';\n        props.iconPressed = 'exit-fullscreen';\n        break;\n\n      case 'play-large':\n        attributes.class += ` ${this.config.classNames.control}--overlaid`;\n        type = 'play';\n        props.label = 'play';\n        props.icon = 'play';\n        break;\n\n      default:\n        if (is.empty(props.label)) {\n          props.label = type;\n        }\n        if (is.empty(props.icon)) {\n          props.icon = buttonType;\n        }\n    }\n\n    const button = createElement(props.element);\n\n    // Setup toggle icon and labels\n    if (props.toggle) {\n      // Icon\n      button.appendChild(\n        controls.createIcon.call(this, props.iconPressed, {\n          class: 'icon--pressed',\n        }),\n      );\n      button.appendChild(\n        controls.createIcon.call(this, props.icon, {\n          class: 'icon--not-pressed',\n        }),\n      );\n\n      // Label/Tooltip\n      button.appendChild(\n        controls.createLabel.call(this, props.labelPressed, {\n          class: 'label--pressed',\n        }),\n      );\n      button.appendChild(\n        controls.createLabel.call(this, props.label, {\n          class: 'label--not-pressed',\n        }),\n      );\n    } else {\n      button.appendChild(controls.createIcon.call(this, props.icon));\n      button.appendChild(controls.createLabel.call(this, props.label));\n    }\n\n    // Merge and set attributes\n    extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n    setAttributes(button, attributes);\n\n    // We have multiple play buttons\n    if (type === 'play') {\n      if (!is.array(this.elements.buttons[type])) {\n        this.elements.buttons[type] = [];\n      }\n\n      this.elements.buttons[type].push(button);\n    } else {\n      this.elements.buttons[type] = button;\n    }\n\n    return button;\n  },\n\n  // Create an <input type='range'>\n  createRange(type, attributes) {\n    // Seek input\n    const input = createElement(\n      'input',\n      extend(\n        getAttributesFromSelector(this.config.selectors.inputs[type]),\n        {\n          type: 'range',\n          min: 0,\n          max: 100,\n          step: 0.01,\n          value: 0,\n          autocomplete: 'off',\n          // A11y fixes for https://github.com/sampotts/plyr/issues/905\n          role: 'slider',\n          'aria-label': i18n.get(type, this.config),\n          'aria-valuemin': 0,\n          'aria-valuemax': 100,\n          'aria-valuenow': 0,\n        },\n        attributes,\n      ),\n    );\n\n    this.elements.inputs[type] = input;\n\n    // Set the fill for webkit now\n    controls.updateRangeFill.call(this, input);\n\n    // Improve support on touch devices\n    RangeTouch.setup(input);\n\n    return input;\n  },\n\n  // Create a <progress>\n  createProgress(type, attributes) {\n    const progress = createElement(\n      'progress',\n      extend(\n        getAttributesFromSelector(this.config.selectors.display[type]),\n        {\n          min: 0,\n          max: 100,\n          value: 0,\n          role: 'progressbar',\n          'aria-hidden': true,\n        },\n        attributes,\n      ),\n    );\n\n    // Create the label inside\n    if (type !== 'volume') {\n      progress.appendChild(createElement('span', null, '0'));\n\n      const suffixKey = {\n        played: 'played',\n        buffer: 'buffered',\n      }[type];\n      const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n      progress.innerText = `% ${suffix.toLowerCase()}`;\n    }\n\n    this.elements.display[type] = progress;\n\n    return progress;\n  },\n\n  // Create time display\n  createTime(type, attrs) {\n    const attributes = getAttributesFromSelector(this.config.selectors.display[type], attrs);\n\n    const container = createElement(\n      'div',\n      extend(attributes, {\n        class: `${attributes.class ? attributes.class : ''} ${this.config.classNames.display.time} `.trim(),\n        'aria-label': i18n.get(type, this.config),\n        role: 'timer',\n      }),\n      '00:00',\n    );\n\n    // Reference for updates\n    this.elements.display[type] = container;\n\n    return container;\n  },\n\n  // Bind keyboard shortcuts for a menu item\n  // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n  bindMenuItemShortcuts(menuItem, type) {\n    // Navigate through menus via arrow keys and space\n    on.call(\n      this,\n      menuItem,\n      'keydown keyup',\n      (event) => {\n        // We only care about space and ⬆️ ⬇️️ ➡️\n        if (![' ', 'ArrowUp', 'ArrowDown', 'ArrowRight'].includes(event.key)) {\n          return;\n        }\n\n        // Prevent play / seek\n        event.preventDefault();\n        event.stopPropagation();\n\n        // We're just here to prevent the keydown bubbling\n        if (event.type === 'keydown') {\n          return;\n        }\n\n        const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n        // Show the respective menu\n        if (!isRadioButton && [' ', 'ArrowRight'].includes(event.key)) {\n          controls.showMenuPanel.call(this, type, true);\n        } else {\n          let target;\n\n          if (event.key !== ' ') {\n            if (event.key === 'ArrowDown' || (isRadioButton && event.key === 'ArrowRight')) {\n              target = menuItem.nextElementSibling;\n\n              if (!is.element(target)) {\n                target = menuItem.parentNode.firstElementChild;\n              }\n            } else {\n              target = menuItem.previousElementSibling;\n\n              if (!is.element(target)) {\n                target = menuItem.parentNode.lastElementChild;\n              }\n            }\n\n            setFocus.call(this, target, true);\n          }\n        }\n      },\n      false,\n    );\n\n    // Enter will fire a `click` event but we still need to manage focus\n    // So we bind to keyup which fires after and set focus here\n    on.call(this, menuItem, 'keyup', (event) => {\n      if (event.key !== 'Return') return;\n\n      controls.focusFirstMenuItem.call(this, null, true);\n    });\n  },\n\n  // Create a settings menu item\n  createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n    const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n    const menuItem = createElement(\n      'button',\n      extend(attributes, {\n        type: 'button',\n        role: 'menuitemradio',\n        class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n        'aria-checked': checked,\n        value,\n      }),\n    );\n\n    const flex = createElement('span');\n\n    // We have to set as HTML incase of special characters\n    flex.innerHTML = title;\n\n    if (is.element(badge)) {\n      flex.appendChild(badge);\n    }\n\n    menuItem.appendChild(flex);\n\n    // Replicate radio button behavior\n    Object.defineProperty(menuItem, 'checked', {\n      enumerable: true,\n      get() {\n        return menuItem.getAttribute('aria-checked') === 'true';\n      },\n      set(check) {\n        // Ensure exclusivity\n        if (check) {\n          Array.from(menuItem.parentNode.children)\n            .filter((node) => matches(node, '[role=\"menuitemradio\"]'))\n            .forEach((node) => node.setAttribute('aria-checked', 'false'));\n        }\n\n        menuItem.setAttribute('aria-checked', check ? 'true' : 'false');\n      },\n    });\n\n    this.listeners.bind(\n      menuItem,\n      'click keyup',\n      (event) => {\n        if (is.keyboardEvent(event) && event.key !== ' ') {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        menuItem.checked = true;\n\n        switch (type) {\n          case 'language':\n            this.currentTrack = Number(value);\n            break;\n\n          case 'quality':\n            this.quality = value;\n            break;\n\n          case 'speed':\n            this.speed = parseFloat(value);\n            break;\n\n          default:\n            break;\n        }\n\n        controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n      },\n      type,\n      false,\n    );\n\n    controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n    list.appendChild(menuItem);\n  },\n\n  // Format a time for display\n  formatTime(time = 0, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n      return time;\n    }\n\n    // Always display hours if duration is over an hour\n    const forceHours = getHours(this.duration) > 0;\n\n    return formatTime(time, forceHours, inverted);\n  },\n\n  // Update the displayed time\n  updateTimeDisplay(target = null, time = 0, inverted = false) {\n    // Bail if there's no element to display or the value isn't a number\n    if (!is.element(target) || !is.number(time)) {\n      return;\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    target.innerText = controls.formatTime(time, inverted);\n  },\n\n  // Update volume UI and storage\n  updateVolume() {\n    if (!this.supported.ui) {\n      return;\n    }\n\n    // Update range\n    if (is.element(this.elements.inputs.volume)) {\n      controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n    }\n\n    // Update mute state\n    if (is.element(this.elements.buttons.mute)) {\n      this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n    }\n  },\n\n  // Update seek value and lower fill\n  setRange(target, value = 0) {\n    if (!is.element(target)) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    target.value = value;\n\n    // Webkit range fill\n    controls.updateRangeFill.call(this, target);\n  },\n\n  // Update <progress> elements\n  updateProgress(event) {\n    if (!this.supported.ui || !is.event(event)) {\n      return;\n    }\n\n    let value = 0;\n\n    const setProgress = (target, input) => {\n      const val = is.number(input) ? input : 0;\n      const progress = is.element(target) ? target : this.elements.display.buffer;\n\n      // Update value and label\n      if (is.element(progress)) {\n        progress.value = val;\n\n        // Update text label inside\n        const label = progress.getElementsByTagName('span')[0];\n        if (is.element(label)) {\n          label.childNodes[0].nodeValue = val;\n        }\n      }\n    };\n\n    if (event) {\n      switch (event.type) {\n        // Video playing\n        case 'timeupdate':\n        case 'seeking':\n        case 'seeked':\n          value = getPercentage(this.currentTime, this.duration);\n\n          // Set seek range value only if it's a 'natural' time event\n          if (event.type === 'timeupdate') {\n            controls.setRange.call(this, this.elements.inputs.seek, value);\n          }\n\n          break;\n\n        // Check buffer status\n        case 'playing':\n        case 'progress':\n          setProgress(this.elements.display.buffer, this.buffered * 100);\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  },\n\n  // Webkit polyfill for lower fill range\n  updateRangeFill(target) {\n    // Get range from event if event passed\n    const range = is.event(target) ? target.target : target;\n\n    // Needs to be a valid <input type='range'>\n    if (!is.element(range) || range.getAttribute('type') !== 'range') {\n      return;\n    }\n\n    // Set aria values for https://github.com/sampotts/plyr/issues/905\n    if (matches(range, this.config.selectors.inputs.seek)) {\n      range.setAttribute('aria-valuenow', this.currentTime);\n      const currentTime = controls.formatTime(this.currentTime);\n      const duration = controls.formatTime(this.duration);\n      const format = i18n.get('seekLabel', this.config);\n      range.setAttribute(\n        'aria-valuetext',\n        format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n      );\n    } else if (matches(range, this.config.selectors.inputs.volume)) {\n      const percent = range.value * 100;\n      range.setAttribute('aria-valuenow', percent);\n      range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n    } else {\n      range.setAttribute('aria-valuenow', range.value);\n    }\n\n    // WebKit only\n    if (!browser.isWebKit && !browser.isIPadOS) {\n      return;\n    }\n\n    // Set CSS custom property\n    range.style.setProperty('--value', `${(range.value / range.max) * 100}%`);\n  },\n\n  // Update hover tooltip for seeking\n  updateSeekTooltip(event) {\n    // Bail if setting not true\n    if (\n      !this.config.tooltips.seek ||\n      !is.element(this.elements.inputs.seek) ||\n      !is.element(this.elements.display.seekTooltip) ||\n      this.duration === 0\n    ) {\n      return;\n    }\n\n    const tipElement = this.elements.display.seekTooltip;\n    const visible = `${this.config.classNames.tooltip}--visible`;\n    const toggle = (show) => toggleClass(tipElement, visible, show);\n\n    // Hide on touch\n    if (this.touch) {\n      toggle(false);\n      return;\n    }\n\n    // Determine percentage, if already visible\n    let percent = 0;\n    const clientRect = this.elements.progress.getBoundingClientRect();\n\n    if (is.event(event)) {\n      percent = (100 / clientRect.width) * (event.pageX - clientRect.left);\n    } else if (hasClass(tipElement, visible)) {\n      percent = parseFloat(tipElement.style.left, 10);\n    } else {\n      return;\n    }\n\n    // Set bounds\n    if (percent < 0) {\n      percent = 0;\n    } else if (percent > 100) {\n      percent = 100;\n    }\n\n    const time = (this.duration / 100) * percent;\n\n    // Display the time a click would seek to\n    tipElement.innerText = controls.formatTime(time);\n\n    // Get marker point for time\n    const point = this.config.markers?.points?.find(({ time: t }) => t === Math.round(time));\n\n    // Append the point label to the tooltip\n    if (point) {\n      tipElement.insertAdjacentHTML('afterbegin', `${point.label}<br>`);\n    }\n\n    // Set position\n    tipElement.style.left = `${percent}%`;\n\n    // Show/hide the tooltip\n    // If the event is a moues in/out and percentage is inside bounds\n    if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n      toggle(event.type === 'mouseenter');\n    }\n  },\n\n  // Handle time change event\n  timeUpdate(event) {\n    // Only invert if only one time element is displayed and used for both duration and currentTime\n    const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n    // Duration\n    controls.updateTimeDisplay.call(\n      this,\n      this.elements.display.currentTime,\n      invert ? this.duration - this.currentTime : this.currentTime,\n      invert,\n    );\n\n    // Ignore updates while seeking\n    if (event && event.type === 'timeupdate' && this.media.seeking) {\n      return;\n    }\n\n    // Playing progress\n    controls.updateProgress.call(this, event);\n  },\n\n  // Show the duration on metadataloaded or durationchange events\n  durationUpdate() {\n    // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n    if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n      return;\n    }\n\n    // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n    // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n    // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n    // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n    if (this.duration >= 2 ** 32) {\n      toggleHidden(this.elements.display.currentTime, true);\n      toggleHidden(this.elements.progress, true);\n      return;\n    }\n\n    // Update ARIA values\n    if (is.element(this.elements.inputs.seek)) {\n      this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n    }\n\n    // If there's a spot to display duration\n    const hasDuration = is.element(this.elements.display.duration);\n\n    // If there's only one time display, display duration there\n    if (!hasDuration && this.config.displayDuration && this.paused) {\n      controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n    }\n\n    // If there's a duration element, update content\n    if (hasDuration) {\n      controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n    }\n\n    if (this.config.markers.enabled) {\n      controls.setMarkers.call(this);\n    }\n\n    // Update the tooltip (if visible)\n    controls.updateSeekTooltip.call(this);\n  },\n\n  // Hide/show a tab\n  toggleMenuButton(setting, toggle) {\n    toggleHidden(this.elements.settings.buttons[setting], !toggle);\n  },\n\n  // Update the selected setting\n  updateSetting(setting, container, input) {\n    const pane = this.elements.settings.panels[setting];\n    let value = null;\n    let list = container;\n\n    if (setting === 'captions') {\n      value = this.currentTrack;\n    } else {\n      value = !is.empty(input) ? input : this[setting];\n\n      // Get default\n      if (is.empty(value)) {\n        value = this.config[setting].default;\n      }\n\n      // Unsupported value\n      if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n        this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n        return;\n      }\n\n      // Disabled value\n      if (!this.config[setting].options.includes(value)) {\n        this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n        return;\n      }\n    }\n\n    // Get the list if we need to\n    if (!is.element(list)) {\n      list = pane && pane.querySelector('[role=\"menu\"]');\n    }\n\n    // If there's no list it means it's not been rendered...\n    if (!is.element(list)) {\n      return;\n    }\n\n    // Update the label\n    const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n    label.innerHTML = controls.getLabel.call(this, setting, value);\n\n    // Find the radio option and check it\n    const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n    if (is.element(target)) {\n      target.checked = true;\n    }\n  },\n\n  // Translate a value into a nice label\n  getLabel(setting, value) {\n    switch (setting) {\n      case 'speed':\n        return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n      case 'quality':\n        if (is.number(value)) {\n          const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n          if (!label.length) {\n            return `${value}p`;\n          }\n\n          return label;\n        }\n\n        return toTitleCase(value);\n\n      case 'captions':\n        return captions.getLabel.call(this);\n\n      default:\n        return null;\n    }\n  },\n\n  // Set the quality menu\n  setQualityMenu(options) {\n    // Menu required\n    if (!is.element(this.elements.settings.panels.quality)) {\n      return;\n    }\n\n    const type = 'quality';\n    const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n    // Set options if passed and filter based on uniqueness and config\n    if (is.array(options)) {\n      this.options.quality = dedupe(options).filter((quality) => this.config.quality.options.includes(quality));\n    }\n\n    // Toggle the pane and tab\n    const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n    controls.toggleMenuButton.call(this, type, toggle);\n\n    // Empty the menu\n    emptyElement(list);\n\n    // Check if we need to toggle the parent\n    controls.checkMenu.call(this);\n\n    // If we're hiding, nothing more to do\n    if (!toggle) {\n      return;\n    }\n\n    // Get the badge HTML for HD, 4K etc\n    const getBadge = (quality) => {\n      const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n      if (!label.length) {\n        return null;\n      }\n\n      return controls.createBadge.call(this, label);\n    };\n\n    // Sort options by the config and then render options\n    this.options.quality\n      .sort((a, b) => {\n        const sorting = this.config.quality.options;\n        return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n      })\n      .forEach((quality) => {\n        controls.createMenuItem.call(this, {\n          value: quality,\n          list,\n          type,\n          title: controls.getLabel.call(this, 'quality', quality),\n          badge: getBadge(quality),\n        });\n      });\n\n    controls.updateSetting.call(this, type, list);\n  },\n\n  // Set the looping options\n  /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n  // Get current selected caption language\n  // TODO: rework this to user the getter in the API?\n\n  // Set a list of available captions languages\n  setCaptionsMenu() {\n    // Menu required\n    if (!is.element(this.elements.settings.panels.captions)) {\n      return;\n    }\n\n    // TODO: Captions or language? Currently it's mixed\n    const type = 'captions';\n    const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n    const tracks = captions.getTracks.call(this);\n    const toggle = Boolean(tracks.length);\n\n    // Toggle the pane and tab\n    controls.toggleMenuButton.call(this, type, toggle);\n\n    // Empty the menu\n    emptyElement(list);\n\n    // Check if we need to toggle the parent\n    controls.checkMenu.call(this);\n\n    // If there's no captions, bail\n    if (!toggle) {\n      return;\n    }\n\n    // Generate options data\n    const options = tracks.map((track, value) => ({\n      value,\n      checked: this.captions.toggled && this.currentTrack === value,\n      title: captions.getLabel.call(this, track),\n      badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n      list,\n      type: 'language',\n    }));\n\n    // Add the \"Disabled\" option to turn off captions\n    options.unshift({\n      value: -1,\n      checked: !this.captions.toggled,\n      title: i18n.get('disabled', this.config),\n      list,\n      type: 'language',\n    });\n\n    // Generate options\n    options.forEach(controls.createMenuItem.bind(this));\n\n    controls.updateSetting.call(this, type, list);\n  },\n\n  // Set a list of available captions languages\n  setSpeedMenu() {\n    // Menu required\n    if (!is.element(this.elements.settings.panels.speed)) {\n      return;\n    }\n\n    const type = 'speed';\n    const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n    // Filter out invalid speeds\n    this.options.speed = this.options.speed.filter((o) => o >= this.minimumSpeed && o <= this.maximumSpeed);\n\n    // Toggle the pane and tab\n    const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n    controls.toggleMenuButton.call(this, type, toggle);\n\n    // Empty the menu\n    emptyElement(list);\n\n    // Check if we need to toggle the parent\n    controls.checkMenu.call(this);\n\n    // If we're hiding, nothing more to do\n    if (!toggle) {\n      return;\n    }\n\n    // Create items\n    this.options.speed.forEach((speed) => {\n      controls.createMenuItem.call(this, {\n        value: speed,\n        list,\n        type,\n        title: controls.getLabel.call(this, 'speed', speed),\n      });\n    });\n\n    controls.updateSetting.call(this, type, list);\n  },\n\n  // Check if we need to hide/show the settings menu\n  checkMenu() {\n    const { buttons } = this.elements.settings;\n    const visible = !is.empty(buttons) && Object.values(buttons).some((button) => !button.hidden);\n\n    toggleHidden(this.elements.settings.menu, !visible);\n  },\n\n  // Focus the first menu item in a given (or visible) menu\n  focusFirstMenuItem(pane, focusVisible = false) {\n    if (this.elements.settings.popup.hidden) {\n      return;\n    }\n\n    let target = pane;\n\n    if (!is.element(target)) {\n      target = Object.values(this.elements.settings.panels).find((p) => !p.hidden);\n    }\n\n    const firstItem = target.querySelector('[role^=\"menuitem\"]');\n\n    setFocus.call(this, firstItem, focusVisible);\n  },\n\n  // Show/hide menu\n  toggleMenu(input) {\n    const { popup } = this.elements.settings;\n    const button = this.elements.buttons.settings;\n\n    // Menu and button are required\n    if (!is.element(popup) || !is.element(button)) {\n      return;\n    }\n\n    // True toggle by default\n    const { hidden } = popup;\n    let show = hidden;\n\n    if (is.boolean(input)) {\n      show = input;\n    } else if (is.keyboardEvent(input) && input.key === 'Escape') {\n      show = false;\n    } else if (is.event(input)) {\n      // If Plyr is in a shadowDOM, the event target is set to the component, instead of the\n      // Element in the shadowDOM. The path, if available, is complete.\n      const target = is.function(input.composedPath) ? input.composedPath()[0] : input.target;\n      const isMenuItem = popup.contains(target);\n\n      // If the click was inside the menu or if the click\n      // wasn't the button or menu item and we're trying to\n      // show the menu (a doc click shouldn't show the menu)\n      if (isMenuItem || (!isMenuItem && input.target !== button && show)) {\n        return;\n      }\n    }\n\n    // Set button attributes\n    button.setAttribute('aria-expanded', show);\n\n    // Show the actual popup\n    toggleHidden(popup, !show);\n\n    // Add class hook\n    toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n    // Focus the first item if key interaction\n    if (show && is.keyboardEvent(input)) {\n      controls.focusFirstMenuItem.call(this, null, true);\n    } else if (!show && !hidden) {\n      // If closing, re-focus the button\n      setFocus.call(this, button, is.keyboardEvent(input));\n    }\n  },\n\n  // Get the natural size of a menu panel\n  getMenuSize(tab) {\n    const clone = tab.cloneNode(true);\n    clone.style.position = 'absolute';\n    clone.style.opacity = 0;\n    clone.removeAttribute('hidden');\n\n    // Append to parent so we get the \"real\" size\n    tab.parentNode.appendChild(clone);\n\n    // Get the sizes before we remove\n    const width = clone.scrollWidth;\n    const height = clone.scrollHeight;\n\n    // Remove from the DOM\n    removeElement(clone);\n\n    return {\n      width,\n      height,\n    };\n  },\n\n  // Show a panel in the menu\n  showMenuPanel(type = '', focusVisible = false) {\n    const target = this.elements.container.querySelector(`#plyr-settings-${this.id}-${type}`);\n\n    // Nothing to show, bail\n    if (!is.element(target)) {\n      return;\n    }\n\n    // Hide all other panels\n    const container = target.parentNode;\n    const current = Array.from(container.children).find((node) => !node.hidden);\n\n    // If we can do fancy animations, we'll animate the height/width\n    if (support.transitions && !support.reducedMotion) {\n      // Set the current width as a base\n      container.style.width = `${current.scrollWidth}px`;\n      container.style.height = `${current.scrollHeight}px`;\n\n      // Get potential sizes\n      const size = controls.getMenuSize.call(this, target);\n\n      // Restore auto height/width\n      const restore = (event) => {\n        // We're only bothered about height and width on the container\n        if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n          return;\n        }\n\n        // Revert back to auto\n        container.style.width = '';\n        container.style.height = '';\n\n        // Only listen once\n        off.call(this, container, transitionEndEvent, restore);\n      };\n\n      // Listen for the transition finishing and restore auto height/width\n      on.call(this, container, transitionEndEvent, restore);\n\n      // Set dimensions to target\n      container.style.width = `${size.width}px`;\n      container.style.height = `${size.height}px`;\n    }\n\n    // Set attributes on current tab\n    toggleHidden(current, true);\n\n    // Set attributes on target\n    toggleHidden(target, false);\n\n    // Focus the first item\n    controls.focusFirstMenuItem.call(this, target, focusVisible);\n  },\n\n  // Set the download URL\n  setDownloadUrl() {\n    const button = this.elements.buttons.download;\n\n    // Bail if no button\n    if (!is.element(button)) {\n      return;\n    }\n\n    // Set attribute\n    button.setAttribute('href', this.download);\n  },\n\n  // Build the default HTML\n  create(data) {\n    const {\n      bindMenuItemShortcuts,\n      createButton,\n      createProgress,\n      createRange,\n      createTime,\n      setQualityMenu,\n      setSpeedMenu,\n      showMenuPanel,\n    } = controls;\n    this.elements.controls = null;\n\n    // Larger overlaid play button\n    if (is.array(this.config.controls) && this.config.controls.includes('play-large')) {\n      this.elements.container.appendChild(createButton.call(this, 'play-large'));\n    }\n\n    // Create the container\n    const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n    this.elements.controls = container;\n\n    // Default item attributes\n    const defaultAttributes = { class: 'plyr__controls__item' };\n\n    // Loop through controls in order\n    dedupe(is.array(this.config.controls) ? this.config.controls : []).forEach((control) => {\n      // Restart button\n      if (control === 'restart') {\n        container.appendChild(createButton.call(this, 'restart', defaultAttributes));\n      }\n\n      // Rewind button\n      if (control === 'rewind') {\n        container.appendChild(createButton.call(this, 'rewind', defaultAttributes));\n      }\n\n      // Play/Pause button\n      if (control === 'play') {\n        container.appendChild(createButton.call(this, 'play', defaultAttributes));\n      }\n\n      // Fast forward button\n      if (control === 'fast-forward') {\n        container.appendChild(createButton.call(this, 'fast-forward', defaultAttributes));\n      }\n\n      // Progress\n      if (control === 'progress') {\n        const progressContainer = createElement('div', {\n          class: `${defaultAttributes.class} plyr__progress__container`,\n        });\n\n        const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n        // Seek range slider\n        progress.appendChild(\n          createRange.call(this, 'seek', {\n            id: `plyr-seek-${data.id}`,\n          }),\n        );\n\n        // Buffer progress\n        progress.appendChild(createProgress.call(this, 'buffer'));\n\n        // TODO: Add loop display indicator\n\n        // Seek tooltip\n        if (this.config.tooltips.seek) {\n          const tooltip = createElement(\n            'span',\n            {\n              class: this.config.classNames.tooltip,\n            },\n            '00:00',\n          );\n\n          progress.appendChild(tooltip);\n          this.elements.display.seekTooltip = tooltip;\n        }\n\n        this.elements.progress = progress;\n        progressContainer.appendChild(this.elements.progress);\n        container.appendChild(progressContainer);\n      }\n\n      // Media current time display\n      if (control === 'current-time') {\n        container.appendChild(createTime.call(this, 'currentTime', defaultAttributes));\n      }\n\n      // Media duration display\n      if (control === 'duration') {\n        container.appendChild(createTime.call(this, 'duration', defaultAttributes));\n      }\n\n      // Volume controls\n      if (control === 'mute' || control === 'volume') {\n        let { volume } = this.elements;\n\n        // Create the volume container if needed\n        if (!is.element(volume) || !container.contains(volume)) {\n          volume = createElement(\n            'div',\n            extend({}, defaultAttributes, {\n              class: `${defaultAttributes.class} plyr__volume`.trim(),\n            }),\n          );\n\n          this.elements.volume = volume;\n\n          container.appendChild(volume);\n        }\n\n        // Toggle mute button\n        if (control === 'mute') {\n          volume.appendChild(createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        // Ignored on iOS as it's handled globally\n        // https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html\n        if (control === 'volume' && !browser.isIos && !browser.isIPadOS) {\n          // Set the attributes\n          const attributes = {\n            max: 1,\n            step: 0.05,\n            value: this.config.volume,\n          };\n\n          // Create the volume range slider\n          volume.appendChild(\n            createRange.call(\n              this,\n              'volume',\n              extend(attributes, {\n                id: `plyr-volume-${data.id}`,\n              }),\n            ),\n          );\n        }\n      }\n\n      // Toggle captions button\n      if (control === 'captions') {\n        container.appendChild(createButton.call(this, 'captions', defaultAttributes));\n      }\n\n      // Settings button / menu\n      if (control === 'settings' && !is.empty(this.config.settings)) {\n        const wrapper = createElement(\n          'div',\n          extend({}, defaultAttributes, {\n            class: `${defaultAttributes.class} plyr__menu`.trim(),\n            hidden: '',\n          }),\n        );\n\n        wrapper.appendChild(\n          createButton.call(this, 'settings', {\n            'aria-haspopup': true,\n            'aria-controls': `plyr-settings-${data.id}`,\n            'aria-expanded': false,\n          }),\n        );\n\n        const popup = createElement('div', {\n          class: 'plyr__menu__container',\n          id: `plyr-settings-${data.id}`,\n          hidden: '',\n        });\n\n        const inner = createElement('div');\n\n        const home = createElement('div', {\n          id: `plyr-settings-${data.id}-home`,\n        });\n\n        // Create the menu\n        const menu = createElement('div', {\n          role: 'menu',\n        });\n\n        home.appendChild(menu);\n        inner.appendChild(home);\n        this.elements.settings.panels.home = home;\n\n        // Build the menu items\n        this.config.settings.forEach((type) => {\n          // TODO: bundle this with the createMenuItem helper and bindings\n          const menuItem = createElement(\n            'button',\n            extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n              type: 'button',\n              class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n              role: 'menuitem',\n              'aria-haspopup': true,\n              hidden: '',\n            }),\n          );\n\n          // Bind menu shortcuts for keyboard users\n          bindMenuItemShortcuts.call(this, menuItem, type);\n\n          // Show menu on click\n          on.call(this, menuItem, 'click', () => {\n            showMenuPanel.call(this, type, false);\n          });\n\n          const flex = createElement('span', null, i18n.get(type, this.config));\n\n          const value = createElement('span', {\n            class: this.config.classNames.menu.value,\n          });\n\n          // Speed contains HTML entities\n          value.innerHTML = data[type];\n\n          flex.appendChild(value);\n          menuItem.appendChild(flex);\n          menu.appendChild(menuItem);\n\n          // Build the panes\n          const pane = createElement('div', {\n            id: `plyr-settings-${data.id}-${type}`,\n            hidden: '',\n          });\n\n          // Back button\n          const backButton = createElement('button', {\n            type: 'button',\n            class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n          });\n\n          // Visible label\n          backButton.appendChild(\n            createElement(\n              'span',\n              {\n                'aria-hidden': true,\n              },\n              i18n.get(type, this.config),\n            ),\n          );\n\n          // Screen reader label\n          backButton.appendChild(\n            createElement(\n              'span',\n              {\n                class: this.config.classNames.hidden,\n              },\n              i18n.get('menuBack', this.config),\n            ),\n          );\n\n          // Go back via keyboard\n          on.call(\n            this,\n            pane,\n            'keydown',\n            (event) => {\n              if (event.key !== 'ArrowLeft') return;\n\n              // Prevent seek\n              event.preventDefault();\n              event.stopPropagation();\n\n              // Show the respective menu\n              showMenuPanel.call(this, 'home', true);\n            },\n            false,\n          );\n\n          // Go back via button click\n          on.call(this, backButton, 'click', () => {\n            showMenuPanel.call(this, 'home', false);\n          });\n\n          // Add to pane\n          pane.appendChild(backButton);\n\n          // Menu\n          pane.appendChild(\n            createElement('div', {\n              role: 'menu',\n            }),\n          );\n\n          inner.appendChild(pane);\n\n          this.elements.settings.buttons[type] = menuItem;\n          this.elements.settings.panels[type] = pane;\n        });\n\n        popup.appendChild(inner);\n        wrapper.appendChild(popup);\n        container.appendChild(wrapper);\n\n        this.elements.settings.popup = popup;\n        this.elements.settings.menu = wrapper;\n      }\n\n      // Picture in picture button\n      if (control === 'pip' && support.pip) {\n        container.appendChild(createButton.call(this, 'pip', defaultAttributes));\n      }\n\n      // Airplay button\n      if (control === 'airplay' && support.airplay) {\n        container.appendChild(createButton.call(this, 'airplay', defaultAttributes));\n      }\n\n      // Download button\n      if (control === 'download') {\n        const attributes = extend({}, defaultAttributes, {\n          element: 'a',\n          href: this.download,\n          target: '_blank',\n        });\n\n        // Set download attribute for HTML5 only\n        if (this.isHTML5) {\n          attributes.download = '';\n        }\n\n        const { download } = this.config.urls;\n\n        if (!is.url(download) && this.isEmbed) {\n          extend(attributes, {\n            icon: `logo-${this.provider}`,\n            label: this.provider,\n          });\n        }\n\n        container.appendChild(createButton.call(this, 'download', attributes));\n      }\n\n      // Toggle fullscreen button\n      if (control === 'fullscreen') {\n        container.appendChild(createButton.call(this, 'fullscreen', defaultAttributes));\n      }\n    });\n\n    // Set available quality levels\n    if (this.isHTML5) {\n      setQualityMenu.call(this, html5.getQualityOptions.call(this));\n    }\n\n    setSpeedMenu.call(this);\n\n    return container;\n  },\n\n  // Insert controls\n  inject() {\n    // Sprite\n    if (this.config.loadSprite) {\n      const icon = controls.getIconUrl.call(this);\n\n      // Only load external sprite using AJAX\n      if (icon.cors) {\n        loadSprite(icon.url, 'sprite-plyr');\n      }\n    }\n\n    // Create a unique ID\n    this.id = Math.floor(Math.random() * 10000);\n\n    // Null by default\n    let container = null;\n    this.elements.controls = null;\n\n    // Set template properties\n    const props = {\n      id: this.id,\n      seektime: this.config.seekTime,\n      title: this.config.title,\n    };\n    let update = true;\n\n    // If function, run it and use output\n    if (is.function(this.config.controls)) {\n      this.config.controls = this.config.controls.call(this, props);\n    }\n\n    // Convert falsy controls to empty array (primarily for empty strings)\n    if (!this.config.controls) {\n      this.config.controls = [];\n    }\n\n    if (is.element(this.config.controls) || is.string(this.config.controls)) {\n      // HTMLElement or Non-empty string passed as the option\n      container = this.config.controls;\n    } else {\n      // Create controls\n      container = controls.create.call(this, {\n        id: this.id,\n        seektime: this.config.seekTime,\n        speed: this.speed,\n        quality: this.quality,\n        captions: captions.getLabel.call(this),\n        // TODO: Looping\n        // loop: 'None',\n      });\n      update = false;\n    }\n\n    // Replace props with their value\n    const replace = (input) => {\n      let result = input;\n\n      Object.entries(props).forEach(([key, value]) => {\n        result = replaceAll(result, `{${key}}`, value);\n      });\n\n      return result;\n    };\n\n    // Update markup\n    if (update) {\n      if (is.string(this.config.controls)) {\n        container = replace(container);\n      }\n    }\n\n    // Controls container\n    let target;\n\n    // Inject to custom location\n    if (is.string(this.config.selectors.controls.container)) {\n      target = document.querySelector(this.config.selectors.controls.container);\n    }\n\n    // Inject into the container by default\n    if (!is.element(target)) {\n      target = this.elements.container;\n    }\n\n    // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n    const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n    target[insertMethod]('afterbegin', container);\n\n    // Find the elements if need be\n    if (!is.element(this.elements.controls)) {\n      controls.findElements.call(this);\n    }\n\n    // Add pressed property to buttons\n    if (!is.empty(this.elements.buttons)) {\n      const addProperty = (button) => {\n        const className = this.config.classNames.controlPressed;\n        button.setAttribute('aria-pressed', 'false');\n\n        Object.defineProperty(button, 'pressed', {\n          configurable: true,\n          enumerable: true,\n          get() {\n            return hasClass(button, className);\n          },\n          set(pressed = false) {\n            toggleClass(button, className, pressed);\n            button.setAttribute('aria-pressed', pressed ? 'true' : 'false');\n          },\n        });\n      };\n\n      // Toggle classname when pressed property is set\n      Object.values(this.elements.buttons)\n        .filter(Boolean)\n        .forEach((button) => {\n          if (is.array(button) || is.nodeList(button)) {\n            Array.from(button).filter(Boolean).forEach(addProperty);\n          } else {\n            addProperty(button);\n          }\n        });\n    }\n\n    // Edge sometimes doesn't finish the paint so force a repaint\n    if (browser.isEdge) {\n      repaint(target);\n    }\n\n    // Setup tooltips\n    if (this.config.tooltips.controls) {\n      const { classNames, selectors } = this.config;\n      const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n      const labels = getElements.call(this, selector);\n\n      Array.from(labels).forEach((label) => {\n        toggleClass(label, this.config.classNames.hidden, false);\n        toggleClass(label, this.config.classNames.tooltip, true);\n      });\n    }\n  },\n\n  // Set media metadata\n  setMediaMetadata() {\n    try {\n      if ('mediaSession' in navigator) {\n        navigator.mediaSession.metadata = new window.MediaMetadata({\n          title: this.config.mediaMetadata.title,\n          artist: this.config.mediaMetadata.artist,\n          album: this.config.mediaMetadata.album,\n          artwork: this.config.mediaMetadata.artwork,\n        });\n      }\n    } catch (_) {\n      // Do nothing\n    }\n  },\n\n  // Add markers\n  setMarkers() {\n    if (!this.duration || this.elements.markers) return;\n\n    // Get valid points\n    const points = this.config.markers?.points?.filter(({ time }) => time > 0 && time < this.duration);\n    if (!points?.length) return;\n\n    const containerFragment = document.createDocumentFragment();\n    const pointsFragment = document.createDocumentFragment();\n    let tipElement = null;\n    const tipVisible = `${this.config.classNames.tooltip}--visible`;\n    const toggleTip = (show) => toggleClass(tipElement, tipVisible, show);\n\n    // Inject markers to progress container\n    points.forEach((point) => {\n      const markerElement = createElement(\n        'span',\n        {\n          class: this.config.classNames.marker,\n        },\n        '',\n      );\n\n      const left = `${(point.time / this.duration) * 100}%`;\n\n      if (tipElement) {\n        // Show on hover\n        markerElement.addEventListener('mouseenter', () => {\n          if (point.label) return;\n          tipElement.style.left = left;\n          tipElement.innerHTML = point.label;\n          toggleTip(true);\n        });\n\n        // Hide on leave\n        markerElement.addEventListener('mouseleave', () => {\n          toggleTip(false);\n        });\n      }\n\n      markerElement.addEventListener('click', () => {\n        this.currentTime = point.time;\n      });\n\n      markerElement.style.left = left;\n      pointsFragment.appendChild(markerElement);\n    });\n\n    containerFragment.appendChild(pointsFragment);\n\n    // Inject a tooltip if needed\n    if (!this.config.tooltips.seek) {\n      tipElement = createElement(\n        'span',\n        {\n          class: this.config.classNames.tooltip,\n        },\n        '',\n      );\n\n      containerFragment.appendChild(tipElement);\n    }\n\n    this.elements.markers = {\n      points: pointsFragment,\n      tip: tipElement,\n    };\n\n    this.elements.progress.appendChild(containerFragment);\n  },\n};\n\nexport default controls;\n", "// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {String} input - the URL to be parsed\n * @param {Boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n  let url = input;\n\n  if (safe) {\n    const parser = document.createElement('a');\n    parser.href = url;\n    url = parser.href;\n  }\n\n  try {\n    return new URL(url);\n  } catch (_) {\n    return null;\n  }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n  const params = new URLSearchParams();\n\n  if (is.object(input)) {\n    Object.entries(input).forEach(([key, value]) => {\n      params.set(key, value);\n    });\n  }\n\n  return params;\n}\n", "// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n  createElement,\n  emptyElement,\n  getAttributesFromSelector,\n  insertAfter,\n  removeElement,\n  toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n  // Setup captions\n  setup() {\n    // Requires UI support\n    if (!this.supported.ui) {\n      return;\n    }\n\n    // Only Vimeo and HTML5 video supported at this point\n    if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n      // Clear menu and hide\n      if (\n        is.array(this.config.controls) &&\n        this.config.controls.includes('settings') &&\n        this.config.settings.includes('captions')\n      ) {\n        controls.setCaptionsMenu.call(this);\n      }\n\n      return;\n    }\n\n    // Inject the container\n    if (!is.element(this.elements.captions)) {\n      this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n      this.elements.captions.setAttribute('dir', 'auto');\n\n      insertAfter(this.elements.captions, this.elements.wrapper);\n    }\n\n    // Fix IE captions if CORS is used\n    // Fetch captions and inject as blobs instead (data URIs not supported!)\n    if (browser.isIE && window.URL) {\n      const elements = this.media.querySelectorAll('track');\n\n      Array.from(elements).forEach((track) => {\n        const src = track.getAttribute('src');\n        const url = parseUrl(src);\n\n        if (\n          url !== null &&\n          url.hostname !== window.location.href.hostname &&\n          ['http:', 'https:'].includes(url.protocol)\n        ) {\n          fetch(src, 'blob')\n            .then((blob) => {\n              track.setAttribute('src', window.URL.createObjectURL(blob));\n            })\n            .catch(() => {\n              removeElement(track);\n            });\n        }\n      });\n    }\n\n    // Get and set initial data\n    // The \"preferred\" options are not realized unless / until the wanted language has a match\n    // * languages: Array of user's browser languages.\n    // * language:  The language preferred by user settings or config\n    // * active:    The state preferred by user settings or config\n    // * toggled:   The real captions state\n\n    const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n    const languages = dedupe(browserLanguages.map((language) => language.split('-')[0]));\n    let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n    // Use first browser language when language is 'auto'\n    if (language === 'auto') {\n      [language] = languages;\n    }\n\n    let active = this.storage.get('captions');\n    if (!is.boolean(active)) {\n      ({ active } = this.config.captions);\n    }\n\n    Object.assign(this.captions, {\n      toggled: false,\n      active,\n      language,\n      languages,\n    });\n\n    // Watch changes to textTracks and update captions menu\n    if (this.isHTML5) {\n      const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n      on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n    }\n\n    // Update available languages in list next tick (the event must not be triggered before the listeners)\n    setTimeout(captions.update.bind(this), 0);\n  },\n\n  // Update available language options in settings based on tracks\n  update() {\n    const tracks = captions.getTracks.call(this, true);\n    // Get the wanted language\n    const { active, language, meta, currentTrackNode } = this.captions;\n    const languageExists = Boolean(tracks.find((track) => track.language === language));\n\n    // Handle tracks (add event listener and \"pseudo\"-default)\n    if (this.isHTML5 && this.isVideo) {\n      tracks\n        .filter((track) => !meta.get(track))\n        .forEach((track) => {\n          this.debug.log('Track added', track);\n\n          // Attempt to store if the original dom element was \"default\"\n          meta.set(track, {\n            default: track.mode === 'showing',\n          });\n\n          // Turn off native caption rendering to avoid double captions\n          // Note: mode='hidden' forces a track to download. To ensure every track\n          // isn't downloaded at once, only 'showing' tracks should be reassigned\n          // eslint-disable-next-line no-param-reassign\n          if (track.mode === 'showing') {\n            // eslint-disable-next-line no-param-reassign\n            track.mode = 'hidden';\n          }\n\n          // Add event listener for cue changes\n          on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n        });\n    }\n\n    // Update language first time it matches, or if the previous matching track was removed\n    if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n      captions.setLanguage.call(this, language);\n      captions.toggle.call(this, active && languageExists);\n    }\n\n    // Enable or disable captions based on track length\n    if (this.elements) {\n      toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n    }\n\n    // Update available languages in list\n    if (\n      is.array(this.config.controls) &&\n      this.config.controls.includes('settings') &&\n      this.config.settings.includes('captions')\n    ) {\n      controls.setCaptionsMenu.call(this);\n    }\n  },\n\n  // Toggle captions display\n  // Used internally for the toggleCaptions method, with the passive option forced to false\n  toggle(input, passive = true) {\n    // If there's no full support\n    if (!this.supported.ui) {\n      return;\n    }\n\n    const { toggled } = this.captions; // Current state\n    const activeClass = this.config.classNames.captions.active;\n    // Get the next state\n    // If the method is called without parameter, toggle based on current value\n    const active = is.nullOrUndefined(input) ? !toggled : input;\n\n    // Update state and trigger event\n    if (active !== toggled) {\n      // When passive, don't override user preferences\n      if (!passive) {\n        this.captions.active = active;\n        this.storage.set({ captions: active });\n      }\n\n      // Force language if the call isn't passive and there is no matching language to toggle to\n      if (!this.language && active && !passive) {\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n        // Override user preferences to avoid switching languages if a matching track is added\n        this.captions.language = track.language;\n\n        // Set caption, but don't store in localStorage as user preference\n        captions.set.call(this, tracks.indexOf(track));\n        return;\n      }\n\n      // Toggle button if it's enabled\n      if (this.elements.buttons.captions) {\n        this.elements.buttons.captions.pressed = active;\n      }\n\n      // Add class hook\n      toggleClass(this.elements.container, activeClass, active);\n\n      this.captions.toggled = active;\n\n      // Update settings menu\n      controls.updateSetting.call(this, 'captions');\n\n      // Trigger event (not used internally)\n      triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n    }\n\n    // Wait for the call stack to clear before setting mode='hidden'\n    // on the active track - forcing the browser to download it\n    setTimeout(() => {\n      if (active && this.captions.toggled) {\n        this.captions.currentTrackNode.mode = 'hidden';\n      }\n    });\n  },\n\n  // Set captions by track index\n  // Used internally for the currentTrack setter with the passive option forced to false\n  set(index, passive = true) {\n    const tracks = captions.getTracks.call(this);\n\n    // Disable captions if setting to -1\n    if (index === -1) {\n      captions.toggle.call(this, false, passive);\n      return;\n    }\n\n    if (!is.number(index)) {\n      this.debug.warn('Invalid caption argument', index);\n      return;\n    }\n\n    if (!(index in tracks)) {\n      this.debug.warn('Track not found', index);\n      return;\n    }\n\n    if (this.captions.currentTrack !== index) {\n      this.captions.currentTrack = index;\n      const track = tracks[index];\n      const { language } = track || {};\n\n      // Store reference to node for invalidation on remove\n      this.captions.currentTrackNode = track;\n\n      // Update settings menu\n      controls.updateSetting.call(this, 'captions');\n\n      // When passive, don't override user preferences\n      if (!passive) {\n        this.captions.language = language;\n        this.storage.set({ language });\n      }\n\n      // Handle Vimeo captions\n      if (this.isVimeo) {\n        this.embed.enableTextTrack(language);\n      }\n\n      // Trigger event\n      triggerEvent.call(this, this.media, 'languagechange');\n    }\n\n    // Show captions\n    captions.toggle.call(this, true, passive);\n\n    if (this.isHTML5 && this.isVideo) {\n      // If we change the active track while a cue is already displayed we need to update it\n      captions.updateCues.call(this);\n    }\n  },\n\n  // Set captions by language\n  // Used internally for the language setter with the passive option forced to false\n  setLanguage(input, passive = true) {\n    if (!is.string(input)) {\n      this.debug.warn('Invalid language argument', input);\n      return;\n    }\n    // Normalize\n    const language = input.toLowerCase();\n    this.captions.language = language;\n\n    // Set currentTrack\n    const tracks = captions.getTracks.call(this);\n    const track = captions.findTrack.call(this, [language]);\n    captions.set.call(this, tracks.indexOf(track), passive);\n  },\n\n  // Get current valid caption tracks\n  // If update is false it will also ignore tracks without metadata\n  // This is used to \"freeze\" the language options when captions.update is false\n  getTracks(update = false) {\n    // Handle media or textTracks missing or null\n    const tracks = Array.from((this.media || {}).textTracks || []);\n    // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n    // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n    return tracks\n      .filter((track) => !this.isHTML5 || update || this.captions.meta.has(track))\n      .filter((track) => ['captions', 'subtitles'].includes(track.kind));\n  },\n\n  // Match tracks based on languages and get the first\n  findTrack(languages, force = false) {\n    const tracks = captions.getTracks.call(this);\n    const sortIsDefault = (track) => Number((this.captions.meta.get(track) || {}).default);\n    const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n    let track;\n\n    languages.every((language) => {\n      track = sorted.find((t) => t.language === language);\n      return !track; // Break iteration if there is a match\n    });\n\n    // If no match is found but is required, get first\n    return track || (force ? sorted[0] : undefined);\n  },\n\n  // Get the current track\n  getCurrentTrack() {\n    return captions.getTracks.call(this)[this.currentTrack];\n  },\n\n  // Get UI label for track\n  getLabel(track) {\n    let currentTrack = track;\n\n    if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n      currentTrack = captions.getCurrentTrack.call(this);\n    }\n\n    if (is.track(currentTrack)) {\n      if (!is.empty(currentTrack.label)) {\n        return currentTrack.label;\n      }\n\n      if (!is.empty(currentTrack.language)) {\n        return track.language.toUpperCase();\n      }\n\n      return i18n.get('enabled', this.config);\n    }\n\n    return i18n.get('disabled', this.config);\n  },\n\n  // Update captions using current track's active cues\n  // Also optional array argument in case there isn't any track (ex: vimeo)\n  updateCues(input) {\n    // Requires UI\n    if (!this.supported.ui) {\n      return;\n    }\n\n    if (!is.element(this.elements.captions)) {\n      this.debug.warn('No captions element to render to');\n      return;\n    }\n\n    // Only accept array or empty input\n    if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n      this.debug.warn('updateCues: Invalid input', input);\n      return;\n    }\n\n    let cues = input;\n\n    // Get cues from track\n    if (!cues) {\n      const track = captions.getCurrentTrack.call(this);\n\n      cues = Array.from((track || {}).activeCues || [])\n        .map((cue) => cue.getCueAsHTML())\n        .map(getHTML);\n    }\n\n    // Set new caption text\n    const content = cues.map((cueText) => cueText.trim()).join('\\n');\n    const changed = content !== this.elements.captions.innerHTML;\n\n    if (changed) {\n      // Empty the container and create a new child element\n      emptyElement(this.elements.captions);\n      const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n      caption.innerHTML = content;\n      this.elements.captions.appendChild(caption);\n\n      // Trigger event\n      triggerEvent.call(this, this.media, 'cuechange');\n    }\n  },\n};\n\nexport default captions;\n", "// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n  // Disable\n  enabled: true,\n\n  // Custom media title\n  title: '',\n\n  // Logging to console\n  debug: false,\n\n  // Auto play (if supported)\n  autoplay: false,\n\n  // Only allow one media playing at once (vimeo only)\n  autopause: true,\n\n  // Allow inline playback on iOS\n  playsinline: true,\n\n  // Default time to skip when rewind/fast forward\n  seekTime: 10,\n\n  // Default volume\n  volume: 1,\n  muted: false,\n\n  // Pass a custom duration\n  duration: null,\n\n  // Display the media duration on load in the current time position\n  // If you have opted to display both duration and currentTime, this is ignored\n  displayDuration: true,\n\n  // Invert the current time to be a countdown\n  invertTime: true,\n\n  // Clicking the currentTime inverts it's value to show time left rather than elapsed\n  toggleInvert: true,\n\n  // Force an aspect ratio\n  // The format must be `'w:h'` (e.g. `'16:9'`)\n  ratio: null,\n\n  // Click video container to play/pause\n  clickToPlay: true,\n\n  // Auto hide the controls\n  hideControls: true,\n\n  // Reset to start when playback ended\n  resetOnEnd: false,\n\n  // Disable the standard context menu\n  disableContextMenu: true,\n\n  // Sprite (for icons)\n  loadSprite: true,\n  iconPrefix: 'plyr',\n  iconUrl: 'https://cdn.plyr.io/3.7.8/plyr.svg',\n\n  // Blank video (used to prevent errors on source change)\n  blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n  // Quality default\n  quality: {\n    default: 576,\n    // The options to display in the UI, if available for the source media\n    options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n    forced: false,\n    onChange: null,\n  },\n\n  // Set loops\n  loop: {\n    active: false,\n    // start: null,\n    // end: null,\n  },\n\n  // Speed default and options to display\n  speed: {\n    selected: 1,\n    // The options to display in the UI, if available for the source media (e.g. Vimeo and YouTube only support 0.5x-4x)\n    options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 4],\n  },\n\n  // Keyboard shortcut settings\n  keyboard: {\n    focused: true,\n    global: false,\n  },\n\n  // Display tooltips\n  tooltips: {\n    controls: false,\n    seek: true,\n  },\n\n  // Captions settings\n  captions: {\n    active: false,\n    language: 'auto',\n    // Listen to new tracks added after Plyr is initialized.\n    // This is needed for streaming captions, but may result in unselectable options\n    update: false,\n  },\n\n  // Fullscreen settings\n  fullscreen: {\n    enabled: true, // Allow fullscreen?\n    fallback: true, // Fallback using full viewport/window\n    iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    // Selector for the fullscreen container so contextual / non-player content can remain visible in fullscreen mode\n    // Non-ancestors of the player element will be ignored\n    // container: null, // defaults to the player element\n  },\n\n  // Local storage\n  storage: {\n    enabled: true,\n    key: 'plyr',\n  },\n\n  // Default controls\n  controls: [\n    'play-large',\n    // 'restart',\n    // 'rewind',\n    'play',\n    // 'fast-forward',\n    'progress',\n    'current-time',\n    // 'duration',\n    'mute',\n    'volume',\n    'captions',\n    'settings',\n    'pip',\n    'airplay',\n    // 'download',\n    'fullscreen',\n  ],\n  settings: ['captions', 'quality', 'speed'],\n\n  // Localisation\n  i18n: {\n    restart: 'Restart',\n    rewind: 'Rewind {seektime}s',\n    play: 'Play',\n    pause: 'Pause',\n    fastForward: 'Forward {seektime}s',\n    seek: 'Seek',\n    seekLabel: '{currentTime} of {duration}',\n    played: 'Played',\n    buffered: 'Buffered',\n    currentTime: 'Current time',\n    duration: 'Duration',\n    volume: 'Volume',\n    mute: 'Mute',\n    unmute: 'Unmute',\n    enableCaptions: 'Enable captions',\n    disableCaptions: 'Disable captions',\n    download: 'Download',\n    enterFullscreen: 'Enter fullscreen',\n    exitFullscreen: 'Exit fullscreen',\n    frameTitle: 'Player for {title}',\n    captions: 'Captions',\n    settings: 'Settings',\n    pip: 'PIP',\n    menuBack: 'Go back to previous menu',\n    speed: 'Speed',\n    normal: 'Normal',\n    quality: 'Quality',\n    loop: 'Loop',\n    start: 'Start',\n    end: 'End',\n    all: 'All',\n    reset: 'Reset',\n    disabled: 'Disabled',\n    enabled: 'Enabled',\n    advertisement: 'Ad',\n    qualityBadge: {\n      2160: '4K',\n      1440: 'HD',\n      1080: 'HD',\n      720: 'HD',\n      576: 'SD',\n      480: 'SD',\n    },\n  },\n\n  // URLs\n  urls: {\n    download: null,\n    vimeo: {\n      sdk: 'https://player.vimeo.com/api/player.js',\n      iframe: 'https://player.vimeo.com/video/{0}?{1}',\n      api: 'https://vimeo.com/api/oembed.json?url={0}',\n    },\n    youtube: {\n      sdk: 'https://www.youtube.com/iframe_api',\n      api: 'https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}',\n    },\n    googleIMA: {\n      sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n    },\n  },\n\n  // Custom control listeners\n  listeners: {\n    seek: null,\n    play: null,\n    pause: null,\n    restart: null,\n    rewind: null,\n    fastForward: null,\n    mute: null,\n    volume: null,\n    captions: null,\n    download: null,\n    fullscreen: null,\n    pip: null,\n    airplay: null,\n    speed: null,\n    quality: null,\n    loop: null,\n    language: null,\n  },\n\n  // Events to watch and bubble\n  events: [\n    // Events to watch on HTML5 media elements and bubble\n    // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n    'ended',\n    'progress',\n    'stalled',\n    'playing',\n    'waiting',\n    'canplay',\n    'canplaythrough',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'timeupdate',\n    'volumechange',\n    'play',\n    'pause',\n    'error',\n    'seeking',\n    'seeked',\n    'emptied',\n    'ratechange',\n    'cuechange',\n\n    // Custom events\n    'download',\n    'enterfullscreen',\n    'exitfullscreen',\n    'captionsenabled',\n    'captionsdisabled',\n    'languagechange',\n    'controlshidden',\n    'controlsshown',\n    'ready',\n\n    // YouTube\n    'statechange',\n\n    // Quality\n    'qualitychange',\n\n    // Ads\n    'adsloaded',\n    'adscontentpause',\n    'adscontentresume',\n    'adstarted',\n    'adsmidpoint',\n    'adscomplete',\n    'adsallcomplete',\n    'adsimpression',\n    'adsclick',\n  ],\n\n  // Selectors\n  // Change these to match your template if using custom HTML\n  selectors: {\n    editable: 'input, textarea, select, [contenteditable]',\n    container: '.plyr',\n    controls: {\n      container: null,\n      wrapper: '.plyr__controls',\n    },\n    labels: '[data-plyr]',\n    buttons: {\n      play: '[data-plyr=\"play\"]',\n      pause: '[data-plyr=\"pause\"]',\n      restart: '[data-plyr=\"restart\"]',\n      rewind: '[data-plyr=\"rewind\"]',\n      fastForward: '[data-plyr=\"fast-forward\"]',\n      mute: '[data-plyr=\"mute\"]',\n      captions: '[data-plyr=\"captions\"]',\n      download: '[data-plyr=\"download\"]',\n      fullscreen: '[data-plyr=\"fullscreen\"]',\n      pip: '[data-plyr=\"pip\"]',\n      airplay: '[data-plyr=\"airplay\"]',\n      settings: '[data-plyr=\"settings\"]',\n      loop: '[data-plyr=\"loop\"]',\n    },\n    inputs: {\n      seek: '[data-plyr=\"seek\"]',\n      volume: '[data-plyr=\"volume\"]',\n      speed: '[data-plyr=\"speed\"]',\n      language: '[data-plyr=\"language\"]',\n      quality: '[data-plyr=\"quality\"]',\n    },\n    display: {\n      currentTime: '.plyr__time--current',\n      duration: '.plyr__time--duration',\n      buffer: '.plyr__progress__buffer',\n      loop: '.plyr__progress__loop', // Used later\n      volume: '.plyr__volume--display',\n    },\n    progress: '.plyr__progress',\n    captions: '.plyr__captions',\n    caption: '.plyr__caption',\n  },\n\n  // Class hooks added to the player in different states\n  classNames: {\n    type: 'plyr--{0}',\n    provider: 'plyr--{0}',\n    video: 'plyr__video-wrapper',\n    embed: 'plyr__video-embed',\n    videoFixedRatio: 'plyr__video-wrapper--fixed-ratio',\n    embedContainer: 'plyr__video-embed__container',\n    poster: 'plyr__poster',\n    posterEnabled: 'plyr__poster-enabled',\n    ads: 'plyr__ads',\n    control: 'plyr__control',\n    controlPressed: 'plyr__control--pressed',\n    playing: 'plyr--playing',\n    paused: 'plyr--paused',\n    stopped: 'plyr--stopped',\n    loading: 'plyr--loading',\n    hover: 'plyr--hover',\n    tooltip: 'plyr__tooltip',\n    cues: 'plyr__cues',\n    marker: 'plyr__progress__marker',\n    hidden: 'plyr__sr-only',\n    hideControls: 'plyr--hide-controls',\n    isTouch: 'plyr--is-touch',\n    uiSupported: 'plyr--full-ui',\n    noTransition: 'plyr--no-transition',\n    display: {\n      time: 'plyr__time',\n    },\n    menu: {\n      value: 'plyr__menu__value',\n      badge: 'plyr__badge',\n      open: 'plyr--menu-open',\n    },\n    captions: {\n      enabled: 'plyr--captions-enabled',\n      active: 'plyr--captions-active',\n    },\n    fullscreen: {\n      enabled: 'plyr--fullscreen-enabled',\n      fallback: 'plyr--fullscreen-fallback',\n    },\n    pip: {\n      supported: 'plyr--pip-supported',\n      active: 'plyr--pip-active',\n    },\n    airplay: {\n      supported: 'plyr--airplay-supported',\n      active: 'plyr--airplay-active',\n    },\n    previewThumbnails: {\n      // Tooltip thumbs\n      thumbContainer: 'plyr__preview-thumb',\n      thumbContainerShown: 'plyr__preview-thumb--is-shown',\n      imageContainer: 'plyr__preview-thumb__image-container',\n      timeContainer: 'plyr__preview-thumb__time-container',\n      // Scrubbing\n      scrubbingContainer: 'plyr__preview-scrubbing',\n      scrubbingContainerShown: 'plyr__preview-scrubbing--is-shown',\n    },\n  },\n\n  // Embed attributes\n  attributes: {\n    embed: {\n      provider: 'data-plyr-provider',\n      id: 'data-plyr-embed-id',\n      hash: 'data-plyr-embed-hash',\n    },\n  },\n\n  // Advertisements plugin\n  // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n  ads: {\n    enabled: false,\n    publisherId: '',\n    tagUrl: '',\n  },\n\n  // Preview Thumbnails plugin\n  previewThumbnails: {\n    enabled: false,\n    src: '',\n  },\n\n  // Vimeo plugin\n  vimeo: {\n    byline: false,\n    portrait: false,\n    title: false,\n    speed: true,\n    transparent: false,\n    // Custom settings from Plyr\n    customControls: true,\n    referrerPolicy: null, // https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy\n    // Whether the owner of the video has a Pro or Business account\n    // (which allows us to properly hide controls without CSS hacks, etc)\n    premium: false,\n  },\n\n  // YouTube plugin\n  youtube: {\n    rel: 0, // No related vids\n    showinfo: 0, // Hide info\n    iv_load_policy: 3, // Hide annotations\n    modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n    // Custom settings from Plyr\n    customControls: true,\n    noCookie: false, // Whether to use an alternative version of YouTube without cookies\n  },\n\n  // Media Metadata\n  mediaMetadata: {\n    title: '',\n    artist: '',\n    album: '',\n    artwork: [],\n  },\n\n  // Markers\n  markers: {\n    enabled: false,\n    points: [],\n  },\n};\n\nexport default defaults;\n", "// ==========================================================================\n// Plyr states\n// ==========================================================================\n\nexport const pip = {\n  active: 'picture-in-picture',\n  inactive: 'inline',\n};\n\nexport default { pip };\n", "// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n  html5: 'html5',\n  youtube: 'youtube',\n  vimeo: 'vimeo',\n};\n\nexport const types = {\n  audio: 'audio',\n  video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {String} url\n */\nexport function getProviderByUrl(url) {\n  // YouTube\n  if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtube-nocookie\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n    return providers.youtube;\n  }\n\n  // Vimeo\n  if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n    return providers.vimeo;\n  }\n\n  return null;\n}\n\nexport default { providers, types };\n", "// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n  constructor(enabled = false) {\n    this.enabled = window.console && enabled;\n\n    if (this.enabled) {\n      this.log('Debugging enabled');\n    }\n  }\n\n  get log() {\n    // eslint-disable-next-line no-console\n    return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n  }\n\n  get warn() {\n    // eslint-disable-next-line no-console\n    return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n  }\n\n  get error() {\n    // eslint-disable-next-line no-console\n    return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n  }\n}\n", "// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// https://webkit.org/blog/7929/designing-websites-for-iphone-x/\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { closest, getElements, hasClass, toggleClass } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport { silencePromise } from './utils/promise';\n\nclass Fullscreen {\n  constructor(player) {\n    // Keep reference to parent\n    this.player = player;\n\n    // Get prefix\n    this.prefix = Fullscreen.prefix;\n    this.property = Fullscreen.property;\n\n    // Scroll position\n    this.scrollPosition = { x: 0, y: 0 };\n\n    // Force the use of 'full window/browser' rather than fullscreen\n    this.forceFallback = player.config.fullscreen.fallback === 'force';\n\n    // Get the fullscreen element\n    // Checks container is an ancestor, defaults to null\n    this.player.elements.fullscreen =\n      player.config.fullscreen.container && closest(this.player.elements.container, player.config.fullscreen.container);\n\n    // Register event listeners\n    // Handle event (incase user presses escape etc)\n    on.call(\n      this.player,\n      document,\n      this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n      () => {\n        // TODO: Filter for target??\n        this.onChange();\n      },\n    );\n\n    // Fullscreen toggle on double click\n    on.call(this.player, this.player.elements.container, 'dblclick', (event) => {\n      // Ignore double click in controls\n      if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n        return;\n      }\n\n      this.player.listeners.proxy(event, this.toggle, 'fullscreen');\n    });\n\n    // Tap focus when in fullscreen\n    on.call(this, this.player.elements.container, 'keydown', (event) => this.trapFocus(event));\n\n    // Update the UI\n    this.update();\n  }\n\n  // Determine if native supported\n  static get nativeSupported() {\n    return !!(\n      document.fullscreenEnabled ||\n      document.webkitFullscreenEnabled ||\n      document.mozFullScreenEnabled ||\n      document.msFullscreenEnabled\n    );\n  }\n\n  // If we're actually using native\n  get useNative() {\n    return Fullscreen.nativeSupported && !this.forceFallback;\n  }\n\n  // Get the prefix for handlers\n  static get prefix() {\n    // No prefix\n    if (is.function(document.exitFullscreen)) return '';\n\n    // Check for fullscreen support by vendor prefix\n    let value = '';\n    const prefixes = ['webkit', 'moz', 'ms'];\n\n    prefixes.some((pre) => {\n      if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n        value = pre;\n        return true;\n      }\n\n      return false;\n    });\n\n    return value;\n  }\n\n  static get property() {\n    return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n  }\n\n  // Determine if fullscreen is supported\n  get supported() {\n    return [\n      // Fullscreen is enabled in config\n      this.player.config.fullscreen.enabled,\n      // Must be a video\n      this.player.isVideo,\n      // Either native is supported or fallback enabled\n      Fullscreen.nativeSupported || this.player.config.fullscreen.fallback,\n      // YouTube has no way to trigger fullscreen, so on devices with no native support, playsinline\n      // must be enabled and iosNative fullscreen must be disabled to offer the fullscreen fallback\n      !this.player.isYouTube ||\n        Fullscreen.nativeSupported ||\n        !browser.isIos ||\n        (this.player.config.playsinline && !this.player.config.fullscreen.iosNative),\n    ].every(Boolean);\n  }\n\n  // Get active state\n  get active() {\n    if (!this.supported) return false;\n\n    // Fallback using classname\n    if (!Fullscreen.nativeSupported || this.forceFallback) {\n      return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n    }\n\n    const element = !this.prefix\n      ? this.target.getRootNode().fullscreenElement\n      : this.target.getRootNode()[`${this.prefix}${this.property}Element`];\n\n    return element && element.shadowRoot ? element === this.target.getRootNode().host : element === this.target;\n  }\n\n  // Get target element\n  get target() {\n    return browser.isIos && this.player.config.fullscreen.iosNative\n      ? this.player.media\n      : this.player.elements.fullscreen ?? this.player.elements.container;\n  }\n\n  onChange = () => {\n    if (!this.supported) return;\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n      button.pressed = this.active;\n    }\n\n    // Always trigger events on the plyr / media element (not a fullscreen container) and let them bubble up\n    const target = this.target === this.player.media ? this.target : this.player.elements.container;\n    // Trigger an event\n    triggerEvent.call(this.player, target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n  };\n\n  toggleFallback = (toggle = false) => {\n    // Store or restore scroll position\n    if (toggle) {\n      this.scrollPosition = {\n        x: window.scrollX ?? 0,\n        y: window.scrollY ?? 0,\n      };\n    } else {\n      window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Force full viewport on iPhone X+\n    if (browser.isIos) {\n      let viewport = document.head.querySelector('meta[name=\"viewport\"]');\n      const property = 'viewport-fit=cover';\n\n      // Inject the viewport meta if required\n      if (!viewport) {\n        viewport = document.createElement('meta');\n        viewport.setAttribute('name', 'viewport');\n      }\n\n      // Check if the property already exists\n      const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\n\n      if (toggle) {\n        this.cleanupViewport = !hasProperty;\n        if (!hasProperty) viewport.content += `,${property}`;\n      } else if (this.cleanupViewport) {\n        viewport.content = viewport.content\n          .split(',')\n          .filter((part) => part.trim() !== property)\n          .join(',');\n      }\n    }\n\n    // Toggle button and fire events\n    this.onChange();\n  };\n\n  // Trap focus inside container\n  trapFocus = (event) => {\n    // Bail if iOS/iPadOS, not active, not the tab key\n    if (browser.isIos || browser.isIPadOS || !this.active || event.key !== 'Tab') return;\n\n    // Get the current focused element\n    const focused = document.activeElement;\n    const focusable = getElements.call(this.player, 'a[href], button:not(:disabled), input:not(:disabled), [tabindex]');\n    const [first] = focusable;\n    const last = focusable[focusable.length - 1];\n\n    if (focused === last && !event.shiftKey) {\n      // Move focus to first element that can be tabbed if Shift isn't used\n      first.focus();\n      event.preventDefault();\n    } else if (focused === first && event.shiftKey) {\n      // Move focus to last element that can be tabbed if Shift is used\n      last.focus();\n      event.preventDefault();\n    }\n  };\n\n  // Update UI\n  update = () => {\n    if (this.supported) {\n      let mode;\n\n      if (this.forceFallback) mode = 'Fallback (forced)';\n      else if (Fullscreen.nativeSupported) mode = 'Native';\n      else mode = 'Fallback';\n\n      this.player.debug.log(`${mode} fullscreen enabled`);\n    } else {\n      this.player.debug.log('Fullscreen not supported and fallback disabled');\n    }\n\n    // Add styling hook to show button\n    toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.supported);\n  };\n\n  // Make an element fullscreen\n  enter = () => {\n    if (!this.supported) return;\n\n    // iOS native fullscreen doesn't need the request step\n    if (browser.isIos && this.player.config.fullscreen.iosNative) {\n      if (this.player.isVimeo) {\n        this.player.embed.requestFullscreen();\n      } else {\n        this.target.webkitEnterFullscreen();\n      }\n    } else if (!Fullscreen.nativeSupported || this.forceFallback) {\n      this.toggleFallback(true);\n    } else if (!this.prefix) {\n      this.target.requestFullscreen({ navigationUI: 'hide' });\n    } else if (!is.empty(this.prefix)) {\n      this.target[`${this.prefix}Request${this.property}`]();\n    }\n  };\n\n  // Bail from fullscreen\n  exit = () => {\n    if (!this.supported) return;\n\n    // iOS native fullscreen\n    if (browser.isIos && this.player.config.fullscreen.iosNative) {\n      if (this.player.isVimeo) {\n        this.player.embed.exitFullscreen();\n      } else {\n        this.target.webkitEnterFullscreen();\n      }\n      silencePromise(this.player.play());\n    } else if (!Fullscreen.nativeSupported || this.forceFallback) {\n      this.toggleFallback(false);\n    } else if (!this.prefix) {\n      (document.cancelFullScreen || document.exitFullscreen).call(document);\n    } else if (!is.empty(this.prefix)) {\n      const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n      document[`${this.prefix}${action}${this.property}`]();\n    }\n  };\n\n  // Toggle state\n  toggle = () => {\n    if (!this.active) this.enter();\n    else this.exit();\n  };\n}\n\nexport default Fullscreen;\n", "// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n\n    const handler = () => {\n      delete image.onload;\n      delete image.onerror;\n      (image.naturalWidth >= minWidth ? resolve : reject)(image);\n    };\n\n    Object.assign(image, { onload: handler, onerror: handler, src });\n  });\n}\n", "// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport support from './support';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadImage from './utils/load-image';\n\nconst ui = {\n  addStyleHook() {\n    toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n    toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n  },\n\n  // Toggle native HTML5 media controls\n  toggleNativeControls(toggle = false) {\n    if (toggle && this.isHTML5) {\n      this.media.setAttribute('controls', '');\n    } else {\n      this.media.removeAttribute('controls');\n    }\n  },\n\n  // Setup the UI\n  build() {\n    // Re-attach media element listeners\n    // TODO: Use event bubbling?\n    this.listeners.media();\n\n    // Don't setup interface if no support\n    if (!this.supported.ui) {\n      this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n      // Restore native controls\n      ui.toggleNativeControls.call(this, true);\n\n      // Bail\n      return;\n    }\n\n    // Inject custom controls if not present\n    if (!is.element(this.elements.controls)) {\n      // Inject custom controls\n      controls.inject.call(this);\n\n      // Re-attach control listeners\n      this.listeners.controls();\n    }\n\n    // Remove native controls\n    ui.toggleNativeControls.call(this);\n\n    // Setup captions for HTML5\n    if (this.isHTML5) {\n      captions.setup.call(this);\n    }\n\n    // Reset volume\n    this.volume = null;\n\n    // Reset mute state\n    this.muted = null;\n\n    // Reset loop state\n    this.loop = null;\n\n    // Reset quality setting\n    this.quality = null;\n\n    // Reset speed\n    this.speed = null;\n\n    // Reset volume display\n    controls.updateVolume.call(this);\n\n    // Reset time display\n    controls.timeUpdate.call(this);\n\n    // Reset duration display\n    controls.durationUpdate.call(this);\n\n    // Update the UI\n    ui.checkPlaying.call(this);\n\n    // Check for picture-in-picture support\n    toggleClass(\n      this.elements.container,\n      this.config.classNames.pip.supported,\n      support.pip && this.isHTML5 && this.isVideo,\n    );\n\n    // Check for airplay support\n    toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n    // Add touch class\n    toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n    // Ready for API calls\n    this.ready = true;\n\n    // Ready event at end of execution stack\n    setTimeout(() => {\n      triggerEvent.call(this, this.media, 'ready');\n    }, 0);\n\n    // Set the title\n    ui.setTitle.call(this);\n\n    // Assure the poster image is set, if the property was added before the element was created\n    if (this.poster) {\n      ui.setPoster.call(this, this.poster, false).catch(() => {});\n    }\n\n    // Manually set the duration if user has overridden it.\n    // The event listeners for it doesn't get called if preload is disabled (#701)\n    if (this.config.duration) {\n      controls.durationUpdate.call(this);\n    }\n\n    // Media metadata\n    if (this.config.mediaMetadata) {\n      controls.setMediaMetadata.call(this);\n    }\n  },\n\n  // Setup aria attribute for play and iframe title\n  setTitle() {\n    // Find the current text\n    let label = i18n.get('play', this.config);\n\n    // If there's a media title set, use that for the label\n    if (is.string(this.config.title) && !is.empty(this.config.title)) {\n      label += `, ${this.config.title}`;\n    }\n\n    // If there's a play button, set label\n    Array.from(this.elements.buttons.play || []).forEach((button) => {\n      button.setAttribute('aria-label', label);\n    });\n\n    // Set iframe title\n    // https://github.com/sampotts/plyr/issues/124\n    if (this.isEmbed) {\n      const iframe = getElement.call(this, 'iframe');\n\n      if (!is.element(iframe)) {\n        return;\n      }\n\n      // Default to media type\n      const title = !is.empty(this.config.title) ? this.config.title : 'video';\n      const format = i18n.get('frameTitle', this.config);\n\n      iframe.setAttribute('title', format.replace('{title}', title));\n    }\n  },\n\n  // Toggle poster\n  togglePoster(enable) {\n    toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n  },\n\n  // Set the poster image (async)\n  // Used internally for the poster setter, with the passive option forced to false\n  setPoster(poster, passive = true) {\n    // Don't override if call is passive\n    if (passive && this.poster) {\n      return Promise.reject(new Error('Poster already set'));\n    }\n\n    // Set property synchronously to respect the call order\n    this.media.setAttribute('data-poster', poster);\n\n    // Show the poster\n    this.elements.poster.removeAttribute('hidden');\n\n    // Wait until ui is ready\n    return (\n      ready\n        .call(this)\n        // Load image\n        .then(() => loadImage(poster))\n        .catch((error) => {\n          // Hide poster on error unless it's been set by another call\n          if (poster === this.poster) {\n            ui.togglePoster.call(this, false);\n          }\n          // Rethrow\n          throw error;\n        })\n        .then(() => {\n          // Prevent race conditions\n          if (poster !== this.poster) {\n            throw new Error('setPoster cancelled by later call to setPoster');\n          }\n        })\n        .then(() => {\n          Object.assign(this.elements.poster.style, {\n            backgroundImage: `url('${poster}')`,\n            // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n            backgroundSize: '',\n          });\n\n          ui.togglePoster.call(this, true);\n\n          return poster;\n        })\n    );\n  },\n\n  // Check playing state\n  checkPlaying(event) {\n    // Class hooks\n    toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n    toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n    toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n    // Set state\n    Array.from(this.elements.buttons.play || []).forEach((target) => {\n      Object.assign(target, { pressed: this.playing });\n      target.setAttribute('aria-label', i18n.get(this.playing ? 'pause' : 'play', this.config));\n    });\n\n    // Only update controls on non timeupdate events\n    if (is.event(event) && event.type === 'timeupdate') {\n      return;\n    }\n\n    // Toggle controls\n    ui.toggleControls.call(this);\n  },\n\n  // Check if media is loading\n  checkLoading(event) {\n    this.loading = ['stalled', 'waiting'].includes(event.type);\n\n    // Clear timer\n    clearTimeout(this.timers.loading);\n\n    // Timer to prevent flicker when seeking\n    this.timers.loading = setTimeout(\n      () => {\n        // Update progress bar loading class state\n        toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n        // Update controls visibility\n        ui.toggleControls.call(this);\n      },\n      this.loading ? 250 : 0,\n    );\n  },\n\n  // Toggle controls based on state and `force` argument\n  toggleControls(force) {\n    const { controls: controlsElement } = this.elements;\n\n    if (controlsElement && this.config.hideControls) {\n      // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n      const recentTouchSeek = this.touch && this.lastSeekTime + 2000 > Date.now();\n\n      // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n      this.toggleControls(\n        Boolean(\n          force || this.loading || this.paused || controlsElement.pressed || controlsElement.hover || recentTouchSeek,\n        ),\n      );\n    }\n  },\n\n  // Migrate any custom properties from the media to the parent\n  migrateStyles() {\n    // Loop through values (as they are the keys when the object is spread 🤔)\n    Object.values({ ...this.media.style })\n      // We're only fussed about Plyr specific properties\n      .filter((key) => !is.empty(key) && is.string(key) && key.startsWith('--plyr'))\n      .forEach((key) => {\n        // Set on the container\n        this.elements.container.style.setProperty(key, this.media.style.getPropertyValue(key));\n\n        // Clean up from media element\n        this.media.style.removeProperty(key);\n      });\n\n    // Remove attribute if empty\n    if (is.empty(this.media.style)) {\n      this.media.removeAttribute('style');\n    }\n  },\n};\n\nexport default ui;\n", "// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { getElement, getElements, matches, toggleClass } from './utils/elements';\nimport { off, on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport { silencePromise } from './utils/promise';\nimport { getAspectRatio, getViewportSize, supportsCSS } from './utils/style';\n\nclass Listeners {\n  constructor(player) {\n    this.player = player;\n    this.lastKey = null;\n    this.focusTimer = null;\n    this.lastKeyDown = null;\n\n    this.handleKey = this.handleKey.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.firstTouch = this.firstTouch.bind(this);\n  }\n\n  // Handle key presses\n  handleKey(event) {\n    const { player } = this;\n    const { elements } = player;\n    const { key, type, altKey, ctrlKey, metaKey, shiftKey } = event;\n    const pressed = type === 'keydown';\n    const repeat = pressed && key === this.lastKey;\n\n    // Bail if a modifier key is set\n    if (altKey || ctrlKey || metaKey || shiftKey) {\n      return;\n    }\n\n    // If the event is bubbled from the media element\n    // Firefox doesn't get the key for whatever reason\n    if (!key) {\n      return;\n    }\n\n    // Seek by increment\n    const seekByIncrement = (increment) => {\n      // Divide the max duration into 10th's and times by the number value\n      player.currentTime = (player.duration / 10) * increment;\n    };\n\n    // Handle the key on keydown\n    // Reset on keyup\n    if (pressed) {\n      // Check focused element\n      // and if the focused element is not editable (e.g. text input)\n      // and any that accept key input http://webaim.org/techniques/keyboard/\n      const focused = document.activeElement;\n      if (is.element(focused)) {\n        const { editable } = player.config.selectors;\n        const { seek } = elements.inputs;\n\n        if (focused !== seek && matches(focused, editable)) {\n          return;\n        }\n\n        if (event.key === ' ' && matches(focused, 'button, [role^=\"menuitem\"]')) {\n          return;\n        }\n      }\n\n      // Which keys should we prevent default\n      const preventDefault = [\n        ' ',\n        'ArrowLeft',\n        'ArrowUp',\n        'ArrowRight',\n        'ArrowDown',\n\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n\n        'c',\n        'f',\n        'k',\n        'l',\n        'm',\n      ];\n\n      // If the key is found prevent default (e.g. prevent scrolling for arrows)\n      if (preventDefault.includes(key)) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      switch (key) {\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n          if (!repeat) {\n            seekByIncrement(parseInt(key, 10));\n          }\n          break;\n\n        case ' ':\n        case 'k':\n          if (!repeat) {\n            silencePromise(player.togglePlay());\n          }\n          break;\n\n        case 'ArrowUp':\n          player.increaseVolume(0.1);\n          break;\n\n        case 'ArrowDown':\n          player.decreaseVolume(0.1);\n          break;\n\n        case 'm':\n          if (!repeat) {\n            player.muted = !player.muted;\n          }\n          break;\n\n        case 'ArrowRight':\n          player.forward();\n          break;\n\n        case 'ArrowLeft':\n          player.rewind();\n          break;\n\n        case 'f':\n          player.fullscreen.toggle();\n          break;\n\n        case 'c':\n          if (!repeat) {\n            player.toggleCaptions();\n          }\n          break;\n\n        case 'l':\n          player.loop = !player.loop;\n          break;\n\n        default:\n          break;\n      }\n\n      // Escape is handle natively when in full screen\n      // So we only need to worry about non native\n      if (key === 'Escape' && !player.fullscreen.usingNative && player.fullscreen.active) {\n        player.fullscreen.toggle();\n      }\n\n      // Store last key for next cycle\n      this.lastKey = key;\n    } else {\n      this.lastKey = null;\n    }\n  }\n\n  // Toggle menu\n  toggleMenu(event) {\n    controls.toggleMenu.call(this.player, event);\n  }\n\n  // Device is touch enabled\n  firstTouch = () => {\n    const { player } = this;\n    const { elements } = player;\n\n    player.touch = true;\n\n    // Add touch class\n    toggleClass(elements.container, player.config.classNames.isTouch, true);\n  };\n\n  // Global window & document listeners\n  global = (toggle = true) => {\n    const { player } = this;\n\n    // Keyboard shortcuts\n    if (player.config.keyboard.global) {\n      toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n    }\n\n    // Click anywhere closes menu\n    toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n    // Detect touch by events\n    once.call(player, document.body, 'touchstart', this.firstTouch);\n  };\n\n  // Container listeners\n  container = () => {\n    const { player } = this;\n    const { config, elements, timers } = player;\n\n    // Keyboard shortcuts\n    if (!config.keyboard.global && config.keyboard.focused) {\n      on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n    }\n\n    // Toggle controls on mouse events and entering fullscreen\n    on.call(\n      player,\n      elements.container,\n      'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n      (event) => {\n        const { controls: controlsElement } = elements;\n\n        // Remove button states for fullscreen\n        if (controlsElement && event.type === 'enterfullscreen') {\n          controlsElement.pressed = false;\n          controlsElement.hover = false;\n        }\n\n        // Show, then hide after a timeout unless another control event occurs\n        const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n        let delay = 0;\n\n        if (show) {\n          ui.toggleControls.call(player, true);\n          // Use longer timeout for touch devices\n          delay = player.touch ? 3000 : 2000;\n        }\n\n        // Clear timer\n        clearTimeout(timers.controls);\n\n        // Set new timer to prevent flicker when seeking\n        timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n      },\n    );\n\n    // Set a gutter for Vimeo\n    const setGutter = () => {\n      if (!player.isVimeo || player.config.vimeo.premium) {\n        return;\n      }\n\n      const target = elements.wrapper;\n      const { active } = player.fullscreen;\n      const [videoWidth, videoHeight] = getAspectRatio.call(player);\n      const useNativeAspectRatio = supportsCSS(`aspect-ratio: ${videoWidth} / ${videoHeight}`);\n\n      // If not active, remove styles\n      if (!active) {\n        if (useNativeAspectRatio) {\n          target.style.width = null;\n          target.style.height = null;\n        } else {\n          target.style.maxWidth = null;\n          target.style.margin = null;\n        }\n        return;\n      }\n\n      // Determine which dimension will overflow and constrain view\n      const [viewportWidth, viewportHeight] = getViewportSize();\n      const overflow = viewportWidth / viewportHeight > videoWidth / videoHeight;\n\n      if (useNativeAspectRatio) {\n        target.style.width = overflow ? 'auto' : '100%';\n        target.style.height = overflow ? '100%' : 'auto';\n      } else {\n        target.style.maxWidth = overflow ? `${(viewportHeight / videoHeight) * videoWidth}px` : null;\n        target.style.margin = overflow ? '0 auto' : null;\n      }\n    };\n\n    // Handle resizing\n    const resized = () => {\n      clearTimeout(timers.resized);\n      timers.resized = setTimeout(setGutter, 50);\n    };\n\n    on.call(player, elements.container, 'enterfullscreen exitfullscreen', (event) => {\n      const { target } = player.fullscreen;\n\n      // Ignore events not from target\n      if (target !== elements.container) {\n        return;\n      }\n\n      // If it's not an embed and no ratio specified\n      if (!player.isEmbed && is.empty(player.config.ratio)) {\n        return;\n      }\n\n      // Set Vimeo gutter\n      setGutter();\n\n      // Watch for resizes\n      const method = event.type === 'enterfullscreen' ? on : off;\n      method.call(player, window, 'resize', resized);\n    });\n  };\n\n  // Listen for media events\n  media = () => {\n    const { player } = this;\n    const { elements } = player;\n\n    // Time change on media\n    on.call(player, player.media, 'timeupdate seeking seeked', (event) => controls.timeUpdate.call(player, event));\n\n    // Display duration\n    on.call(player, player.media, 'durationchange loadeddata loadedmetadata', (event) =>\n      controls.durationUpdate.call(player, event),\n    );\n\n    // Handle the media finishing\n    on.call(player, player.media, 'ended', () => {\n      // Show poster on end\n      if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n        // Restart\n        player.restart();\n\n        // Call pause otherwise IE11 will start playing the video again\n        player.pause();\n      }\n    });\n\n    // Check for buffer progress\n    on.call(player, player.media, 'progress playing seeking seeked', (event) =>\n      controls.updateProgress.call(player, event),\n    );\n\n    // Handle volume changes\n    on.call(player, player.media, 'volumechange', (event) => controls.updateVolume.call(player, event));\n\n    // Handle play/pause\n    on.call(player, player.media, 'playing play pause ended emptied timeupdate', (event) =>\n      ui.checkPlaying.call(player, event),\n    );\n\n    // Loading state\n    on.call(player, player.media, 'waiting canplay seeked playing', (event) => ui.checkLoading.call(player, event));\n\n    // Click video\n    if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n      // Re-fetch the wrapper\n      const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n      // Bail if there's no wrapper (this should never happen)\n      if (!is.element(wrapper)) {\n        return;\n      }\n\n      // On click play, pause or restart\n      on.call(player, elements.container, 'click', (event) => {\n        const targets = [elements.container, wrapper];\n\n        // Ignore if click if not container or in video wrapper\n        if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n          return;\n        }\n\n        // Touch devices will just show controls (if hidden)\n        if (player.touch && player.config.hideControls) {\n          return;\n        }\n\n        if (player.ended) {\n          this.proxy(event, player.restart, 'restart');\n          this.proxy(\n            event,\n            () => {\n              silencePromise(player.play());\n            },\n            'play',\n          );\n        } else {\n          this.proxy(\n            event,\n            () => {\n              silencePromise(player.togglePlay());\n            },\n            'play',\n          );\n        }\n      });\n    }\n\n    // Disable right click\n    if (player.supported.ui && player.config.disableContextMenu) {\n      on.call(\n        player,\n        elements.wrapper,\n        'contextmenu',\n        (event) => {\n          event.preventDefault();\n        },\n        false,\n      );\n    }\n\n    // Volume change\n    on.call(player, player.media, 'volumechange', () => {\n      // Save to storage\n      player.storage.set({\n        volume: player.volume,\n        muted: player.muted,\n      });\n    });\n\n    // Speed change\n    on.call(player, player.media, 'ratechange', () => {\n      // Update UI\n      controls.updateSetting.call(player, 'speed');\n\n      // Save to storage\n      player.storage.set({ speed: player.speed });\n    });\n\n    // Quality change\n    on.call(player, player.media, 'qualitychange', (event) => {\n      // Update UI\n      controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n    });\n\n    // Update download link when ready and if quality changes\n    on.call(player, player.media, 'ready qualitychange', () => {\n      controls.setDownloadUrl.call(player);\n    });\n\n    // Proxy events to container\n    // Bubble up key events for Edge\n    const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n\n    on.call(player, player.media, proxyEvents, (event) => {\n      let { detail = {} } = event;\n\n      // Get error details from media\n      if (event.type === 'error') {\n        detail = player.media.error;\n      }\n\n      triggerEvent.call(player, elements.container, event.type, true, detail);\n    });\n  };\n\n  // Run default and custom handlers\n  proxy = (event, defaultHandler, customHandlerKey) => {\n    const { player } = this;\n    const customHandler = player.config.listeners[customHandlerKey];\n    const hasCustomHandler = is.function(customHandler);\n    let returned = true;\n\n    // Execute custom handler\n    if (hasCustomHandler) {\n      returned = customHandler.call(player, event);\n    }\n\n    // Only call default handler if not prevented in custom handler\n    if (returned !== false && is.function(defaultHandler)) {\n      defaultHandler.call(player, event);\n    }\n  };\n\n  // Trigger custom and default handlers\n  bind = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n    const { player } = this;\n    const customHandler = player.config.listeners[customHandlerKey];\n    const hasCustomHandler = is.function(customHandler);\n\n    on.call(\n      player,\n      element,\n      type,\n      (event) => this.proxy(event, defaultHandler, customHandlerKey),\n      passive && !hasCustomHandler,\n    );\n  };\n\n  // Listen for control events\n  controls = () => {\n    const { player } = this;\n    const { elements } = player;\n    // IE doesn't support input event, so we fallback to change\n    const inputEvent = browser.isIE ? 'change' : 'input';\n\n    // Play/pause toggle\n    if (elements.buttons.play) {\n      Array.from(elements.buttons.play).forEach((button) => {\n        this.bind(\n          button,\n          'click',\n          () => {\n            silencePromise(player.togglePlay());\n          },\n          'play',\n        );\n      });\n    }\n\n    // Pause\n    this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n    // Rewind\n    this.bind(\n      elements.buttons.rewind,\n      'click',\n      () => {\n        // Record seek time so we can prevent hiding controls for a few seconds after rewind\n        player.lastSeekTime = Date.now();\n        player.rewind();\n      },\n      'rewind',\n    );\n\n    // Rewind\n    this.bind(\n      elements.buttons.fastForward,\n      'click',\n      () => {\n        // Record seek time so we can prevent hiding controls for a few seconds after fast forward\n        player.lastSeekTime = Date.now();\n        player.forward();\n      },\n      'fastForward',\n    );\n\n    // Mute toggle\n    this.bind(\n      elements.buttons.mute,\n      'click',\n      () => {\n        player.muted = !player.muted;\n      },\n      'mute',\n    );\n\n    // Captions toggle\n    this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n    // Download\n    this.bind(\n      elements.buttons.download,\n      'click',\n      () => {\n        triggerEvent.call(player, player.media, 'download');\n      },\n      'download',\n    );\n\n    // Fullscreen toggle\n    this.bind(\n      elements.buttons.fullscreen,\n      'click',\n      () => {\n        player.fullscreen.toggle();\n      },\n      'fullscreen',\n    );\n\n    // Picture-in-Picture\n    this.bind(\n      elements.buttons.pip,\n      'click',\n      () => {\n        player.pip = 'toggle';\n      },\n      'pip',\n    );\n\n    // Airplay\n    this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n    // Settings menu - click toggle\n    this.bind(\n      elements.buttons.settings,\n      'click',\n      (event) => {\n        // Prevent the document click listener closing the menu\n        event.stopPropagation();\n        event.preventDefault();\n\n        controls.toggleMenu.call(player, event);\n      },\n      null,\n      false,\n    ); // Can't be passive as we're preventing default\n\n    // Settings menu - keyboard toggle\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    this.bind(\n      elements.buttons.settings,\n      'keyup',\n      (event) => {\n        if (![' ', 'Enter'].includes(event.key)) {\n          return;\n        }\n\n        // Because return triggers a click anyway, all we need to do is set focus\n        if (event.key === 'Enter') {\n          controls.focusFirstMenuItem.call(player, null, true);\n          return;\n        }\n\n        // Prevent scroll\n        event.preventDefault();\n\n        // Prevent playing video (Firefox)\n        event.stopPropagation();\n\n        // Toggle menu\n        controls.toggleMenu.call(player, event);\n      },\n      null,\n      false, // Can't be passive as we're preventing default\n    );\n\n    // Escape closes menu\n    this.bind(elements.settings.menu, 'keydown', (event) => {\n      if (event.key === 'Escape') {\n        controls.toggleMenu.call(player, event);\n      }\n    });\n\n    // Set range input alternative \"value\", which matches the tooltip time (#954)\n    this.bind(elements.inputs.seek, 'mousedown mousemove', (event) => {\n      const rect = elements.progress.getBoundingClientRect();\n      const percent = (100 / rect.width) * (event.pageX - rect.left);\n      event.currentTarget.setAttribute('seek-value', percent);\n    });\n\n    // Pause while seeking\n    this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', (event) => {\n      const seek = event.currentTarget;\n      const attribute = 'play-on-seeked';\n\n      if (is.keyboardEvent(event) && !['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n        return;\n      }\n\n      // Record seek time so we can prevent hiding controls for a few seconds after seek\n      player.lastSeekTime = Date.now();\n\n      // Was playing before?\n      const play = seek.hasAttribute(attribute);\n      // Done seeking\n      const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n      // If we're done seeking and it was playing, resume playback\n      if (play && done) {\n        seek.removeAttribute(attribute);\n        silencePromise(player.play());\n      } else if (!done && player.playing) {\n        seek.setAttribute(attribute, '');\n        player.pause();\n      }\n    });\n\n    // Fix range inputs on iOS\n    // Super weird iOS bug where after you interact with an <input type=\"range\">,\n    // it takes over further interactions on the page. This is a hack\n    if (browser.isIos) {\n      const inputs = getElements.call(player, 'input[type=\"range\"]');\n      Array.from(inputs).forEach((input) => this.bind(input, inputEvent, (event) => repaint(event.target)));\n    }\n\n    // Seek\n    this.bind(\n      elements.inputs.seek,\n      inputEvent,\n      (event) => {\n        const seek = event.currentTarget;\n        // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n        let seekTo = seek.getAttribute('seek-value');\n\n        if (is.empty(seekTo)) {\n          seekTo = seek.value;\n        }\n\n        seek.removeAttribute('seek-value');\n\n        player.currentTime = (seekTo / seek.max) * player.duration;\n      },\n      'seek',\n    );\n\n    // Seek tooltip\n    this.bind(elements.progress, 'mouseenter mouseleave mousemove', (event) =>\n      controls.updateSeekTooltip.call(player, event),\n    );\n\n    // Preview thumbnails plugin\n    // TODO: Really need to work on some sort of plug-in wide event bus or pub-sub for this\n    this.bind(elements.progress, 'mousemove touchmove', (event) => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.startMove(event);\n      }\n    });\n\n    // Hide thumbnail preview - on mouse click, mouse leave, and video play/seek. All four are required, e.g., for buffering\n    this.bind(elements.progress, 'mouseleave touchend click', () => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.endMove(false, true);\n      }\n    });\n\n    // Show scrubbing preview\n    this.bind(elements.progress, 'mousedown touchstart', (event) => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.startScrubbing(event);\n      }\n    });\n\n    this.bind(elements.progress, 'mouseup touchend', (event) => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.endScrubbing(event);\n      }\n    });\n\n    // Polyfill for lower fill in <input type=\"range\"> for webkit\n    if (browser.isWebKit) {\n      Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach((element) => {\n        this.bind(element, 'input', (event) => controls.updateRangeFill.call(player, event.target));\n      });\n    }\n\n    // Current time invert\n    // Only if one time element is used for both currentTime and duration\n    if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n      this.bind(elements.display.currentTime, 'click', () => {\n        // Do nothing if we're at the start\n        if (player.currentTime === 0) {\n          return;\n        }\n\n        player.config.invertTime = !player.config.invertTime;\n\n        controls.timeUpdate.call(player);\n      });\n    }\n\n    // Volume\n    this.bind(\n      elements.inputs.volume,\n      inputEvent,\n      (event) => {\n        player.volume = event.target.value;\n      },\n      'volume',\n    );\n\n    // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n    this.bind(elements.controls, 'mouseenter mouseleave', (event) => {\n      elements.controls.hover = !player.touch && event.type === 'mouseenter';\n    });\n\n    // Also update controls.hover state for any non-player children of fullscreen element (as above)\n    if (elements.fullscreen) {\n      Array.from(elements.fullscreen.children)\n        .filter((c) => !c.contains(elements.container))\n        .forEach((child) => {\n          this.bind(child, 'mouseenter mouseleave', (event) => {\n            if (elements.controls) {\n              elements.controls.hover = !player.touch && event.type === 'mouseenter';\n            }\n          });\n        });\n    }\n\n    // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n    this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', (event) => {\n      elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n    });\n\n    // Show controls when they receive focus (e.g., when using keyboard tab key)\n    this.bind(elements.controls, 'focusin', () => {\n      const { config, timers } = player;\n\n      // Skip transition to prevent focus from scrolling the parent element\n      toggleClass(elements.controls, config.classNames.noTransition, true);\n\n      // Toggle\n      ui.toggleControls.call(player, true);\n\n      // Restore transition\n      setTimeout(() => {\n        toggleClass(elements.controls, config.classNames.noTransition, false);\n      }, 0);\n\n      // Delay a little more for mouse users\n      const delay = this.touch ? 3000 : 4000;\n\n      // Clear timer\n      clearTimeout(timers.controls);\n\n      // Hide again after delay\n      timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n    });\n\n    // Mouse wheel for volume\n    this.bind(\n      elements.inputs.volume,\n      'wheel',\n      (event) => {\n        // Detect \"natural\" scroll - supported on OS X Safari only\n        // Other browsers on OS X will be inverted until support improves\n        const inverted = event.webkitDirectionInvertedFromDevice;\n        // Get delta from event. Invert if `inverted` is true\n        const [x, y] = [event.deltaX, -event.deltaY].map((value) => (inverted ? -value : value));\n        // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n        const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n        // Change the volume by 2%\n        player.increaseVolume(direction / 50);\n\n        // Don't break page scrolling at max and min\n        const { volume } = player.media;\n        if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n          event.preventDefault();\n        }\n      },\n      'volume',\n      false,\n    );\n  };\n}\n\nexport default Listeners;\n", "(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathname = path.replace(/[\\?|#].*$/, ''),\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isLegacyIECss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(pathname)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n *   callback or (3) object literal with success/error arguments, numRetries,\n *   etc.\n * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n *   literal with success/error arguments, numRetries, etc.\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n", "// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n  return new Promise((resolve, reject) => {\n    loadjs(url, {\n      success: resolve,\n      error: reject,\n    });\n  });\n}\n", "// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/load-script';\nimport { format, stripHTML } from '../utils/strings';\nimport { roundAspectRatio, setAspectRatio } from '../utils/style';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n  if (is.empty(url)) {\n    return null;\n  }\n\n  if (is.number(Number(url))) {\n    return url;\n  }\n\n  const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n  return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Try to extract a hash for private videos from the URL\nfunction parseHash(url) {\n  /* This regex matches a hexadecimal hash if given in any of these forms:\n   *  - [https://player.]vimeo.com/video/{id}/{hash}[?params]\n   *  - [https://player.]vimeo.com/video/{id}?h={hash}[&params]\n   *  - [https://player.]vimeo.com/video/{id}?[params]&h={hash}\n   *  - video/{id}/{hash}\n   * If matched, the hash is available in capture group 4\n   */\n  const regex = /^.*(vimeo.com\\/|video\\/)(\\d+)(\\?.*&*h=|\\/)+([\\d,a-f]+)/;\n  const found = url.match(regex);\n\n  return found && found.length === 5 ? found[4] : null;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n  if (play && !this.embed.hasPlayed) {\n    this.embed.hasPlayed = true;\n  }\n  if (this.media.paused === play) {\n    this.media.paused = !play;\n    triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n  }\n}\n\nconst vimeo = {\n  setup() {\n    const player = this;\n\n    // Add embed class for responsive\n    toggleClass(player.elements.wrapper, player.config.classNames.embed, true);\n\n    // Set speed options from config\n    player.options.speed = player.config.speed.options;\n\n    // Set intial ratio\n    setAspectRatio.call(player);\n\n    // Load the SDK if not already\n    if (!is.object(window.Vimeo)) {\n      loadScript(player.config.urls.vimeo.sdk)\n        .then(() => {\n          vimeo.ready.call(player);\n        })\n        .catch((error) => {\n          player.debug.warn('Vimeo SDK (player.js) failed to load', error);\n        });\n    } else {\n      vimeo.ready.call(player);\n    }\n  },\n\n  // API Ready\n  ready() {\n    const player = this;\n    const config = player.config.vimeo;\n    const { premium, referrerPolicy, ...frameParams } = config;\n    // Get the source URL or ID\n    let source = player.media.getAttribute('src');\n    let hash = '';\n    // Get from <div> if needed\n    if (is.empty(source)) {\n      source = player.media.getAttribute(player.config.attributes.embed.id);\n      // hash can also be set as attribute on the <div>\n      hash = player.media.getAttribute(player.config.attributes.embed.hash);\n    } else {\n      hash = parseHash(source);\n    }\n    const hashParam = hash ? { h: hash } : {};\n\n    // If the owner has a pro or premium account then we can hide controls etc\n    if (premium) {\n      Object.assign(frameParams, {\n        controls: false,\n        sidedock: false,\n      });\n    }\n\n    // Get Vimeo params for the iframe\n    const params = buildUrlParams({\n      loop: player.config.loop.active,\n      autoplay: player.autoplay,\n      muted: player.muted,\n      gesture: 'media',\n      playsinline: player.config.playsinline,\n      // hash has to be added to iframe-URL\n      ...hashParam,\n      ...frameParams,\n    });\n\n    const id = parseId(source);\n    // Build an iframe\n    const iframe = createElement('iframe');\n    const src = format(player.config.urls.vimeo.iframe, id, params);\n    iframe.setAttribute('src', src);\n    iframe.setAttribute('allowfullscreen', '');\n    iframe.setAttribute(\n      'allow',\n      ['autoplay', 'fullscreen', 'picture-in-picture', 'encrypted-media', 'accelerometer', 'gyroscope'].join('; '),\n    );\n\n    // Set the referrer policy if required\n    if (!is.empty(referrerPolicy)) {\n      iframe.setAttribute('referrerPolicy', referrerPolicy);\n    }\n\n    // Inject the package\n    if (premium || !config.customControls) {\n      iframe.setAttribute('data-poster', player.poster);\n      player.media = replaceElement(iframe, player.media);\n    } else {\n      const wrapper = createElement('div', {\n        class: player.config.classNames.embedContainer,\n        'data-poster': player.poster,\n      });\n      wrapper.appendChild(iframe);\n      player.media = replaceElement(wrapper, player.media);\n    }\n\n    // Get poster image\n    if (!config.customControls) {\n      fetch(format(player.config.urls.vimeo.api, src)).then((response) => {\n        if (is.empty(response) || !response.thumbnail_url) {\n          return;\n        }\n\n        // Set and show poster\n        ui.setPoster.call(player, response.thumbnail_url).catch(() => {});\n      });\n    }\n\n    // Setup instance\n    // https://github.com/vimeo/player.js\n    player.embed = new window.Vimeo.Player(iframe, {\n      autopause: player.config.autopause,\n      muted: player.muted,\n    });\n\n    player.media.paused = true;\n    player.media.currentTime = 0;\n\n    // Disable native text track rendering\n    if (player.supported.ui) {\n      player.embed.disableTextTrack();\n    }\n\n    // Create a faux HTML5 API using the Vimeo API\n    player.media.play = () => {\n      assurePlaybackState.call(player, true);\n      return player.embed.play();\n    };\n\n    player.media.pause = () => {\n      assurePlaybackState.call(player, false);\n      return player.embed.pause();\n    };\n\n    player.media.stop = () => {\n      player.pause();\n      player.currentTime = 0;\n    };\n\n    // Seeking\n    let { currentTime } = player.media;\n    Object.defineProperty(player.media, 'currentTime', {\n      get() {\n        return currentTime;\n      },\n      set(time) {\n        // Vimeo will automatically play on seek if the video hasn't been played before\n\n        // Get current paused state and volume etc\n        const { embed, media, paused, volume } = player;\n        const restorePause = paused && !embed.hasPlayed;\n\n        // Set seeking state and trigger event\n        media.seeking = true;\n        triggerEvent.call(player, media, 'seeking');\n\n        // If paused, mute until seek is complete\n        Promise.resolve(restorePause && embed.setVolume(0))\n          // Seek\n          .then(() => embed.setCurrentTime(time))\n          // Restore paused\n          .then(() => restorePause && embed.pause())\n          // Restore volume\n          .then(() => restorePause && embed.setVolume(volume))\n          .catch(() => {\n            // Do nothing\n          });\n      },\n    });\n\n    // Playback speed\n    let speed = player.config.speed.selected;\n    Object.defineProperty(player.media, 'playbackRate', {\n      get() {\n        return speed;\n      },\n      set(input) {\n        player.embed\n          .setPlaybackRate(input)\n          .then(() => {\n            speed = input;\n            triggerEvent.call(player, player.media, 'ratechange');\n          })\n          .catch(() => {\n            // Cannot set Playback Rate, Video is probably not on Pro account\n            player.options.speed = [1];\n          });\n      },\n    });\n\n    // Volume\n    let { volume } = player.config;\n    Object.defineProperty(player.media, 'volume', {\n      get() {\n        return volume;\n      },\n      set(input) {\n        player.embed.setVolume(input).then(() => {\n          volume = input;\n          triggerEvent.call(player, player.media, 'volumechange');\n        });\n      },\n    });\n\n    // Muted\n    let { muted } = player.config;\n    Object.defineProperty(player.media, 'muted', {\n      get() {\n        return muted;\n      },\n      set(input) {\n        const toggle = is.boolean(input) ? input : false;\n\n        player.embed.setMuted(toggle ? true : player.config.muted).then(() => {\n          muted = toggle;\n          triggerEvent.call(player, player.media, 'volumechange');\n        });\n      },\n    });\n\n    // Loop\n    let { loop } = player.config;\n    Object.defineProperty(player.media, 'loop', {\n      get() {\n        return loop;\n      },\n      set(input) {\n        const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n        player.embed.setLoop(toggle).then(() => {\n          loop = toggle;\n        });\n      },\n    });\n\n    // Source\n    let currentSrc;\n    player.embed\n      .getVideoUrl()\n      .then((value) => {\n        currentSrc = value;\n        controls.setDownloadUrl.call(player);\n      })\n      .catch((error) => {\n        this.debug.warn(error);\n      });\n\n    Object.defineProperty(player.media, 'currentSrc', {\n      get() {\n        return currentSrc;\n      },\n    });\n\n    // Ended\n    Object.defineProperty(player.media, 'ended', {\n      get() {\n        return player.currentTime === player.duration;\n      },\n    });\n\n    // Set aspect ratio based on video size\n    Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then((dimensions) => {\n      const [width, height] = dimensions;\n      player.embed.ratio = roundAspectRatio(width, height);\n      setAspectRatio.call(this);\n    });\n\n    // Set autopause\n    player.embed.setAutopause(player.config.autopause).then((state) => {\n      player.config.autopause = state;\n    });\n\n    // Get title\n    player.embed.getVideoTitle().then((title) => {\n      player.config.title = title;\n      ui.setTitle.call(this);\n    });\n\n    // Get current time\n    player.embed.getCurrentTime().then((value) => {\n      currentTime = value;\n      triggerEvent.call(player, player.media, 'timeupdate');\n    });\n\n    // Get duration\n    player.embed.getDuration().then((value) => {\n      player.media.duration = value;\n      triggerEvent.call(player, player.media, 'durationchange');\n    });\n\n    // Get captions\n    player.embed.getTextTracks().then((tracks) => {\n      player.media.textTracks = tracks;\n      captions.setup.call(player);\n    });\n\n    player.embed.on('cuechange', ({ cues = [] }) => {\n      const strippedCues = cues.map((cue) => stripHTML(cue.text));\n      captions.updateCues.call(player, strippedCues);\n    });\n\n    player.embed.on('loaded', () => {\n      // Assure state and events are updated on autoplay\n      player.embed.getPaused().then((paused) => {\n        assurePlaybackState.call(player, !paused);\n        if (!paused) {\n          triggerEvent.call(player, player.media, 'playing');\n        }\n      });\n\n      if (is.element(player.embed.element) && player.supported.ui) {\n        const frame = player.embed.element;\n\n        // Fix keyboard focus issues\n        // https://github.com/sampotts/plyr/issues/317\n        frame.setAttribute('tabindex', -1);\n      }\n    });\n\n    player.embed.on('bufferstart', () => {\n      triggerEvent.call(player, player.media, 'waiting');\n    });\n\n    player.embed.on('bufferend', () => {\n      triggerEvent.call(player, player.media, 'playing');\n    });\n\n    player.embed.on('play', () => {\n      assurePlaybackState.call(player, true);\n      triggerEvent.call(player, player.media, 'playing');\n    });\n\n    player.embed.on('pause', () => {\n      assurePlaybackState.call(player, false);\n    });\n\n    player.embed.on('timeupdate', (data) => {\n      player.media.seeking = false;\n      currentTime = data.seconds;\n      triggerEvent.call(player, player.media, 'timeupdate');\n    });\n\n    player.embed.on('progress', (data) => {\n      player.media.buffered = data.percent;\n      triggerEvent.call(player, player.media, 'progress');\n\n      // Check all loaded\n      if (parseInt(data.percent, 10) === 1) {\n        triggerEvent.call(player, player.media, 'canplaythrough');\n      }\n\n      // Get duration as if we do it before load, it gives an incorrect value\n      // https://github.com/sampotts/plyr/issues/891\n      player.embed.getDuration().then((value) => {\n        if (value !== player.media.duration) {\n          player.media.duration = value;\n          triggerEvent.call(player, player.media, 'durationchange');\n        }\n      });\n    });\n\n    player.embed.on('seeked', () => {\n      player.media.seeking = false;\n      triggerEvent.call(player, player.media, 'seeked');\n    });\n\n    player.embed.on('ended', () => {\n      player.media.paused = true;\n      triggerEvent.call(player, player.media, 'ended');\n    });\n\n    player.embed.on('error', (detail) => {\n      player.media.error = detail;\n      triggerEvent.call(player, player.media, 'error');\n    });\n\n    // Rebuild UI\n    if (config.customControls) {\n      setTimeout(() => ui.build.call(player), 0);\n    }\n  },\n};\n\nexport default vimeo;\n", "// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/load-image';\nimport loadScript from '../utils/load-script';\nimport { extend } from '../utils/objects';\nimport { format, generateId } from '../utils/strings';\nimport { roundAspectRatio, setAspectRatio } from '../utils/style';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n  if (is.empty(url)) {\n    return null;\n  }\n\n  const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n  if (play && !this.embed.hasPlayed) {\n    this.embed.hasPlayed = true;\n  }\n  if (this.media.paused === play) {\n    this.media.paused = !play;\n    triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n  }\n}\n\nfunction getHost(config) {\n  if (config.noCookie) {\n    return 'https://www.youtube-nocookie.com';\n  }\n\n  if (window.location.protocol === 'http:') {\n    return 'http://www.youtube.com';\n  }\n\n  // Use YouTube's default\n  return undefined;\n}\n\nconst youtube = {\n  setup() {\n    // Add embed class for responsive\n    toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n    // Setup API\n    if (is.object(window.YT) && is.function(window.YT.Player)) {\n      youtube.ready.call(this);\n    } else {\n      // Reference current global callback\n      const callback = window.onYouTubeIframeAPIReady;\n\n      // Set callback to process queue\n      window.onYouTubeIframeAPIReady = () => {\n        // Call global callback if set\n        if (is.function(callback)) {\n          callback();\n        }\n\n        youtube.ready.call(this);\n      };\n\n      // Load the SDK\n      loadScript(this.config.urls.youtube.sdk).catch((error) => {\n        this.debug.warn('YouTube API failed to load', error);\n      });\n    }\n  },\n\n  // Get the media title\n  getTitle(videoId) {\n    const url = format(this.config.urls.youtube.api, videoId);\n\n    fetch(url)\n      .then((data) => {\n        if (is.object(data)) {\n          const { title, height, width } = data;\n\n          // Set title\n          this.config.title = title;\n          ui.setTitle.call(this);\n\n          // Set aspect ratio\n          this.embed.ratio = roundAspectRatio(width, height);\n        }\n\n        setAspectRatio.call(this);\n      })\n      .catch(() => {\n        // Set aspect ratio\n        setAspectRatio.call(this);\n      });\n  },\n\n  // API ready\n  ready() {\n    const player = this;\n    const config = player.config.youtube;\n    // Ignore already setup (race condition)\n    const currentId = player.media && player.media.getAttribute('id');\n    if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n      return;\n    }\n\n    // Get the source URL or ID\n    let source = player.media.getAttribute('src');\n\n    // Get from <div> if needed\n    if (is.empty(source)) {\n      source = player.media.getAttribute(this.config.attributes.embed.id);\n    }\n\n    // Replace the <iframe> with a <div> due to YouTube API issues\n    const videoId = parseId(source);\n    const id = generateId(player.provider);\n    // Replace media element\n    const container = createElement('div', { id, 'data-poster': config.customControls ? player.poster : undefined });\n    player.media = replaceElement(container, player.media);\n\n    // Only load the poster when using custom controls\n    if (config.customControls) {\n      const posterSrc = (s) => `https://i.ytimg.com/vi/${videoId}/${s}default.jpg`;\n\n      // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n      loadImage(posterSrc('maxres'), 121) // Highest quality and un-padded\n        .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n        .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n        .then((image) => ui.setPoster.call(player, image.src))\n        .then((src) => {\n          // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n          if (!src.includes('maxres')) {\n            player.elements.poster.style.backgroundSize = 'cover';\n          }\n        })\n        .catch(() => {});\n    }\n\n    // Setup instance\n    // https://developers.google.com/youtube/iframe_api_reference\n    player.embed = new window.YT.Player(player.media, {\n      videoId,\n      host: getHost(config),\n      playerVars: extend(\n        {},\n        {\n          // Autoplay\n          autoplay: player.config.autoplay ? 1 : 0,\n          // iframe interface language\n          hl: player.config.hl,\n          // Only show controls if not fully supported or opted out\n          controls: player.supported.ui && config.customControls ? 0 : 1,\n          // Disable keyboard as we handle it\n          disablekb: 1,\n          // Allow iOS inline playback\n          playsinline: player.config.playsinline && !player.config.fullscreen.iosNative ? 1 : 0,\n          // Captions are flaky on YouTube\n          cc_load_policy: player.captions.active ? 1 : 0,\n          cc_lang_pref: player.config.captions.language,\n          // Tracking for stats\n          widget_referrer: window ? window.location.href : null,\n        },\n        config,\n      ),\n      events: {\n        onError(event) {\n          // YouTube may fire onError twice, so only handle it once\n          if (!player.media.error) {\n            const code = event.data;\n            // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n            const message =\n              {\n                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n              }[code] || 'An unknown error occurred';\n\n            player.media.error = { code, message };\n\n            triggerEvent.call(player, player.media, 'error');\n          }\n        },\n        onPlaybackRateChange(event) {\n          // Get the instance\n          const instance = event.target;\n\n          // Get current speed\n          player.media.playbackRate = instance.getPlaybackRate();\n\n          triggerEvent.call(player, player.media, 'ratechange');\n        },\n        onReady(event) {\n          // Bail if onReady has already been called. See issue #1108\n          if (is.function(player.media.play)) {\n            return;\n          }\n          // Get the instance\n          const instance = event.target;\n\n          // Get the title\n          youtube.getTitle.call(player, videoId);\n\n          // Create a faux HTML5 API using the YouTube API\n          player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            instance.playVideo();\n          };\n\n          player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            instance.pauseVideo();\n          };\n\n          player.media.stop = () => {\n            instance.stopVideo();\n          };\n\n          player.media.duration = instance.getDuration();\n          player.media.paused = true;\n\n          // Seeking\n          player.media.currentTime = 0;\n          Object.defineProperty(player.media, 'currentTime', {\n            get() {\n              return Number(instance.getCurrentTime());\n            },\n            set(time) {\n              // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n              if (player.paused && !player.embed.hasPlayed) {\n                player.embed.mute();\n              }\n\n              // Set seeking state and trigger event\n              player.media.seeking = true;\n              triggerEvent.call(player, player.media, 'seeking');\n\n              // Seek after events sent\n              instance.seekTo(time);\n            },\n          });\n\n          // Playback speed\n          Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n              return instance.getPlaybackRate();\n            },\n            set(input) {\n              instance.setPlaybackRate(input);\n            },\n          });\n\n          // Volume\n          let { volume } = player.config;\n          Object.defineProperty(player.media, 'volume', {\n            get() {\n              return volume;\n            },\n            set(input) {\n              volume = input;\n              instance.setVolume(volume * 100);\n              triggerEvent.call(player, player.media, 'volumechange');\n            },\n          });\n\n          // Muted\n          let { muted } = player.config;\n          Object.defineProperty(player.media, 'muted', {\n            get() {\n              return muted;\n            },\n            set(input) {\n              const toggle = is.boolean(input) ? input : muted;\n              muted = toggle;\n              instance[toggle ? 'mute' : 'unMute']();\n              instance.setVolume(volume * 100);\n              triggerEvent.call(player, player.media, 'volumechange');\n            },\n          });\n\n          // Source\n          Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n              return instance.getVideoUrl();\n            },\n          });\n\n          // Ended\n          Object.defineProperty(player.media, 'ended', {\n            get() {\n              return player.currentTime === player.duration;\n            },\n          });\n\n          // Get available speeds\n          const speeds = instance.getAvailablePlaybackRates();\n          // Filter based on config\n          player.options.speed = speeds.filter((s) => player.config.speed.options.includes(s));\n\n          // Set the tabindex to avoid focus entering iframe\n          if (player.supported.ui && config.customControls) {\n            player.media.setAttribute('tabindex', -1);\n          }\n\n          triggerEvent.call(player, player.media, 'timeupdate');\n          triggerEvent.call(player, player.media, 'durationchange');\n\n          // Reset timer\n          clearInterval(player.timers.buffering);\n\n          // Setup buffering\n          player.timers.buffering = setInterval(() => {\n            // Get loaded % from YouTube\n            player.media.buffered = instance.getVideoLoadedFraction();\n\n            // Trigger progress only when we actually buffer something\n            if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n              triggerEvent.call(player, player.media, 'progress');\n            }\n\n            // Set last buffer point\n            player.media.lastBuffered = player.media.buffered;\n\n            // Bail if we're at 100%\n            if (player.media.buffered === 1) {\n              clearInterval(player.timers.buffering);\n\n              // Trigger event\n              triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n          }, 200);\n\n          // Rebuild UI\n          if (config.customControls) {\n            setTimeout(() => ui.build.call(player), 50);\n          }\n        },\n        onStateChange(event) {\n          // Get the instance\n          const instance = event.target;\n\n          // Reset timer\n          clearInterval(player.timers.playing);\n\n          const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n          if (seeked) {\n            // Unset seeking and fire seeked event\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n          }\n\n          // Handle events\n          // -1   Unstarted\n          // 0    Ended\n          // 1    Playing\n          // 2    Paused\n          // 3    Buffering\n          // 5    Video cued\n          switch (event.data) {\n            case -1:\n              // Update scrubber\n              triggerEvent.call(player, player.media, 'timeupdate');\n\n              // Get loaded % from YouTube\n              player.media.buffered = instance.getVideoLoadedFraction();\n              triggerEvent.call(player, player.media, 'progress');\n\n              break;\n\n            case 0:\n              assurePlaybackState.call(player, false);\n\n              // YouTube doesn't support loop for a single video, so mimick it.\n              if (player.media.loop) {\n                // YouTube needs a call to `stopVideo` before playing again\n                instance.stopVideo();\n                instance.playVideo();\n              } else {\n                triggerEvent.call(player, player.media, 'ended');\n              }\n\n              break;\n\n            case 1:\n              // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n              if (config.customControls && !player.config.autoplay && player.media.paused && !player.embed.hasPlayed) {\n                player.media.pause();\n              } else {\n                assurePlaybackState.call(player, true);\n\n                triggerEvent.call(player, player.media, 'playing');\n\n                // Poll to get playback progress\n                player.timers.playing = setInterval(() => {\n                  triggerEvent.call(player, player.media, 'timeupdate');\n                }, 50);\n\n                // Check duration again due to YouTube bug\n                // https://github.com/sampotts/plyr/issues/374\n                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                if (player.media.duration !== instance.getDuration()) {\n                  player.media.duration = instance.getDuration();\n                  triggerEvent.call(player, player.media, 'durationchange');\n                }\n              }\n\n              break;\n\n            case 2:\n              // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n              if (!player.muted) {\n                player.embed.unMute();\n              }\n              assurePlaybackState.call(player, false);\n\n              break;\n\n            case 3:\n              // Trigger waiting event to add loading classes to container as the video buffers.\n              triggerEvent.call(player, player.media, 'waiting');\n\n              break;\n\n            default:\n              break;\n          }\n\n          triggerEvent.call(player, player.elements.container, 'statechange', false, {\n            code: event.data,\n          });\n        },\n      },\n    });\n  },\n};\n\nexport default youtube;\n", "// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n  // Setup media\n  setup() {\n    // If there's no media, bail\n    if (!this.media) {\n      this.debug.warn('No media element found!');\n      return;\n    }\n\n    // Add type class\n    toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n    // Add provider class\n    toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n    // Add video class for embeds\n    // This will require changes if audio embeds are added\n    if (this.isEmbed) {\n      toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n    }\n\n    // Inject the player wrapper\n    if (this.isVideo) {\n      // Create the wrapper div\n      this.elements.wrapper = createElement('div', {\n        class: this.config.classNames.video,\n      });\n\n      // Wrap the video in a container\n      wrap(this.media, this.elements.wrapper);\n\n      // Poster image container\n      this.elements.poster = createElement('div', {\n        class: this.config.classNames.poster,\n      });\n\n      this.elements.wrapper.appendChild(this.elements.poster);\n    }\n\n    if (this.isHTML5) {\n      html5.setup.call(this);\n    } else if (this.isYouTube) {\n      youtube.setup.call(this);\n    } else if (this.isVimeo) {\n      vimeo.setup.call(this);\n    }\n  },\n};\n\nexport default media;\n", "// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport i18n from '../utils/i18n';\nimport is from '../utils/is';\nimport loadScript from '../utils/load-script';\nimport { silencePromise } from '../utils/promise';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nconst destroy = (instance) => {\n  // Destroy our adsManager\n  if (instance.manager) {\n    instance.manager.destroy();\n  }\n\n  // Destroy our adsManager\n  if (instance.elements.displayContainer) {\n    instance.elements.displayContainer.destroy();\n  }\n\n  instance.elements.container.remove();\n};\n\nclass Ads {\n  /**\n   * Ads constructor.\n   * @param {Object} player\n   * @return {Ads}\n   */\n  constructor(player) {\n    this.player = player;\n    this.config = player.config.ads;\n    this.playing = false;\n    this.initialized = false;\n    this.elements = {\n      container: null,\n      displayContainer: null,\n    };\n    this.manager = null;\n    this.loader = null;\n    this.cuePoints = null;\n    this.events = {};\n    this.safetyTimer = null;\n    this.countdownTimer = null;\n\n    // Setup a promise to resolve when the IMA manager is ready\n    this.managerPromise = new Promise((resolve, reject) => {\n      // The ad is loaded and ready\n      this.on('loaded', resolve);\n\n      // Ads failed\n      this.on('error', reject);\n    });\n\n    this.load();\n  }\n\n  get enabled() {\n    const { config } = this;\n\n    return (\n      this.player.isHTML5 &&\n      this.player.isVideo &&\n      config.enabled &&\n      (!is.empty(config.publisherId) || is.url(config.tagUrl))\n    );\n  }\n\n  /**\n   * Load the IMA SDK\n   */\n  load = () => {\n    if (!this.enabled) {\n      return;\n    }\n\n    // Check if the Google IMA3 SDK is loaded or load it ourselves\n    if (!is.object(window.google) || !is.object(window.google.ima)) {\n      loadScript(this.player.config.urls.googleIMA.sdk)\n        .then(() => {\n          this.ready();\n        })\n        .catch(() => {\n          // Script failed to load or is blocked\n          this.trigger('error', new Error('Google IMA SDK failed to load'));\n        });\n    } else {\n      this.ready();\n    }\n  };\n\n  /**\n   * Get the ads instance ready\n   */\n  ready = () => {\n    // Double check we're enabled\n    if (!this.enabled) {\n      destroy(this);\n    }\n\n    // Start ticking our safety timer. If the whole advertisement\n    // thing doesn't resolve within our set time; we bail\n    this.startSafetyTimer(12000, 'ready()');\n\n    // Clear the safety timer\n    this.managerPromise.then(() => {\n      this.clearSafetyTimer('onAdsManagerLoaded()');\n    });\n\n    // Set listeners on the Plyr instance\n    this.listeners();\n\n    // Setup the IMA SDK\n    this.setupIMA();\n  };\n\n  // Build the tag URL\n  get tagUrl() {\n    const { config } = this;\n\n    if (is.url(config.tagUrl)) {\n      return config.tagUrl;\n    }\n\n    const params = {\n      AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n      AV_CHANNELID: '5a0458dc28a06145e4519d21',\n      AV_URL: window.location.hostname,\n      cb: Date.now(),\n      AV_WIDTH: 640,\n      AV_HEIGHT: 480,\n      AV_CDIM2: config.publisherId,\n    };\n\n    const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n    return `${base}?${buildUrlParams(params)}`;\n  }\n\n  /**\n   * In order for the SDK to display ads for our video, we need to tell it where to put them,\n   * so here we define our ad container. This div is set up to render on top of the video player.\n   * Using the code below, we tell the SDK to render ads within that div. We also provide a\n   * handle to the content video player - the SDK will poll the current time of our player to\n   * properly place mid-rolls. After we create the ad display container, we initialize it. On\n   * mobile devices, this initialization is done as the result of a user action.\n   */\n  setupIMA = () => {\n    // Create the container for our advertisements\n    this.elements.container = createElement('div', {\n      class: this.player.config.classNames.ads,\n    });\n\n    this.player.elements.container.appendChild(this.elements.container);\n\n    // So we can run VPAID2\n    google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n    // Set language\n    google.ima.settings.setLocale(this.player.config.ads.language);\n\n    // Set playback for iOS10+\n    google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline);\n\n    // We assume the adContainer is the video container of the plyr element that will house the ads\n    this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container, this.player.media);\n\n    // Create ads loader\n    this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n    // Listen and respond to ads loaded and error events\n    this.loader.addEventListener(\n      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n      (event) => this.onAdsManagerLoaded(event),\n      false,\n    );\n    this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (error) => this.onAdError(error), false);\n\n    // Request video ads to be pre-loaded\n    this.requestAds();\n  };\n\n  /**\n   * Request advertisements\n   */\n  requestAds = () => {\n    const { container } = this.player.elements;\n\n    try {\n      // Request video ads\n      const request = new google.ima.AdsRequest();\n      request.adTagUrl = this.tagUrl;\n\n      // Specify the linear and nonlinear slot sizes. This helps the SDK\n      // to select the correct creative if multiple are returned\n      request.linearAdSlotWidth = container.offsetWidth;\n      request.linearAdSlotHeight = container.offsetHeight;\n      request.nonLinearAdSlotWidth = container.offsetWidth;\n      request.nonLinearAdSlotHeight = container.offsetHeight;\n\n      // We only overlay ads as we only support video.\n      request.forceNonLinearFullSlot = false;\n\n      // Mute based on current state\n      request.setAdWillPlayMuted(!this.player.muted);\n\n      this.loader.requestAds(request);\n    } catch (error) {\n      this.onAdError(error);\n    }\n  };\n\n  /**\n   * Update the ad countdown\n   * @param {Boolean} start\n   */\n  pollCountdown = (start = false) => {\n    if (!start) {\n      clearInterval(this.countdownTimer);\n      this.elements.container.removeAttribute('data-badge-text');\n      return;\n    }\n\n    const update = () => {\n      const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n      const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n      this.elements.container.setAttribute('data-badge-text', label);\n    };\n\n    this.countdownTimer = setInterval(update, 100);\n  };\n\n  /**\n   * This method is called whenever the ads are ready inside the AdDisplayContainer\n   * @param {Event} event - adsManagerLoadedEvent\n   */\n  onAdsManagerLoaded = (event) => {\n    // Load could occur after a source change (race condition)\n    if (!this.enabled) {\n      return;\n    }\n\n    // Get the ads manager\n    const settings = new google.ima.AdsRenderingSettings();\n\n    // Tell the SDK to save and restore content video state on our behalf\n    settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n    settings.enablePreloading = true;\n\n    // The SDK is polling currentTime on the contentPlayback. And needs a duration\n    // so it can determine when to start the mid- and post-roll\n    this.manager = event.getAdsManager(this.player, settings);\n\n    // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n    this.cuePoints = this.manager.getCuePoints();\n\n    // Add listeners to the required events\n    // Advertisement error events\n    this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (error) => this.onAdError(error));\n\n    // Advertisement regular events\n    Object.keys(google.ima.AdEvent.Type).forEach((type) => {\n      this.manager.addEventListener(google.ima.AdEvent.Type[type], (e) => this.onAdEvent(e));\n    });\n\n    // Resolve our adsManager\n    this.trigger('loaded');\n  };\n\n  addCuePoints = () => {\n    // Add advertisement cue's within the time line if available\n    if (!is.empty(this.cuePoints)) {\n      this.cuePoints.forEach((cuePoint) => {\n        if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n          const seekElement = this.player.elements.progress;\n\n          if (is.element(seekElement)) {\n            const cuePercentage = (100 / this.player.duration) * cuePoint;\n            const cue = createElement('span', {\n              class: this.player.config.classNames.cues,\n            });\n\n            cue.style.left = `${cuePercentage.toString()}%`;\n            seekElement.appendChild(cue);\n          }\n        }\n      });\n    }\n  };\n\n  /**\n   * This is where all the event handling takes place. Retrieve the ad from the event. Some\n   * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n   * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n   * @param {Event} event\n   */\n  onAdEvent = (event) => {\n    const { container } = this.player.elements;\n    // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n    // don't have ad object associated\n    const ad = event.getAd();\n    const adData = event.getAdData();\n\n    // Proxy event\n    const dispatchEvent = (type) => {\n      triggerEvent.call(this.player, this.player.media, `ads${type.replace(/_/g, '').toLowerCase()}`);\n    };\n\n    // Bubble the event\n    dispatchEvent(event.type);\n\n    switch (event.type) {\n      case google.ima.AdEvent.Type.LOADED:\n        // This is the first event sent for an ad - it is possible to determine whether the\n        // ad is a video ad or an overlay\n        this.trigger('loaded');\n\n        // Start countdown\n        this.pollCountdown(true);\n\n        if (!ad.isLinear()) {\n          // Position AdDisplayContainer correctly for overlay\n          ad.width = container.offsetWidth;\n          ad.height = container.offsetHeight;\n        }\n\n        // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n        // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n\n        break;\n\n      case google.ima.AdEvent.Type.STARTED:\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        break;\n\n      case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n        // All ads for the current videos are done. We can now request new advertisements\n        // in case the video is re-played\n\n        // TODO: Example for what happens when a next video in a playlist would be loaded.\n        // So here we load a new video when all ads are done.\n        // Then we load new ads within a new adsManager. When the video\n        // Is started - after - the ads are loaded, then we get ads.\n        // You can also easily test cancelling and reloading by running\n        // player.ads.cancel() and player.ads.play from the console I guess.\n        // this.player.source = {\n        //     type: 'video',\n        //     title: 'View From A Blue Moon',\n        //     sources: [{\n        //         src:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n        // 'video/mp4', }], poster:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n        // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n        // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n        // };\n\n        // TODO: So there is still this thing where a video should only be allowed to start\n        // playing when the IMA SDK is ready or has failed\n\n        if (this.player.ended) {\n          this.loadAds();\n        } else {\n          // The SDK won't allow new ads to be called without receiving a contentComplete()\n          this.loader.contentComplete();\n        }\n\n        break;\n\n      case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n        // This event indicates the ad has started - the video player can adjust the UI,\n        // for example display a pause button and remaining time. Fired when content should\n        // be paused. This usually happens right before an ad is about to cover the content\n\n        this.pauseContent();\n\n        break;\n\n      case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n        // This event indicates the ad has finished - the video player can perform\n        // appropriate UI actions, such as removing the timer for remaining time detection.\n        // Fired when content should be resumed. This usually happens when an ad finishes\n        // or collapses\n\n        this.pollCountdown();\n\n        this.resumeContent();\n\n        break;\n\n      case google.ima.AdEvent.Type.LOG:\n        if (adData.adError) {\n          this.player.debug.warn(`Non-fatal ad error: ${adData.adError.getMessage()}`);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Any ad error handling comes through here\n   * @param {Event} event\n   */\n  onAdError = (event) => {\n    this.cancel();\n    this.player.debug.warn('Ads error', event);\n  };\n\n  /**\n   * Setup hooks for Plyr and window events. This ensures\n   * the mid- and post-roll launch at the correct time. And\n   * resize the advertisement when the player resizes\n   */\n  listeners = () => {\n    const { container } = this.player.elements;\n    let time;\n\n    this.player.on('canplay', () => {\n      this.addCuePoints();\n    });\n\n    this.player.on('ended', () => {\n      this.loader.contentComplete();\n    });\n\n    this.player.on('timeupdate', () => {\n      time = this.player.currentTime;\n    });\n\n    this.player.on('seeked', () => {\n      const seekedTime = this.player.currentTime;\n\n      if (is.empty(this.cuePoints)) {\n        return;\n      }\n\n      this.cuePoints.forEach((cuePoint, index) => {\n        if (time < cuePoint && cuePoint < seekedTime) {\n          this.manager.discardAdBreak();\n          this.cuePoints.splice(index, 1);\n        }\n      });\n    });\n\n    // Listen to the resizing of the window. And resize ad accordingly\n    // TODO: eventually implement ResizeObserver\n    window.addEventListener('resize', () => {\n      if (this.manager) {\n        this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n      }\n    });\n  };\n\n  /**\n   * Initialize the adsManager and start playing advertisements\n   */\n  play = () => {\n    const { container } = this.player.elements;\n\n    if (!this.managerPromise) {\n      this.resumeContent();\n    }\n\n    // Play the requested advertisement whenever the adsManager is ready\n    this.managerPromise\n      .then(() => {\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Initialize the container. Must be done via a user action on mobile devices\n        this.elements.displayContainer.initialize();\n\n        try {\n          if (!this.initialized) {\n            // Initialize the ads manager. Ad rules playlist will start at this time\n            this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n            // Call play to start showing the ad. Single video and overlay ads will\n            // start at this time; the call will be ignored for ad rules\n            this.manager.start();\n          }\n\n          this.initialized = true;\n        } catch (adError) {\n          // An error may be thrown if there was a problem with the\n          // VAST response\n          this.onAdError(adError);\n        }\n      })\n      .catch(() => {});\n  };\n\n  /**\n   * Resume our video\n   */\n  resumeContent = () => {\n    // Hide the advertisement container\n    this.elements.container.style.zIndex = '';\n\n    // Ad is stopped\n    this.playing = false;\n\n    // Play video\n    silencePromise(this.player.media.play());\n  };\n\n  /**\n   * Pause our video\n   */\n  pauseContent = () => {\n    // Show the advertisement container\n    this.elements.container.style.zIndex = 3;\n\n    // Ad is playing\n    this.playing = true;\n\n    // Pause our video.\n    this.player.media.pause();\n  };\n\n  /**\n   * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n   * allowed to call new ads based on google policies, as they interpret this as an accidental\n   * video requests. https://developers.google.com/interactive-\n   * media-ads/docs/sdks/android/faq#8\n   */\n  cancel = () => {\n    // Pause our video\n    if (this.initialized) {\n      this.resumeContent();\n    }\n\n    // Tell our instance that we're done for now\n    this.trigger('error');\n\n    // Re-create our adsManager\n    this.loadAds();\n  };\n\n  /**\n   * Re-create our adsManager\n   */\n  loadAds = () => {\n    // Tell our adsManager to go bye bye\n    this.managerPromise\n      .then(() => {\n        // Destroy our adsManager\n        if (this.manager) {\n          this.manager.destroy();\n        }\n\n        // Re-set our adsManager promises\n        this.managerPromise = new Promise((resolve) => {\n          this.on('loaded', resolve);\n          this.player.debug.log(this.manager);\n        });\n        // Now that the manager has been destroyed set it to also be un-initialized\n        this.initialized = false;\n\n        // Now request some new advertisements\n        this.requestAds();\n      })\n      .catch(() => {});\n  };\n\n  /**\n   * Handles callbacks after an ad event was invoked\n   * @param {String} event - Event type\n   * @param args\n   */\n  trigger = (event, ...args) => {\n    const handlers = this.events[event];\n\n    if (is.array(handlers)) {\n      handlers.forEach((handler) => {\n        if (is.function(handler)) {\n          handler.apply(this, args);\n        }\n      });\n    }\n  };\n\n  /**\n   * Add event listeners\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   * @return {Ads}\n   */\n  on = (event, callback) => {\n    if (!is.array(this.events[event])) {\n      this.events[event] = [];\n    }\n\n    this.events[event].push(callback);\n\n    return this;\n  };\n\n  /**\n   * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n   * The advertisement has 12 seconds to get its things together. We stop this timer when the\n   * advertisement is playing, or when a user action is required to start, then we clear the\n   * timer on ad ready\n   * @param {Number} time\n   * @param {String} from\n   */\n  startSafetyTimer = (time, from) => {\n    this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n    this.safetyTimer = setTimeout(() => {\n      this.cancel();\n      this.clearSafetyTimer('startSafetyTimer()');\n    }, time);\n  };\n\n  /**\n   * Clear our safety timer(s)\n   * @param {String} from\n   */\n  clearSafetyTimer = (from) => {\n    if (!is.nullOrUndefined(this.safetyTimer)) {\n      this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n      clearTimeout(this.safetyTimer);\n      this.safetyTimer = null;\n    }\n  };\n}\n\nexport default Ads;\n", "/**\n * Returns a number whose value is limited to the given range.\n *\n * Example: limit the output of this computation to between 0 and 255\n * (x * 255).clamp(0, 255)\n *\n * @param {Number} input\n * @param {Number} min The lower boundary of the output range\n * @param {Number} max The upper boundary of the output range\n * @returns A number within the bounds of min and max\n * @type Number\n */\nexport function clamp(input = 0, min = 0, max = 255) {\n  return Math.min(Math.max(input, min), max);\n}\n\nexport default { clamp };\n", "import { createElement } from '../utils/elements';\nimport { once } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport { clamp } from '../utils/numbers';\nimport { formatTime } from '../utils/time';\n\n// Arg: vttDataString example: \"WEBVTT\\n\\n1\\n00:00:05.000 --> 00:00:10.000\\n1080p-00001.jpg\"\nconst parseVtt = (vttDataString) => {\n  const processedList = [];\n  const frames = vttDataString.split(/\\r\\n\\r\\n|\\n\\n|\\r\\r/);\n\n  frames.forEach((frame) => {\n    const result = {};\n    const lines = frame.split(/\\r\\n|\\n|\\r/);\n\n    lines.forEach((line) => {\n      if (!is.number(result.startTime)) {\n        // The line with start and end times on it is the first line of interest\n        const matchTimes = line.match(\n          /([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/,\n        ); // Note that this currently ignores caption formatting directives that are optionally on the end of this line - fine for non-captions VTT\n\n        if (matchTimes) {\n          result.startTime =\n            Number(matchTimes[1] || 0) * 60 * 60 +\n            Number(matchTimes[2]) * 60 +\n            Number(matchTimes[3]) +\n            Number(`0.${matchTimes[4]}`);\n          result.endTime =\n            Number(matchTimes[6] || 0) * 60 * 60 +\n            Number(matchTimes[7]) * 60 +\n            Number(matchTimes[8]) +\n            Number(`0.${matchTimes[9]}`);\n        }\n      } else if (!is.empty(line.trim()) && is.empty(result.text)) {\n        // If we already have the startTime, then we're definitely up to the text line(s)\n        const lineSplit = line.trim().split('#xywh=');\n        [result.text] = lineSplit;\n\n        // If there's content in lineSplit[1], then we have sprites. If not, then it's just one frame per image\n        if (lineSplit[1]) {\n          [result.x, result.y, result.w, result.h] = lineSplit[1].split(',');\n        }\n      }\n    });\n\n    if (result.text) {\n      processedList.push(result);\n    }\n  });\n\n  return processedList;\n};\n\n/**\n * Preview thumbnails for seek hover and scrubbing\n * Seeking: Hover over the seek bar (desktop only): shows a small preview container above the seek bar\n * Scrubbing: Click and drag the seek bar (desktop and mobile): shows the preview image over the entire video, as if the video is scrubbing at very high speed\n *\n * Notes:\n * - Thumbs are set via JS settings on Plyr init, not HTML5 'track' property. Using the track property would be a bit gross, because it doesn't support custom 'kinds'. kind=metadata might be used for something else, and we want to allow multiple thumbnails tracks. Tracks must have a unique combination of 'kind' and 'label'. We would have to do something like kind=metadata,label=thumbnails1 / kind=metadata,label=thumbnails2. Square peg, round hole\n * - VTT info: the image URL is relative to the VTT, not the current document. But if the url starts with a slash, it will naturally be relative to the current domain. https://support.jwplayer.com/articles/how-to-add-preview-thumbnails\n * - This implementation uses multiple separate img elements. Other implementations use background-image on one element. This would be nice and simple, but Firefox and Safari have flickering issues with replacing backgrounds of larger images. It seems that YouTube perhaps only avoids this because they don't have the option for high-res previews (even the fullscreen ones, when mousedown/seeking). Images appear over the top of each other, and previous ones are discarded once the new ones have been rendered\n */\n\nconst fitRatio = (ratio, outer) => {\n  const targetRatio = outer.width / outer.height;\n  const result = {};\n  if (ratio > targetRatio) {\n    result.width = outer.width;\n    result.height = (1 / ratio) * outer.width;\n  } else {\n    result.height = outer.height;\n    result.width = ratio * outer.height;\n  }\n\n  return result;\n};\n\nclass PreviewThumbnails {\n  /**\n   * PreviewThumbnails constructor.\n   * @param {Plyr} player\n   * @return {PreviewThumbnails}\n   */\n  constructor(player) {\n    this.player = player;\n    this.thumbnails = [];\n    this.loaded = false;\n    this.lastMouseMoveTime = Date.now();\n    this.mouseDown = false;\n    this.loadedImages = [];\n\n    this.elements = {\n      thumb: {},\n      scrubbing: {},\n    };\n\n    this.load();\n  }\n\n  get enabled() {\n    return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled;\n  }\n\n  load = () => {\n    // Toggle the regular seek tooltip\n    if (this.player.elements.display.seekTooltip) {\n      this.player.elements.display.seekTooltip.hidden = this.enabled;\n    }\n\n    if (!this.enabled) return;\n\n    this.getThumbnails().then(() => {\n      if (!this.enabled) {\n        return;\n      }\n\n      // Render DOM elements\n      this.render();\n\n      // Check to see if thumb container size was specified manually in CSS\n      this.determineContainerAutoSizing();\n\n      // Set up listeners\n      this.listeners();\n\n      this.loaded = true;\n    });\n  };\n\n  // Download VTT files and parse them\n  getThumbnails = () => {\n    return new Promise((resolve) => {\n      const { src } = this.player.config.previewThumbnails;\n\n      if (is.empty(src)) {\n        throw new Error('Missing previewThumbnails.src config attribute');\n      }\n\n      // Resolve promise\n      const sortAndResolve = () => {\n        // Sort smallest to biggest (e.g., [120p, 480p, 1080p])\n        this.thumbnails.sort((x, y) => x.height - y.height);\n\n        this.player.debug.log('Preview thumbnails', this.thumbnails);\n\n        resolve();\n      };\n\n      // Via callback()\n      if (is.function(src)) {\n        src((thumbnails) => {\n          this.thumbnails = thumbnails;\n          sortAndResolve();\n        });\n      }\n      // VTT urls\n      else {\n        // If string, convert into single-element list\n        const urls = is.string(src) ? [src] : src;\n        // Loop through each src URL. Download and process the VTT file, storing the resulting data in this.thumbnails\n        const promises = urls.map((u) => this.getThumbnail(u));\n        // Resolve\n        Promise.all(promises).then(sortAndResolve);\n      }\n    });\n  };\n\n  // Process individual VTT file\n  getThumbnail = (url) => {\n    return new Promise((resolve) => {\n      fetch(url).then((response) => {\n        const thumbnail = {\n          frames: parseVtt(response),\n          height: null,\n          urlPrefix: '',\n        };\n\n        // If the URLs don't start with '/', then we need to set their relative path to be the location of the VTT file\n        // If the URLs do start with '/', then they obviously don't need a prefix, so it will remain blank\n        // If the thumbnail URLs start with with none of '/', 'http://' or 'https://', then we need to set their relative path to be the location of the VTT file\n        if (\n          !thumbnail.frames[0].text.startsWith('/') &&\n          !thumbnail.frames[0].text.startsWith('http://') &&\n          !thumbnail.frames[0].text.startsWith('https://')\n        ) {\n          thumbnail.urlPrefix = url.substring(0, url.lastIndexOf('/') + 1);\n        }\n\n        // Download the first frame, so that we can determine/set the height of this thumbnailsDef\n        const tempImage = new Image();\n\n        tempImage.onload = () => {\n          thumbnail.height = tempImage.naturalHeight;\n          thumbnail.width = tempImage.naturalWidth;\n\n          this.thumbnails.push(thumbnail);\n\n          resolve();\n        };\n\n        tempImage.src = thumbnail.urlPrefix + thumbnail.frames[0].text;\n      });\n    });\n  };\n\n  startMove = (event) => {\n    if (!this.loaded) return;\n\n    if (!is.event(event) || !['touchmove', 'mousemove'].includes(event.type)) return;\n\n    // Wait until media has a duration\n    if (!this.player.media.duration) return;\n\n    if (event.type === 'touchmove') {\n      // Calculate seek hover position as approx video seconds\n      this.seekTime = this.player.media.duration * (this.player.elements.inputs.seek.value / 100);\n    } else {\n      // Calculate seek hover position as approx video seconds\n      const clientRect = this.player.elements.progress.getBoundingClientRect();\n      const percentage = (100 / clientRect.width) * (event.pageX - clientRect.left);\n      this.seekTime = this.player.media.duration * (percentage / 100);\n\n      if (this.seekTime < 0) {\n        // The mousemove fires for 10+px out to the left\n        this.seekTime = 0;\n      }\n\n      if (this.seekTime > this.player.media.duration - 1) {\n        // Took 1 second off the duration for safety, because different players can disagree on the real duration of a video\n        this.seekTime = this.player.media.duration - 1;\n      }\n\n      this.mousePosX = event.pageX;\n\n      // Set time text inside image container\n      this.elements.thumb.time.innerText = formatTime(this.seekTime);\n\n      // Get marker point for time\n      const point = this.player.config.markers?.points?.find(({ time: t }) => t === Math.round(this.seekTime));\n\n      // Append the point label to the tooltip\n      if (point) {\n        // this.elements.thumb.time.innerText.concat('\\n');\n        this.elements.thumb.time.insertAdjacentHTML('afterbegin', `${point.label}<br>`);\n      }\n    }\n\n    // Download and show image\n    this.showImageAtCurrentTime();\n  };\n\n  endMove = () => {\n    this.toggleThumbContainer(false, true);\n  };\n\n  startScrubbing = (event) => {\n    // Only act on left mouse button (0), or touch device (event.button does not exist or is false)\n    if (is.nullOrUndefined(event.button) || event.button === false || event.button === 0) {\n      this.mouseDown = true;\n\n      // Wait until media has a duration\n      if (this.player.media.duration) {\n        this.toggleScrubbingContainer(true);\n        this.toggleThumbContainer(false, true);\n\n        // Download and show image\n        this.showImageAtCurrentTime();\n      }\n    }\n  };\n\n  endScrubbing = () => {\n    this.mouseDown = false;\n\n    // Hide scrubbing preview. But wait until the video has successfully seeked before hiding the scrubbing preview\n    if (Math.ceil(this.lastTime) === Math.ceil(this.player.media.currentTime)) {\n      // The video was already seeked/loaded at the chosen time - hide immediately\n      this.toggleScrubbingContainer(false);\n    } else {\n      // The video hasn't seeked yet. Wait for that\n      once.call(this.player, this.player.media, 'timeupdate', () => {\n        // Re-check mousedown - we might have already started scrubbing again\n        if (!this.mouseDown) {\n          this.toggleScrubbingContainer(false);\n        }\n      });\n    }\n  };\n\n  /**\n   * Setup hooks for Plyr and window events\n   */\n  listeners = () => {\n    // Hide thumbnail preview - on mouse click, mouse leave (in listeners.js for now), and video play/seek. All four are required, e.g., for buffering\n    this.player.on('play', () => {\n      this.toggleThumbContainer(false, true);\n    });\n\n    this.player.on('seeked', () => {\n      this.toggleThumbContainer(false);\n    });\n\n    this.player.on('timeupdate', () => {\n      this.lastTime = this.player.media.currentTime;\n    });\n  };\n\n  /**\n   * Create HTML elements for image containers\n   */\n  render = () => {\n    // Create HTML element: plyr__preview-thumbnail-container\n    this.elements.thumb.container = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.thumbContainer,\n    });\n\n    // Wrapper for the image for styling\n    this.elements.thumb.imageContainer = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.imageContainer,\n    });\n    this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);\n\n    // Create HTML element, parent+span: time text (e.g., 01:32:00)\n    const timeContainer = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.timeContainer,\n    });\n\n    this.elements.thumb.time = createElement('span', {}, '00:00');\n    timeContainer.appendChild(this.elements.thumb.time);\n\n    this.elements.thumb.imageContainer.appendChild(timeContainer);\n\n    // Inject the whole thumb\n    if (is.element(this.player.elements.progress)) {\n      this.player.elements.progress.appendChild(this.elements.thumb.container);\n    }\n\n    // Create HTML element: plyr__preview-scrubbing-container\n    this.elements.scrubbing.container = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.scrubbingContainer,\n    });\n\n    this.player.elements.wrapper.appendChild(this.elements.scrubbing.container);\n  };\n\n  destroy = () => {\n    if (this.elements.thumb.container) {\n      this.elements.thumb.container.remove();\n    }\n    if (this.elements.scrubbing.container) {\n      this.elements.scrubbing.container.remove();\n    }\n  };\n\n  showImageAtCurrentTime = () => {\n    if (this.mouseDown) {\n      this.setScrubbingContainerSize();\n    } else {\n      this.setThumbContainerSizeAndPos();\n    }\n\n    // Find the desired thumbnail index\n    // TODO: Handle a video longer than the thumbs where thumbNum is null\n    const thumbNum = this.thumbnails[0].frames.findIndex(\n      (frame) => this.seekTime >= frame.startTime && this.seekTime <= frame.endTime,\n    );\n    const hasThumb = thumbNum >= 0;\n    let qualityIndex = 0;\n\n    // Show the thumb container if we're not scrubbing\n    if (!this.mouseDown) {\n      this.toggleThumbContainer(hasThumb);\n    }\n\n    // No matching thumb found\n    if (!hasThumb) {\n      return;\n    }\n\n    // Check to see if we've already downloaded higher quality versions of this image\n    this.thumbnails.forEach((thumbnail, index) => {\n      if (this.loadedImages.includes(thumbnail.frames[thumbNum].text)) {\n        qualityIndex = index;\n      }\n    });\n\n    // Only proceed if either thumb num or thumbfilename has changed\n    if (thumbNum !== this.showingThumb) {\n      this.showingThumb = thumbNum;\n      this.loadImage(qualityIndex);\n    }\n  };\n\n  // Show the image that's currently specified in this.showingThumb\n  loadImage = (qualityIndex = 0) => {\n    const thumbNum = this.showingThumb;\n    const thumbnail = this.thumbnails[qualityIndex];\n    const { urlPrefix } = thumbnail;\n    const frame = thumbnail.frames[thumbNum];\n    const thumbFilename = thumbnail.frames[thumbNum].text;\n    const thumbUrl = urlPrefix + thumbFilename;\n\n    if (!this.currentImageElement || this.currentImageElement.dataset.filename !== thumbFilename) {\n      // If we're already loading a previous image, remove its onload handler - we don't want it to load after this one\n      // Only do this if not using sprites. Without sprites we really want to show as many images as possible, as a best-effort\n      if (this.loadingImage && this.usingSprites) {\n        this.loadingImage.onload = null;\n      }\n\n      // We're building and adding a new image. In other implementations of similar functionality (YouTube), background image\n      // is instead used. But this causes issues with larger images in Firefox and Safari - switching between background\n      // images causes a flicker. Putting a new image over the top does not\n      const previewImage = new Image();\n      previewImage.src = thumbUrl;\n      previewImage.dataset.index = thumbNum;\n      previewImage.dataset.filename = thumbFilename;\n      this.showingThumbFilename = thumbFilename;\n\n      this.player.debug.log(`Loading image: ${thumbUrl}`);\n\n      // For some reason, passing the named function directly causes it to execute immediately. So I've wrapped it in an anonymous function...\n      previewImage.onload = () => this.showImage(previewImage, frame, qualityIndex, thumbNum, thumbFilename, true);\n      this.loadingImage = previewImage;\n      this.removeOldImages(previewImage);\n    } else {\n      // Update the existing image\n      this.showImage(this.currentImageElement, frame, qualityIndex, thumbNum, thumbFilename, false);\n      this.currentImageElement.dataset.index = thumbNum;\n      this.removeOldImages(this.currentImageElement);\n    }\n  };\n\n  showImage = (previewImage, frame, qualityIndex, thumbNum, thumbFilename, newImage = true) => {\n    this.player.debug.log(\n      `Showing thumb: ${thumbFilename}. num: ${thumbNum}. qual: ${qualityIndex}. newimg: ${newImage}`,\n    );\n    this.setImageSizeAndOffset(previewImage, frame);\n\n    if (newImage) {\n      this.currentImageContainer.appendChild(previewImage);\n      this.currentImageElement = previewImage;\n\n      if (!this.loadedImages.includes(thumbFilename)) {\n        this.loadedImages.push(thumbFilename);\n      }\n    }\n\n    // Preload images before and after the current one\n    // Show higher quality of the same frame\n    // Each step here has a short time delay, and only continues if still hovering/seeking the same spot. This is to protect slow connections from overloading\n    this.preloadNearby(thumbNum, true)\n      .then(this.preloadNearby(thumbNum, false))\n      .then(this.getHigherQuality(qualityIndex, previewImage, frame, thumbFilename));\n  };\n\n  // Remove all preview images that aren't the designated current image\n  removeOldImages = (currentImage) => {\n    // Get a list of all images, convert it from a DOM list to an array\n    Array.from(this.currentImageContainer.children).forEach((image) => {\n      if (image.tagName.toLowerCase() !== 'img') {\n        return;\n      }\n\n      const removeDelay = this.usingSprites ? 500 : 1000;\n\n      if (image.dataset.index !== currentImage.dataset.index && !image.dataset.deleting) {\n        // Wait 200ms, as the new image can take some time to show on certain browsers (even though it was downloaded before showing). This will prevent flicker, and show some generosity towards slower clients\n        // First set attribute 'deleting' to prevent multi-handling of this on repeat firing of this function\n        // eslint-disable-next-line no-param-reassign\n        image.dataset.deleting = true;\n\n        // This has to be set before the timeout - to prevent issues switching between hover and scrub\n        const { currentImageContainer } = this;\n\n        setTimeout(() => {\n          currentImageContainer.removeChild(image);\n          this.player.debug.log(`Removing thumb: ${image.dataset.filename}`);\n        }, removeDelay);\n      }\n    });\n  };\n\n  // Preload images before and after the current one. Only if the user is still hovering/seeking the same frame\n  // This will only preload the lowest quality\n  preloadNearby = (thumbNum, forward = true) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const oldThumbFilename = this.thumbnails[0].frames[thumbNum].text;\n\n        if (this.showingThumbFilename === oldThumbFilename) {\n          // Find the nearest thumbs with different filenames. Sometimes it'll be the next index, but in the case of sprites, it might be 100+ away\n          let thumbnailsClone;\n          if (forward) {\n            thumbnailsClone = this.thumbnails[0].frames.slice(thumbNum);\n          } else {\n            thumbnailsClone = this.thumbnails[0].frames.slice(0, thumbNum).reverse();\n          }\n\n          let foundOne = false;\n\n          thumbnailsClone.forEach((frame) => {\n            const newThumbFilename = frame.text;\n\n            if (newThumbFilename !== oldThumbFilename) {\n              // Found one with a different filename. Make sure it hasn't already been loaded on this page visit\n              if (!this.loadedImages.includes(newThumbFilename)) {\n                foundOne = true;\n                this.player.debug.log(`Preloading thumb filename: ${newThumbFilename}`);\n\n                const { urlPrefix } = this.thumbnails[0];\n                const thumbURL = urlPrefix + newThumbFilename;\n                const previewImage = new Image();\n                previewImage.src = thumbURL;\n                previewImage.onload = () => {\n                  this.player.debug.log(`Preloaded thumb filename: ${newThumbFilename}`);\n                  if (!this.loadedImages.includes(newThumbFilename)) this.loadedImages.push(newThumbFilename);\n\n                  // We don't resolve until the thumb is loaded\n                  resolve();\n                };\n              }\n            }\n          });\n\n          // If there are none to preload then we want to resolve immediately\n          if (!foundOne) {\n            resolve();\n          }\n        }\n      }, 300);\n    });\n  };\n\n  // If user has been hovering current image for half a second, look for a higher quality one\n  getHigherQuality = (currentQualityIndex, previewImage, frame, thumbFilename) => {\n    if (currentQualityIndex < this.thumbnails.length - 1) {\n      // Only use the higher quality version if it's going to look any better - if the current thumb is of a lower pixel density than the thumbnail container\n      let previewImageHeight = previewImage.naturalHeight;\n\n      if (this.usingSprites) {\n        previewImageHeight = frame.h;\n      }\n\n      if (previewImageHeight < this.thumbContainerHeight) {\n        // Recurse back to the loadImage function - show a higher quality one, but only if the viewer is on this frame for a while\n        setTimeout(() => {\n          // Make sure the mouse hasn't already moved on and started hovering at another image\n          if (this.showingThumbFilename === thumbFilename) {\n            this.player.debug.log(`Showing higher quality thumb for: ${thumbFilename}`);\n            this.loadImage(currentQualityIndex + 1);\n          }\n        }, 300);\n      }\n    }\n  };\n\n  get currentImageContainer() {\n    return this.mouseDown ? this.elements.scrubbing.container : this.elements.thumb.imageContainer;\n  }\n\n  get usingSprites() {\n    return Object.keys(this.thumbnails[0].frames[0]).includes('w');\n  }\n\n  get thumbAspectRatio() {\n    if (this.usingSprites) {\n      return this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h;\n    }\n\n    return this.thumbnails[0].width / this.thumbnails[0].height;\n  }\n\n  get thumbContainerHeight() {\n    if (this.mouseDown) {\n      const { height } = fitRatio(this.thumbAspectRatio, {\n        width: this.player.media.clientWidth,\n        height: this.player.media.clientHeight,\n      });\n      return height;\n    }\n\n    // If css is used this needs to return the css height for sprites to work (see setImageSizeAndOffset)\n    if (this.sizeSpecifiedInCSS) {\n      return this.elements.thumb.imageContainer.clientHeight;\n    }\n\n    return Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4);\n  }\n\n  get currentImageElement() {\n    return this.mouseDown ? this.currentScrubbingImageElement : this.currentThumbnailImageElement;\n  }\n\n  set currentImageElement(element) {\n    if (this.mouseDown) {\n      this.currentScrubbingImageElement = element;\n    } else {\n      this.currentThumbnailImageElement = element;\n    }\n  }\n\n  toggleThumbContainer = (toggle = false, clearShowing = false) => {\n    const className = this.player.config.classNames.previewThumbnails.thumbContainerShown;\n    this.elements.thumb.container.classList.toggle(className, toggle);\n\n    if (!toggle && clearShowing) {\n      this.showingThumb = null;\n      this.showingThumbFilename = null;\n    }\n  };\n\n  toggleScrubbingContainer = (toggle = false) => {\n    const className = this.player.config.classNames.previewThumbnails.scrubbingContainerShown;\n    this.elements.scrubbing.container.classList.toggle(className, toggle);\n\n    if (!toggle) {\n      this.showingThumb = null;\n      this.showingThumbFilename = null;\n    }\n  };\n\n  determineContainerAutoSizing = () => {\n    if (this.elements.thumb.imageContainer.clientHeight > 20 || this.elements.thumb.imageContainer.clientWidth > 20) {\n      // This will prevent auto sizing in this.setThumbContainerSizeAndPos()\n      this.sizeSpecifiedInCSS = true;\n    }\n  };\n\n  // Set the size to be about a quarter of the size of video. Unless option dynamicSize === false, in which case it needs to be set in CSS\n  setThumbContainerSizeAndPos = () => {\n    const { imageContainer } = this.elements.thumb;\n\n    if (!this.sizeSpecifiedInCSS) {\n      const thumbWidth = Math.floor(this.thumbContainerHeight * this.thumbAspectRatio);\n      imageContainer.style.height = `${this.thumbContainerHeight}px`;\n      imageContainer.style.width = `${thumbWidth}px`;\n    } else if (imageContainer.clientHeight > 20 && imageContainer.clientWidth < 20) {\n      const thumbWidth = Math.floor(imageContainer.clientHeight * this.thumbAspectRatio);\n      imageContainer.style.width = `${thumbWidth}px`;\n    } else if (imageContainer.clientHeight < 20 && imageContainer.clientWidth > 20) {\n      const thumbHeight = Math.floor(imageContainer.clientWidth / this.thumbAspectRatio);\n      imageContainer.style.height = `${thumbHeight}px`;\n    }\n\n    this.setThumbContainerPos();\n  };\n\n  setThumbContainerPos = () => {\n    const scrubberRect = this.player.elements.progress.getBoundingClientRect();\n    const containerRect = this.player.elements.container.getBoundingClientRect();\n    const { container } = this.elements.thumb;\n    // Find the lowest and highest desired left-position, so we don't slide out the side of the video container\n    const min = containerRect.left - scrubberRect.left + 10;\n    const max = containerRect.right - scrubberRect.left - container.clientWidth - 10;\n    // Set preview container position to: mousepos, minus seekbar.left, minus half of previewContainer.clientWidth\n    const position = this.mousePosX - scrubberRect.left - container.clientWidth / 2;\n    const clamped = clamp(position, min, max);\n\n    // Move the popover position\n    container.style.left = `${clamped}px`;\n\n    // The arrow can follow the cursor\n    container.style.setProperty('--preview-arrow-offset', `${position - clamped}px`);\n  };\n\n  // Can't use 100% width, in case the video is a different aspect ratio to the video container\n  setScrubbingContainerSize = () => {\n    const { width, height } = fitRatio(this.thumbAspectRatio, {\n      width: this.player.media.clientWidth,\n      height: this.player.media.clientHeight,\n    });\n    this.elements.scrubbing.container.style.width = `${width}px`;\n    this.elements.scrubbing.container.style.height = `${height}px`;\n  };\n\n  // Sprites need to be offset to the correct location\n  setImageSizeAndOffset = (previewImage, frame) => {\n    if (!this.usingSprites) return;\n\n    // Find difference between height and preview container height\n    const multiplier = this.thumbContainerHeight / frame.h;\n\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.height = `${previewImage.naturalHeight * multiplier}px`;\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.width = `${previewImage.naturalWidth * multiplier}px`;\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.left = `-${frame.x * multiplier}px`;\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.top = `-${frame.y * multiplier}px`;\n  };\n}\n\nexport default PreviewThumbnails;\n", "// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport PreviewThumbnails from './plugins/preview-thumbnails';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n  // Add elements to HTML5 media (source, tracks, etc)\n  insertElements(type, attributes) {\n    if (is.string(attributes)) {\n      insertElement(type, this.media, {\n        src: attributes,\n      });\n    } else if (is.array(attributes)) {\n      attributes.forEach((attribute) => {\n        insertElement(type, this.media, attribute);\n      });\n    }\n  },\n\n  // Update source\n  // Sources are not checked for support so be careful\n  change(input) {\n    if (!getDeep(input, 'sources.length')) {\n      this.debug.warn('Invalid source format');\n      return;\n    }\n\n    // Cancel current network requests\n    html5.cancelRequests.call(this);\n\n    // Destroy instance and re-setup\n    this.destroy.call(\n      this,\n      () => {\n        // Reset quality options\n        this.options.quality = [];\n\n        // Remove elements\n        removeElement(this.media);\n        this.media = null;\n\n        // Reset class name\n        if (is.element(this.elements.container)) {\n          this.elements.container.removeAttribute('class');\n        }\n\n        // Set the type and provider\n        const { sources, type } = input;\n        const [{ provider = providers.html5, src }] = sources;\n        const tagName = provider === 'html5' ? type : 'div';\n        const attributes = provider === 'html5' ? {} : { src };\n\n        Object.assign(this, {\n          provider,\n          type,\n          // Check for support\n          supported: support.check(type, provider, this.config.playsinline),\n          // Create new element\n          media: createElement(tagName, attributes),\n        });\n\n        // Inject the new element\n        this.elements.container.appendChild(this.media);\n\n        // Autoplay the new source?\n        if (is.boolean(input.autoplay)) {\n          this.config.autoplay = input.autoplay;\n        }\n\n        // Set attributes for audio and video\n        if (this.isHTML5) {\n          if (this.config.crossorigin) {\n            this.media.setAttribute('crossorigin', '');\n          }\n          if (this.config.autoplay) {\n            this.media.setAttribute('autoplay', '');\n          }\n          if (!is.empty(input.poster)) {\n            this.poster = input.poster;\n          }\n          if (this.config.loop.active) {\n            this.media.setAttribute('loop', '');\n          }\n          if (this.config.muted) {\n            this.media.setAttribute('muted', '');\n          }\n          if (this.config.playsinline) {\n            this.media.setAttribute('playsinline', '');\n          }\n        }\n\n        // Restore class hook\n        ui.addStyleHook.call(this);\n\n        // Set new sources for html5\n        if (this.isHTML5) {\n          source.insertElements.call(this, 'source', sources);\n        }\n\n        // Set video title\n        this.config.title = input.title;\n\n        // Set up from scratch\n        media.setup.call(this);\n\n        // HTML5 stuff\n        if (this.isHTML5) {\n          // Setup captions\n          if (Object.keys(input).includes('tracks')) {\n            source.insertElements.call(this, 'track', input.tracks);\n          }\n        }\n\n        // If HTML5 or embed but not fully supported, setupInterface and call ready now\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n          // Setup interface\n          ui.build.call(this);\n        }\n\n        // Load HTML5 sources\n        if (this.isHTML5) {\n          this.media.load();\n        }\n\n        // Update previewThumbnails config & reload plugin\n        if (!is.empty(input.previewThumbnails)) {\n          Object.assign(this.config.previewThumbnails, input.previewThumbnails);\n\n          // Cleanup previewThumbnails plugin if it was loaded\n          if (this.previewThumbnails && this.previewThumbnails.loaded) {\n            this.previewThumbnails.destroy();\n            this.previewThumbnails = null;\n          }\n\n          // Create new instance if it is still enabled\n          if (this.config.previewThumbnails.enabled) {\n            this.previewThumbnails = new PreviewThumbnails(this);\n          }\n        }\n\n        // Update the fullscreen support\n        this.fullscreen.update();\n      },\n      true,\n    );\n  },\n};\n\nexport default source;\n", "// ==========================================================================\n// Plyr\n// plyr.js v3.7.8\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { pip } from './config/states';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport html5 from './html5';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport PreviewThumbnails from './plugins/preview-thumbnails';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/load-sprite';\nimport { clamp } from './utils/numbers';\nimport { cloneDeep, extend } from './utils/objects';\nimport { silencePromise } from './utils/promise';\nimport { getAspectRatio, reduceAspectRatio, setAspectRatio, validateAspectRatio } from './utils/style';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n  constructor(target, options) {\n    this.timers = {};\n\n    // State\n    this.ready = false;\n    this.loading = false;\n    this.failed = false;\n\n    // Touch device\n    this.touch = support.touch;\n\n    // Set the media element\n    this.media = target;\n\n    // String selector passed\n    if (is.string(this.media)) {\n      this.media = document.querySelectorAll(this.media);\n    }\n\n    // jQuery, NodeList or Array passed, use first element\n    if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n      // eslint-disable-next-line\n      this.media = this.media[0];\n    }\n\n    // Set config\n    this.config = extend(\n      {},\n      defaults,\n      Plyr.defaults,\n      options || {},\n      (() => {\n        try {\n          return JSON.parse(this.media.getAttribute('data-plyr-config'));\n        } catch (_) {\n          return {};\n        }\n      })(),\n    );\n\n    // Elements cache\n    this.elements = {\n      container: null,\n      fullscreen: null,\n      captions: null,\n      buttons: {},\n      display: {},\n      progress: {},\n      inputs: {},\n      settings: {\n        popup: null,\n        menu: null,\n        panels: {},\n        buttons: {},\n      },\n    };\n\n    // Captions\n    this.captions = {\n      active: null,\n      currentTrack: -1,\n      meta: new WeakMap(),\n    };\n\n    // Fullscreen\n    this.fullscreen = {\n      active: false,\n    };\n\n    // Options\n    this.options = {\n      speed: [],\n      quality: [],\n    };\n\n    // Debugging\n    // TODO: move to globals\n    this.debug = new Console(this.config.debug);\n\n    // Log config options and support\n    this.debug.log('Config', this.config);\n    this.debug.log('Support', support);\n\n    // We need an element to setup\n    if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n      this.debug.error('Setup failed: no suitable element passed');\n      return;\n    }\n\n    // Bail if the element is initialized\n    if (this.media.plyr) {\n      this.debug.warn('Target already setup');\n      return;\n    }\n\n    // Bail if not enabled\n    if (!this.config.enabled) {\n      this.debug.error('Setup failed: disabled by config');\n      return;\n    }\n\n    // Bail if disabled or no basic support\n    // You may want to disable certain UAs etc\n    if (!support.check().api) {\n      this.debug.error('Setup failed: no support');\n      return;\n    }\n\n    // Cache original element state for .destroy()\n    const clone = this.media.cloneNode(true);\n    clone.autoplay = false;\n    this.elements.original = clone;\n\n    // Set media type based on tag or data attribute\n    // Supported: video, audio, vimeo, youtube\n    const type = this.media.tagName.toLowerCase();\n    // Embed properties\n    let iframe = null;\n    let url = null;\n\n    // Different setup based on type\n    switch (type) {\n      case 'div':\n        // Find the frame\n        iframe = this.media.querySelector('iframe');\n\n        // <iframe> type\n        if (is.element(iframe)) {\n          // Detect provider\n          url = parseUrl(iframe.getAttribute('src'));\n          this.provider = getProviderByUrl(url.toString());\n\n          // Rework elements\n          this.elements.container = this.media;\n          this.media = iframe;\n\n          // Reset classname\n          this.elements.container.className = '';\n\n          // Get attributes from URL and set config\n          if (url.search.length) {\n            const truthy = ['1', 'true'];\n\n            if (truthy.includes(url.searchParams.get('autoplay'))) {\n              this.config.autoplay = true;\n            }\n            if (truthy.includes(url.searchParams.get('loop'))) {\n              this.config.loop.active = true;\n            }\n\n            // TODO: replace fullscreen.iosNative with this playsinline config option\n            // YouTube requires the playsinline in the URL\n            if (this.isYouTube) {\n              this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n              this.config.youtube.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n            } else {\n              this.config.playsinline = true;\n            }\n          }\n        } else {\n          // <div> with attributes\n          this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n          // Remove attribute\n          this.media.removeAttribute(this.config.attributes.embed.provider);\n        }\n\n        // Unsupported or missing provider\n        if (is.empty(this.provider) || !Object.values(providers).includes(this.provider)) {\n          this.debug.error('Setup failed: Invalid provider');\n          return;\n        }\n\n        // Audio will come later for external providers\n        this.type = types.video;\n\n        break;\n\n      case 'video':\n      case 'audio':\n        this.type = type;\n        this.provider = providers.html5;\n\n        // Get config from attributes\n        if (this.media.hasAttribute('crossorigin')) {\n          this.config.crossorigin = true;\n        }\n        if (this.media.hasAttribute('autoplay')) {\n          this.config.autoplay = true;\n        }\n        if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n          this.config.playsinline = true;\n        }\n        if (this.media.hasAttribute('muted')) {\n          this.config.muted = true;\n        }\n        if (this.media.hasAttribute('loop')) {\n          this.config.loop.active = true;\n        }\n\n        break;\n\n      default:\n        this.debug.error('Setup failed: unsupported type');\n        return;\n    }\n\n    // Check for support again but with type\n    this.supported = support.check(this.type, this.provider);\n\n    // If no support for even API, bail\n    if (!this.supported.api) {\n      this.debug.error('Setup failed: no support');\n      return;\n    }\n\n    this.eventListeners = [];\n\n    // Create listeners\n    this.listeners = new Listeners(this);\n\n    // Setup local storage for user settings\n    this.storage = new Storage(this);\n\n    // Store reference\n    this.media.plyr = this;\n\n    // Wrap media\n    if (!is.element(this.elements.container)) {\n      this.elements.container = createElement('div');\n      wrap(this.media, this.elements.container);\n    }\n\n    // Migrate custom properties from media to container (so they work 😉)\n    ui.migrateStyles.call(this);\n\n    // Add style hook\n    ui.addStyleHook.call(this);\n\n    // Setup media\n    media.setup.call(this);\n\n    // Listen for events if debugging\n    if (this.config.debug) {\n      on.call(this, this.elements.container, this.config.events.join(' '), (event) => {\n        this.debug.log(`event: ${event.type}`);\n      });\n    }\n\n    // Setup fullscreen\n    this.fullscreen = new Fullscreen(this);\n\n    // Setup interface\n    // If embed but not fully supported, build interface now to avoid flash of controls\n    if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n      ui.build.call(this);\n    }\n\n    // Container listeners\n    this.listeners.container();\n\n    // Global listeners\n    this.listeners.global();\n\n    // Setup ads if provided\n    if (this.config.ads.enabled) {\n      this.ads = new Ads(this);\n    }\n\n    // Autoplay if required\n    if (this.isHTML5 && this.config.autoplay) {\n      this.once('canplay', () => silencePromise(this.play()));\n    }\n\n    // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n    this.lastSeekTime = 0;\n\n    // Setup preview thumbnails if enabled\n    if (this.config.previewThumbnails.enabled) {\n      this.previewThumbnails = new PreviewThumbnails(this);\n    }\n  }\n\n  // ---------------------------------------\n  // API\n  // ---------------------------------------\n\n  /**\n   * Types and provider helpers\n   */\n  get isHTML5() {\n    return this.provider === providers.html5;\n  }\n\n  get isEmbed() {\n    return this.isYouTube || this.isVimeo;\n  }\n\n  get isYouTube() {\n    return this.provider === providers.youtube;\n  }\n\n  get isVimeo() {\n    return this.provider === providers.vimeo;\n  }\n\n  get isVideo() {\n    return this.type === types.video;\n  }\n\n  get isAudio() {\n    return this.type === types.audio;\n  }\n\n  /**\n   * Play the media, or play the advertisement (if they are not blocked)\n   */\n  play = () => {\n    if (!is.function(this.media.play)) {\n      return null;\n    }\n\n    // Intecept play with ads\n    if (this.ads && this.ads.enabled) {\n      this.ads.managerPromise.then(() => this.ads.play()).catch(() => silencePromise(this.media.play()));\n    }\n\n    // Return the promise (for HTML5)\n    return this.media.play();\n  };\n\n  /**\n   * Pause the media\n   */\n  pause = () => {\n    if (!this.playing || !is.function(this.media.pause)) {\n      return null;\n    }\n\n    return this.media.pause();\n  };\n\n  /**\n   * Get playing state\n   */\n  get playing() {\n    return Boolean(this.ready && !this.paused && !this.ended);\n  }\n\n  /**\n   * Get paused state\n   */\n  get paused() {\n    return Boolean(this.media.paused);\n  }\n\n  /**\n   * Get stopped state\n   */\n  get stopped() {\n    return Boolean(this.paused && this.currentTime === 0);\n  }\n\n  /**\n   * Get ended state\n   */\n  get ended() {\n    return Boolean(this.media.ended);\n  }\n\n  /**\n   * Toggle playback based on current status\n   * @param {Boolean} input\n   */\n  togglePlay = (input) => {\n    // Toggle based on current state if nothing passed\n    const toggle = is.boolean(input) ? input : !this.playing;\n\n    if (toggle) {\n      return this.play();\n    }\n\n    return this.pause();\n  };\n\n  /**\n   * Stop playback\n   */\n  stop = () => {\n    if (this.isHTML5) {\n      this.pause();\n      this.restart();\n    } else if (is.function(this.media.stop)) {\n      this.media.stop();\n    }\n  };\n\n  /**\n   * Restart playback\n   */\n  restart = () => {\n    this.currentTime = 0;\n  };\n\n  /**\n   * Rewind\n   * @param {Number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n   */\n  rewind = (seekTime) => {\n    this.currentTime -= is.number(seekTime) ? seekTime : this.config.seekTime;\n  };\n\n  /**\n   * Fast forward\n   * @param {Number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n   */\n  forward = (seekTime) => {\n    this.currentTime += is.number(seekTime) ? seekTime : this.config.seekTime;\n  };\n\n  /**\n   * Seek to a time\n   * @param {Number} input - where to seek to in seconds. Defaults to 0 (the start)\n   */\n  set currentTime(input) {\n    // Bail if media duration isn't available yet\n    if (!this.duration) {\n      return;\n    }\n\n    // Validate input\n    const inputIsValid = is.number(input) && input > 0;\n\n    // Set\n    this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n    // Logging\n    this.debug.log(`Seeking to ${this.currentTime} seconds`);\n  }\n\n  /**\n   * Get current time\n   */\n  get currentTime() {\n    return Number(this.media.currentTime);\n  }\n\n  /**\n   * Get buffered\n   */\n  get buffered() {\n    const { buffered } = this.media;\n\n    // YouTube / Vimeo return a float between 0-1\n    if (is.number(buffered)) {\n      return buffered;\n    }\n\n    // HTML5\n    // TODO: Handle buffered chunks of the media\n    // (i.e. seek to another section buffers only that section)\n    if (buffered && buffered.length && this.duration > 0) {\n      return buffered.end(0) / this.duration;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Get seeking status\n   */\n  get seeking() {\n    return Boolean(this.media.seeking);\n  }\n\n  /**\n   * Get the duration of the current media\n   */\n  get duration() {\n    // Faux duration set via config\n    const fauxDuration = parseFloat(this.config.duration);\n    // Media duration can be NaN or Infinity before the media has loaded\n    const realDuration = (this.media || {}).duration;\n    const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n    // If config duration is funky, use regular duration\n    return fauxDuration || duration;\n  }\n\n  /**\n   * Set the player volume\n   * @param {Number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n   */\n  set volume(value) {\n    let volume = value;\n    const max = 1;\n    const min = 0;\n\n    if (is.string(volume)) {\n      volume = Number(volume);\n    }\n\n    // Load volume from storage if no value specified\n    if (!is.number(volume)) {\n      volume = this.storage.get('volume');\n    }\n\n    // Use config if all else fails\n    if (!is.number(volume)) {\n      ({ volume } = this.config);\n    }\n\n    // Maximum is volumeMax\n    if (volume > max) {\n      volume = max;\n    }\n    // Minimum is volumeMin\n    if (volume < min) {\n      volume = min;\n    }\n\n    // Update config\n    this.config.volume = volume;\n\n    // Set the player volume\n    this.media.volume = volume;\n\n    // If muted, and we're increasing volume manually, reset muted state\n    if (!is.empty(value) && this.muted && volume > 0) {\n      this.muted = false;\n    }\n  }\n\n  /**\n   * Get the current player volume\n   */\n  get volume() {\n    return Number(this.media.volume);\n  }\n\n  /**\n   * Increase volume\n   * @param {Boolean} step - How much to decrease by (between 0 and 1)\n   */\n  increaseVolume = (step) => {\n    const volume = this.media.muted ? 0 : this.volume;\n    this.volume = volume + (is.number(step) ? step : 0);\n  };\n\n  /**\n   * Decrease volume\n   * @param {Boolean} step - How much to decrease by (between 0 and 1)\n   */\n  decreaseVolume = (step) => {\n    this.increaseVolume(-step);\n  };\n\n  /**\n   * Set muted state\n   * @param {Boolean} mute\n   */\n  set muted(mute) {\n    let toggle = mute;\n\n    // Load muted state from storage\n    if (!is.boolean(toggle)) {\n      toggle = this.storage.get('muted');\n    }\n\n    // Use config if all else fails\n    if (!is.boolean(toggle)) {\n      toggle = this.config.muted;\n    }\n\n    // Update config\n    this.config.muted = toggle;\n\n    // Set mute on the player\n    this.media.muted = toggle;\n  }\n\n  /**\n   * Get current muted state\n   */\n  get muted() {\n    return Boolean(this.media.muted);\n  }\n\n  /**\n   * Check if the media has audio\n   */\n  get hasAudio() {\n    // Assume yes for all non HTML5 (as we can't tell...)\n    if (!this.isHTML5) {\n      return true;\n    }\n\n    if (this.isAudio) {\n      return true;\n    }\n\n    // Get audio tracks\n    return (\n      Boolean(this.media.mozHasAudio) ||\n      Boolean(this.media.webkitAudioDecodedByteCount) ||\n      Boolean(this.media.audioTracks && this.media.audioTracks.length)\n    );\n  }\n\n  /**\n   * Set playback speed\n   * @param {Number} input - the speed of playback (0.5-2.0)\n   */\n  set speed(input) {\n    let speed = null;\n\n    if (is.number(input)) {\n      speed = input;\n    }\n\n    if (!is.number(speed)) {\n      speed = this.storage.get('speed');\n    }\n\n    if (!is.number(speed)) {\n      speed = this.config.speed.selected;\n    }\n\n    // Clamp to min/max\n    const { minimumSpeed: min, maximumSpeed: max } = this;\n    speed = clamp(speed, min, max);\n\n    // Update config\n    this.config.speed.selected = speed;\n\n    // Set media speed\n    setTimeout(() => {\n      if (this.media) {\n        this.media.playbackRate = speed;\n      }\n    }, 0);\n  }\n\n  /**\n   * Get current playback speed\n   */\n  get speed() {\n    return Number(this.media.playbackRate);\n  }\n\n  /**\n   * Get the minimum allowed speed\n   */\n  get minimumSpeed() {\n    if (this.isYouTube) {\n      // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n      return Math.min(...this.options.speed);\n    }\n\n    if (this.isVimeo) {\n      // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n      return 0.5;\n    }\n\n    // https://stackoverflow.com/a/32320020/1191319\n    return 0.0625;\n  }\n\n  /**\n   * Get the maximum allowed speed\n   */\n  get maximumSpeed() {\n    if (this.isYouTube) {\n      // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n      return Math.max(...this.options.speed);\n    }\n\n    if (this.isVimeo) {\n      // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n      return 2;\n    }\n\n    // https://stackoverflow.com/a/32320020/1191319\n    return 16;\n  }\n\n  /**\n   * Set playback quality\n   * Currently HTML5 & YouTube only\n   * @param {Number} input - Quality level\n   */\n  set quality(input) {\n    const config = this.config.quality;\n    const options = this.options.quality;\n\n    if (!options.length) {\n      return;\n    }\n\n    let quality = [\n      !is.empty(input) && Number(input),\n      this.storage.get('quality'),\n      config.selected,\n      config.default,\n    ].find(is.number);\n\n    let updateStorage = true;\n\n    if (!options.includes(quality)) {\n      const value = closest(options, quality);\n      this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n      quality = value;\n\n      // Don't update storage if quality is not supported\n      updateStorage = false;\n    }\n\n    // Update config\n    config.selected = quality;\n\n    // Set quality\n    this.media.quality = quality;\n\n    // Save to storage\n    if (updateStorage) {\n      this.storage.set({ quality });\n    }\n  }\n\n  /**\n   * Get current quality level\n   */\n  get quality() {\n    return this.media.quality;\n  }\n\n  /**\n   * Toggle loop\n   * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n   * @param {Boolean} input - Whether to loop or not\n   */\n  set loop(input) {\n    const toggle = is.boolean(input) ? input : this.config.loop.active;\n    this.config.loop.active = toggle;\n    this.media.loop = toggle;\n\n    // Set default to be a true toggle\n    /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n  }\n\n  /**\n   * Get current loop state\n   */\n  get loop() {\n    return Boolean(this.media.loop);\n  }\n\n  /**\n   * Set new media source\n   * @param {Object} input - The new source object (see docs)\n   */\n  set source(input) {\n    source.change.call(this, input);\n  }\n\n  /**\n   * Get current source\n   */\n  get source() {\n    return this.media.currentSrc;\n  }\n\n  /**\n   * Get a download URL (either source or custom)\n   */\n  get download() {\n    const { download } = this.config.urls;\n\n    return is.url(download) ? download : this.source;\n  }\n\n  /**\n   * Set the download URL\n   */\n  set download(input) {\n    if (!is.url(input)) {\n      return;\n    }\n\n    this.config.urls.download = input;\n\n    controls.setDownloadUrl.call(this);\n  }\n\n  /**\n   * Set the poster image for a video\n   * @param {String} input - the URL for the new poster image\n   */\n  set poster(input) {\n    if (!this.isVideo) {\n      this.debug.warn('Poster can only be set for video');\n      return;\n    }\n\n    ui.setPoster.call(this, input, false).catch(() => {});\n  }\n\n  /**\n   * Get the current poster image\n   */\n  get poster() {\n    if (!this.isVideo) {\n      return null;\n    }\n\n    return this.media.getAttribute('poster') || this.media.getAttribute('data-poster');\n  }\n\n  /**\n   * Get the current aspect ratio in use\n   */\n  get ratio() {\n    if (!this.isVideo) {\n      return null;\n    }\n\n    const ratio = reduceAspectRatio(getAspectRatio.call(this));\n\n    return is.array(ratio) ? ratio.join(':') : ratio;\n  }\n\n  /**\n   * Set video aspect ratio\n   */\n  set ratio(input) {\n    if (!this.isVideo) {\n      this.debug.warn('Aspect ratio can only be set for video');\n      return;\n    }\n\n    if (!is.string(input) || !validateAspectRatio(input)) {\n      this.debug.error(`Invalid aspect ratio specified (${input})`);\n      return;\n    }\n\n    this.config.ratio = reduceAspectRatio(input);\n\n    setAspectRatio.call(this);\n  }\n\n  /**\n   * Set the autoplay state\n   * @param {Boolean} input - Whether to autoplay or not\n   */\n  set autoplay(input) {\n    this.config.autoplay = is.boolean(input) ? input : this.config.autoplay;\n  }\n\n  /**\n   * Get the current autoplay state\n   */\n  get autoplay() {\n    return Boolean(this.config.autoplay);\n  }\n\n  /**\n   * Toggle captions\n   * @param {Boolean} input - Whether to enable captions\n   */\n  toggleCaptions(input) {\n    captions.toggle.call(this, input, false);\n  }\n\n  /**\n   * Set the caption track by index\n   * @param {Number} input - Caption index\n   */\n  set currentTrack(input) {\n    captions.set.call(this, input, false);\n    captions.setup.call(this);\n  }\n\n  /**\n   * Get the current caption track index (-1 if disabled)\n   */\n  get currentTrack() {\n    const { toggled, currentTrack } = this.captions;\n    return toggled ? currentTrack : -1;\n  }\n\n  /**\n   * Set the wanted language for captions\n   * Since tracks can be added later it won't update the actual caption track until there is a matching track\n   * @param {String} input - Two character ISO language code (e.g. EN, FR, PT, etc)\n   */\n  set language(input) {\n    captions.setLanguage.call(this, input, false);\n  }\n\n  /**\n   * Get the current track's language\n   */\n  get language() {\n    return (captions.getCurrentTrack.call(this) || {}).language;\n  }\n\n  /**\n   * Toggle picture-in-picture playback on WebKit/MacOS\n   * TODO: update player with state, support, enabled\n   * TODO: detect outside changes\n   */\n  set pip(input) {\n    // Bail if no support\n    if (!support.pip) {\n      return;\n    }\n\n    // Toggle based on current state if not passed\n    const toggle = is.boolean(input) ? input : !this.pip;\n\n    // Toggle based on current state\n    // Safari\n    if (is.function(this.media.webkitSetPresentationMode)) {\n      this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n    }\n\n    // Chrome\n    if (is.function(this.media.requestPictureInPicture)) {\n      if (!this.pip && toggle) {\n        this.media.requestPictureInPicture();\n      } else if (this.pip && !toggle) {\n        document.exitPictureInPicture();\n      }\n    }\n  }\n\n  /**\n   * Get the current picture-in-picture state\n   */\n  get pip() {\n    if (!support.pip) {\n      return null;\n    }\n\n    // Safari\n    if (!is.empty(this.media.webkitPresentationMode)) {\n      return this.media.webkitPresentationMode === pip.active;\n    }\n\n    // Chrome\n    return this.media === document.pictureInPictureElement;\n  }\n\n  /**\n   * Sets the preview thumbnails for the current source\n   */\n  setPreviewThumbnails(thumbnailSource) {\n    if (this.previewThumbnails && this.previewThumbnails.loaded) {\n      this.previewThumbnails.destroy();\n      this.previewThumbnails = null;\n    }\n\n    Object.assign(this.config.previewThumbnails, thumbnailSource);\n\n    // Create new instance if it is still enabled\n    if (this.config.previewThumbnails.enabled) {\n      this.previewThumbnails = new PreviewThumbnails(this);\n    }\n  }\n\n  /**\n   * Trigger the airplay dialog\n   * TODO: update player with state, support, enabled\n   */\n  airplay = () => {\n    // Show dialog if supported\n    if (support.airplay) {\n      this.media.webkitShowPlaybackTargetPicker();\n    }\n  };\n\n  /**\n   * Toggle the player controls\n   * @param {Boolean} [toggle] - Whether to show the controls\n   */\n  toggleControls = (toggle) => {\n    // Don't toggle if missing UI support or if it's audio\n    if (this.supported.ui && !this.isAudio) {\n      // Get state before change\n      const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n      // Negate the argument if not undefined since adding the class to hides the controls\n      const force = typeof toggle === 'undefined' ? undefined : !toggle;\n      // Apply and get updated state\n      const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n      // Close menu\n      if (\n        hiding &&\n        is.array(this.config.controls) &&\n        this.config.controls.includes('settings') &&\n        !is.empty(this.config.settings)\n      ) {\n        controls.toggleMenu.call(this, false);\n      }\n\n      // Trigger event on change\n      if (hiding !== isHidden) {\n        const eventName = hiding ? 'controlshidden' : 'controlsshown';\n        triggerEvent.call(this, this.media, eventName);\n      }\n\n      return !hiding;\n    }\n\n    return false;\n  };\n\n  /**\n   * Add event listeners\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   */\n  on = (event, callback) => {\n    on.call(this, this.elements.container, event, callback);\n  };\n\n  /**\n   * Add event listeners once\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   */\n  once = (event, callback) => {\n    once.call(this, this.elements.container, event, callback);\n  };\n\n  /**\n   * Remove event listeners\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   */\n  off = (event, callback) => {\n    off(this.elements.container, event, callback);\n  };\n\n  /**\n   * Destroy an instance\n   * Event listeners are removed when elements are removed\n   * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n   * @param {Function} callback - Callback for when destroy is complete\n   * @param {Boolean} soft - Whether it's a soft destroy (for source changes etc)\n   */\n  destroy = (callback, soft = false) => {\n    if (!this.ready) {\n      return;\n    }\n\n    const done = () => {\n      // Reset overflow (incase destroyed while in fullscreen)\n      document.body.style.overflow = '';\n\n      // GC for embed\n      this.embed = null;\n\n      // If it's a soft destroy, make minimal changes\n      if (soft) {\n        if (Object.keys(this.elements).length) {\n          // Remove elements\n          removeElement(this.elements.buttons.play);\n          removeElement(this.elements.captions);\n          removeElement(this.elements.controls);\n          removeElement(this.elements.wrapper);\n\n          // Clear for GC\n          this.elements.buttons.play = null;\n          this.elements.captions = null;\n          this.elements.controls = null;\n          this.elements.wrapper = null;\n        }\n\n        // Callback\n        if (is.function(callback)) {\n          callback();\n        }\n      } else {\n        // Unbind listeners\n        unbindListeners.call(this);\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Replace the container with the original element provided\n        replaceElement(this.elements.original, this.elements.container);\n\n        // Event\n        triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n        // Callback\n        if (is.function(callback)) {\n          callback.call(this.elements.original);\n        }\n\n        // Reset state\n        this.ready = false;\n\n        // Clear for garbage collection\n        setTimeout(() => {\n          this.elements = null;\n          this.media = null;\n        }, 200);\n      }\n    };\n\n    // Stop playback\n    this.stop();\n\n    // Clear timeouts\n    clearTimeout(this.timers.loading);\n    clearTimeout(this.timers.controls);\n    clearTimeout(this.timers.resized);\n\n    // Provider specific stuff\n    if (this.isHTML5) {\n      // Restore native video controls\n      ui.toggleNativeControls.call(this, true);\n\n      // Clean up\n      done();\n    } else if (this.isYouTube) {\n      // Clear timers\n      clearInterval(this.timers.buffering);\n      clearInterval(this.timers.playing);\n\n      // Destroy YouTube API\n      if (this.embed !== null && is.function(this.embed.destroy)) {\n        this.embed.destroy();\n      }\n\n      // Clean up\n      done();\n    } else if (this.isVimeo) {\n      // Destroy Vimeo API\n      // then clean up (wait, to prevent postmessage errors)\n      if (this.embed !== null) {\n        this.embed.unload().then(done);\n      }\n\n      // Vimeo does not always return\n      setTimeout(done, 200);\n    }\n  };\n\n  /**\n   * Check for support for a mime type (HTML5 only)\n   * @param {String} type - Mime type\n   */\n  supports = (type) => support.mime.call(this, type);\n\n  /**\n   * Check for support\n   * @param {String} type - Player type (audio/video)\n   * @param {String} provider - Provider (html5/youtube/vimeo)\n   */\n  static supported(type, provider) {\n    return support.check(type, provider);\n  }\n\n  /**\n   * Load an SVG sprite into the page\n   * @param {String} url - URL for the SVG sprite\n   * @param {String} [id] - Unique ID\n   */\n  static loadSprite(url, id) {\n    return loadSprite(url, id);\n  }\n\n  /**\n   * Setup multiple instances\n   * @param {*} selector\n   * @param {Object} options\n   */\n  static setup(selector, options = {}) {\n    let targets = null;\n\n    if (is.string(selector)) {\n      targets = Array.from(document.querySelectorAll(selector));\n    } else if (is.nodeList(selector)) {\n      targets = Array.from(selector);\n    } else if (is.array(selector)) {\n      targets = selector.filter(is.element);\n    }\n\n    if (is.empty(targets)) {\n      return null;\n    }\n\n    return targets.map((t) => new Plyr(t, options));\n  }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n", "/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n", "// Detect passive event listener support\r\nlet supportsPassive = false;\r\n/* eslint-disable */\r\ntry {\r\n  /* @ts-ignore */\r\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n    get: () => {\r\n      supportsPassive = true;\r\n    }\r\n  }));\r\n} catch (e) {}\r\n/* eslint-enable */\r\n\r\n/**\r\n * @typedef {Object} PoolItem\r\n * @prop {HTMLElement | Window | Document | undefined | null} target\r\n * @prop {string} type\r\n * @prop {EventListenerOrEventListenerObject} listener\r\n * @prop {boolean} [passive]\r\n */\r\n\r\nclass DOMEvents {\r\n  constructor() {\r\n    /**\r\n     * @type {PoolItem[]}\r\n     * @private\r\n     */\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type Can be multiple, separated by space.\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  add(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive);\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  remove(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive, true);\r\n  }\r\n\r\n  /**\r\n   * Removes all bound events\r\n   */\r\n  removeAll() {\r\n    this._pool.forEach((poolItem) => {\r\n      this._toggleListener(\r\n        poolItem.target,\r\n        poolItem.type,\r\n        poolItem.listener,\r\n        poolItem.passive,\r\n        true,\r\n        true\r\n      );\r\n    });\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds or removes event\r\n   *\r\n   * @private\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   * @param {boolean} [unbind] Whether the event should be added or removed\r\n   * @param {boolean} [skipPool] Whether events pool should be skipped\r\n   */\r\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    const methodName = unbind ? 'removeEventListener' : 'addEventListener';\r\n    const types = type.split(' ');\r\n    types.forEach((eType) => {\r\n      if (eType) {\r\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\r\n        // so developer doesn't need to do this manually\r\n        if (!skipPool) {\r\n          if (unbind) {\r\n            // Remove from the events pool\r\n            this._pool = this._pool.filter((poolItem) => {\r\n              return poolItem.type !== eType\r\n                || poolItem.listener !== listener\r\n                || poolItem.target !== target;\r\n            });\r\n          } else {\r\n            // Add to the events pool\r\n            this._pool.push({\r\n              target,\r\n              type: eType,\r\n              listener,\r\n              passive\r\n            });\r\n          }\r\n        }\r\n\r\n        // most PhotoSwipe events call preventDefault,\r\n        // and we do not need browser to scroll the page\r\n        const eventOptions = supportsPassive ? { passive: (passive || false) } : false;\r\n\r\n        target[methodName](\r\n          eType,\r\n          listener,\r\n          eventOptions\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default DOMEvents;\r\n", "/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n", "import { clamp } from '../util/util.js';\r\nimport { parsePaddingOption } from '../util/viewport-size.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {Record<Axis, number>} Point */\r\n/** @typedef {'x' | 'y'} Axis */\r\n\r\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\r\nclass PanBounds {\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  constructor(slide) {\r\n    this.slide = slide;\r\n    this.currZoomLevel = 1;\r\n    this.center = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.max = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.min = /** @type {Point} */ { x: 0, y: 0 };\r\n  }\r\n\r\n  /**\r\n   * _getItemBounds\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  update(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n\r\n    if (!this.slide.width) {\r\n      this.reset();\r\n    } else {\r\n      this._updateAxis('x');\r\n      this._updateAxis('y');\r\n      this.slide.pswp.dispatch('calcBounds', { slide: this.slide });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * _calculateItemBoundsForAxis\r\n   *\r\n   * @param {Axis} axis\r\n   */\r\n  _updateAxis(axis) {\r\n    const { pswp } = this.slide;\r\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\r\n    const paddingProp = axis === 'x' ? 'left' : 'top';\r\n    const padding = parsePaddingOption(\r\n      paddingProp,\r\n      pswp.options,\r\n      pswp.viewportSize,\r\n      this.slide.data,\r\n      this.slide.index\r\n    );\r\n\r\n    const panAreaSize = this.slide.panAreaSize[axis];\r\n\r\n    // Default position of element.\r\n    // By default, it is center of viewport:\r\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding;\r\n\r\n    // maximum pan position\r\n    this.max[axis] = (elSize > panAreaSize)\r\n      ? Math.round(panAreaSize - elSize) + padding\r\n      : this.center[axis];\r\n\r\n    // minimum pan position\r\n    this.min[axis] = (elSize > panAreaSize)\r\n      ? padding\r\n      : this.center[axis];\r\n  }\r\n\r\n  // _getZeroBounds\r\n  reset() {\r\n    this.center.x = 0;\r\n    this.center.y = 0;\r\n    this.max.x = 0;\r\n    this.max.y = 0;\r\n    this.min.x = 0;\r\n    this.min.y = 0;\r\n  }\r\n\r\n  /**\r\n   * Correct pan position if it's beyond the bounds\r\n   *\r\n   * @param {Axis} axis x or y\r\n   * @param {number} panOffset\r\n   * @returns {number}\r\n   */\r\n  correctPan(axis, panOffset) { // checkPanBounds\r\n    return clamp(panOffset, this.max[axis], this.min[axis]);\r\n  }\r\n}\r\n\r\nexport default PanBounds;\r\n", "const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n", "/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @typedef {_SlideData & Record<string, any>} SlideData\r\n * @typedef {Object} _SlideData\r\n * @prop {HTMLElement} [element] thumbnail element\r\n * @prop {string} [src] image URL\r\n * @prop {string} [srcset] image srcset\r\n * @prop {number} [w] image width (deprecated)\r\n * @prop {number} [h] image height (deprecated)\r\n * @prop {number} [width] image width\r\n * @prop {number} [height] image height\r\n * @prop {string} [msrc] placeholder image URL that's displayed before large image is loaded\r\n * @prop {string} [alt] image alt text\r\n * @prop {boolean} [thumbCropped] whether thumbnail is cropped client-side or not\r\n * @prop {string} [html] html content of a slide\r\n * @prop {'image' | 'html' | string} [type] slide type\r\n */\r\n\r\nimport {\r\n  createElement,\r\n  setTransform,\r\n  equalizePoints,\r\n  roundPoint,\r\n  toTransformString,\r\n  clamp,\r\n} from '../util/util.js';\r\n\r\nimport PanBounds from './pan-bounds.js';\r\nimport ZoomLevel from './zoom-level.js';\r\nimport { getPanAreaSize } from '../util/viewport-size.js';\r\n\r\n/**\r\n * Renders and allows to control a single slide\r\n */\r\nclass Slide {\r\n  /**\r\n   * @param {SlideData} data\r\n   * @param {number} index\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(data, index, pswp) {\r\n    this.data = data;\r\n    this.index = index;\r\n    this.pswp = pswp;\r\n    this.isActive = (index === pswp.currIndex);\r\n    this.currentResolution = 0;\r\n    /** @type {Point} */\r\n    this.panAreaSize = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.pan = { x: 0, y: 0 };\r\n\r\n    this.isFirstSlide = (this.isActive && !pswp.opener.isOpen);\r\n\r\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\r\n\r\n    this.pswp.dispatch('gettingData', {\r\n      slide: this,\r\n      data: this.data,\r\n      index\r\n    });\r\n\r\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\r\n    this.container = createElement('pswp__zoom-wrap', 'div');\r\n    /** @type {HTMLElement | null} */\r\n    this.holderElement = null;\r\n\r\n    this.currZoomLevel = 1;\r\n    /** @type {number} */\r\n    this.width = this.content.width;\r\n    /** @type {number} */\r\n    this.height = this.content.height;\r\n    this.heavyAppended = false;\r\n    this.bounds = new PanBounds(this);\r\n\r\n    this.prevDisplayedWidth = -1;\r\n    this.prevDisplayedHeight = -1;\r\n\r\n    this.pswp.dispatch('slideInit', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {boolean} isActive\r\n   */\r\n  setIsActive(isActive) {\r\n    if (isActive && !this.isActive) {\r\n      // slide just became active\r\n      this.activate();\r\n    } else if (!isActive && this.isActive) {\r\n      // slide just became non-active\r\n      this.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends slide content to DOM\r\n   *\r\n   * @param {HTMLElement} holderElement\r\n   */\r\n  append(holderElement) {\r\n    this.holderElement = holderElement;\r\n\r\n    this.container.style.transformOrigin = '0 0';\r\n\r\n    // Slide appended to DOM\r\n    if (!this.data) {\r\n      return;\r\n    }\r\n\r\n    this.calculateSize();\r\n\r\n    this.load();\r\n    this.updateContentSize();\r\n    this.appendHeavy();\r\n\r\n    this.holderElement.appendChild(this.container);\r\n\r\n    this.zoomAndPanToInitial();\r\n\r\n    this.pswp.dispatch('firstZoomPan', { slide: this });\r\n\r\n    this.applyCurrentZoomPan();\r\n\r\n    this.pswp.dispatch('afterSetContent', { slide: this });\r\n\r\n    if (this.isActive) {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  load() {\r\n    this.content.load(false);\r\n    this.pswp.dispatch('slideLoad', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Append \"heavy\" DOM elements\r\n   *\r\n   * This may depend on a type of slide,\r\n   * but generally these are large images.\r\n   */\r\n  appendHeavy() {\r\n    const { pswp } = this;\r\n    const appendHeavyNearby = true; // todo\r\n\r\n    // Avoid appending heavy elements during animations\r\n    if (this.heavyAppended\r\n        || !pswp.opener.isOpen\r\n        || pswp.mainScroll.isShifted()\r\n        || (!this.isActive && !appendHeavyNearby)) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('appendHeavy', { slide: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.heavyAppended = true;\r\n\r\n    this.content.append();\r\n\r\n    this.pswp.dispatch('appendHeavyContent', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide is active (selected).\r\n   *\r\n   * If it's part of opening/closing transition -\r\n   * activate() will trigger after the transition is ended.\r\n   */\r\n  activate() {\r\n    this.isActive = true;\r\n    this.appendHeavy();\r\n    this.content.activate();\r\n    this.pswp.dispatch('slideActivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide becomes inactive.\r\n   *\r\n   * Slide can become inactive only after it was active.\r\n   */\r\n  deactivate() {\r\n    this.isActive = false;\r\n    this.content.deactivate();\r\n\r\n    if (this.currZoomLevel !== this.zoomLevels.initial) {\r\n      // allow filtering\r\n      this.calculateSize();\r\n    }\r\n\r\n    // reset zoom level\r\n    this.currentResolution = 0;\r\n    this.zoomAndPanToInitial();\r\n    this.applyCurrentZoomPan();\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('slideDeactivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * The slide should destroy itself, it will never be used again.\r\n   * (unbind all events and destroy internal components)\r\n   */\r\n  destroy() {\r\n    this.content.hasSlide = false;\r\n    this.content.remove();\r\n    this.container.remove();\r\n    this.pswp.dispatch('slideDestroy', { slide: this });\r\n  }\r\n\r\n  resize() {\r\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\r\n      // Keep initial zoom level if it was before the resize,\r\n      // as well as when this slide is not active\r\n\r\n      // Reset position and scale to original state\r\n      this.calculateSize();\r\n      this.currentResolution = 0;\r\n      this.zoomAndPanToInitial();\r\n      this.applyCurrentZoomPan();\r\n      this.updateContentSize();\r\n    } else {\r\n      // readjust pan position if it's beyond the bounds\r\n      this.calculateSize();\r\n      this.bounds.update(this.currZoomLevel);\r\n      this.panTo(this.pan.x, this.pan.y);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Apply size to current slide content,\r\n   * based on the current resolution and scale.\r\n   *\r\n   * @param {boolean} [force] if size should be updated even if dimensions weren't changed\r\n   */\r\n  updateContentSize(force) {\r\n    // Use initial zoom level\r\n    // if resolution is not defined (user didn't zoom yet)\r\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\r\n\r\n    if (!scaleMultiplier) {\r\n      return;\r\n    }\r\n\r\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\r\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\r\n\r\n    if (!this.sizeChanged(width, height) && !force) {\r\n      return;\r\n    }\r\n    this.content.setDisplayedSize(width, height);\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  sizeChanged(width, height) {\r\n    if (width !== this.prevDisplayedWidth\r\n        || height !== this.prevDisplayedHeight) {\r\n      this.prevDisplayedWidth = width;\r\n      this.prevDisplayedHeight = height;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /** @returns {HTMLImageElement | HTMLDivElement | null | undefined} */\r\n  getPlaceholderElement() {\r\n    return this.content.placeholder?.element;\r\n  }\r\n\r\n  /**\r\n   * Zoom current slide image to...\r\n   *\r\n   * @param {number} destZoomLevel Destination zoom level.\r\n   * @param {Point} [centerPoint]\r\n   * Transform origin center point, or false if viewport center should be used.\r\n   * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\r\n   * @param {boolean} [ignoreBounds] Minimum and maximum zoom levels will be ignored.\r\n   */\r\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\r\n    const { pswp } = this;\r\n    if (!this.isZoomable()\r\n        || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    pswp.dispatch('beforeZoomTo', {\r\n      destZoomLevel, centerPoint, transitionDuration\r\n    });\r\n\r\n    // stop all pan and zoom transitions\r\n    pswp.animations.stopAllPan();\r\n\r\n    // if (!centerPoint) {\r\n    //   centerPoint = pswp.getViewportCenterPoint();\r\n    // }\r\n\r\n    const prevZoomLevel = this.currZoomLevel;\r\n\r\n    if (!ignoreBounds) {\r\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\r\n    }\r\n\r\n    // if (transitionDuration === undefined) {\r\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\r\n    // }\r\n\r\n    this.setZoomLevel(destZoomLevel);\r\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\r\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\r\n    roundPoint(this.pan);\r\n\r\n    const finishTransition = () => {\r\n      this._setResolution(destZoomLevel);\r\n      this.applyCurrentZoomPan();\r\n    };\r\n\r\n    if (!transitionDuration) {\r\n      finishTransition();\r\n    } else {\r\n      pswp.animations.startTransition({\r\n        isPan: true,\r\n        name: 'zoomTo',\r\n        target: this.container,\r\n        transform: this.getCurrentTransform(),\r\n        onComplete: finishTransition,\r\n        duration: transitionDuration,\r\n        easing: pswp.options.easing\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} [centerPoint]\r\n   */\r\n  toggleZoom(centerPoint) {\r\n    this.zoomTo(\r\n      this.currZoomLevel === this.zoomLevels.initial\r\n        ? this.zoomLevels.secondary : this.zoomLevels.initial,\r\n      centerPoint,\r\n      this.pswp.options.zoomAnimationDuration\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Updates zoom level property and recalculates new pan bounds,\r\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  setZoomLevel(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n    this.bounds.update(this.currZoomLevel);\r\n  }\r\n\r\n  /**\r\n   * Get pan position after zoom at a given `point`.\r\n   *\r\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n   * pan bounds according to the new zoom level.\r\n   *\r\n   * @param {'x' | 'y'} axis\r\n   * @param {Point} [point]\r\n   * point based on which zoom is performed, usually refers to the current mouse position,\r\n   * if false - viewport center will be used.\r\n   * @param {number} [prevZoomLevel] Zoom level before new zoom was applied.\r\n   * @returns {number}\r\n   */\r\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\r\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\r\n    if (totalPanDistance === 0) {\r\n      return this.bounds.center[axis];\r\n    }\r\n\r\n    if (!point) {\r\n      point = this.pswp.getViewportCenterPoint();\r\n    }\r\n\r\n    if (!prevZoomLevel) {\r\n      prevZoomLevel = this.zoomLevels.initial;\r\n    }\r\n\r\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\r\n    return this.bounds.correctPan(\r\n      axis,\r\n      (this.pan[axis] - point[axis]) * zoomFactor + point[axis]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Apply pan and keep it within bounds.\r\n   *\r\n   * @param {number} panX\r\n   * @param {number} panY\r\n   */\r\n  panTo(panX, panY) {\r\n    this.pan.x = this.bounds.correctPan('x', panX);\r\n    this.pan.y = this.bounds.correctPan('y', panY);\r\n    this.applyCurrentZoomPan();\r\n  }\r\n\r\n  /**\r\n   * If the slide in the current state can be panned by the user\r\n   * @returns {boolean}\r\n   */\r\n  isPannable() {\r\n    return Boolean(this.width) && (this.currZoomLevel > this.zoomLevels.fit);\r\n  }\r\n\r\n  /**\r\n   * If the slide can be zoomed\r\n   * @returns {boolean}\r\n   */\r\n  isZoomable() {\r\n    return Boolean(this.width) && this.content.isZoomable();\r\n  }\r\n\r\n  /**\r\n   * Apply transform and scale based on\r\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n   */\r\n  applyCurrentZoomPan() {\r\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\r\n    if (this === this.pswp.currSlide) {\r\n      this.pswp.dispatch('zoomPanUpdate', { slide: this });\r\n    }\r\n  }\r\n\r\n  zoomAndPanToInitial() {\r\n    this.currZoomLevel = this.zoomLevels.initial;\r\n\r\n    // pan according to the zoom level\r\n    this.bounds.update(this.currZoomLevel);\r\n    equalizePoints(this.pan, this.bounds.center);\r\n    this.pswp.dispatch('initialZoomPan', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Set translate and scale based on current resolution\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} zoom\r\n   * @private\r\n   */\r\n  _applyZoomTransform(x, y, zoom) {\r\n    zoom /= this.currentResolution || this.zoomLevels.initial;\r\n    setTransform(this.container, x, y, zoom);\r\n  }\r\n\r\n  calculateSize() {\r\n    const { pswp } = this;\r\n\r\n    equalizePoints(\r\n      this.panAreaSize,\r\n      getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index)\r\n    );\r\n\r\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\r\n\r\n    pswp.dispatch('calcSlideSize', {\r\n      slide: this\r\n    });\r\n  }\r\n\r\n  /** @returns {string} */\r\n  getCurrentTransform() {\r\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\r\n    return toTransformString(this.pan.x, this.pan.y, scale);\r\n  }\r\n\r\n  /**\r\n   * Set resolution and re-render the image.\r\n   *\r\n   * For example, if the real image size is 2000x1500,\r\n   * and resolution is 0.5 - it will be rendered as 1000x750.\r\n   *\r\n   * Image with zoom level 2 and resolution 0.5 is\r\n   * the same as image with zoom level 1 and resolution 1.\r\n   *\r\n   * Used to optimize animations and make\r\n   * sure that browser renders image in the highest quality.\r\n   * Also used by responsive images to load the correct one.\r\n   *\r\n   * @param {number} newResolution\r\n   */\r\n  _setResolution(newResolution) {\r\n    if (newResolution === this.currentResolution) {\r\n      return;\r\n    }\r\n\r\n    this.currentResolution = newResolution;\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('resolutionChanged');\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n", "import {\r\n  equalizePoints, roundPoint, clamp\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst PAN_END_FRICTION = 0.35;\r\nconst VERTICAL_DRAG_FRICTION = 0.6;\r\n\r\n// 1 corresponds to the third of viewport height\r\nconst MIN_RATIO_TO_CLOSE = 0.4;\r\n\r\n// Minimum speed required to navigate\r\n// to next or previous slide\r\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\r\n\r\n/**\r\n * @param {number} initialVelocity\r\n * @param {number} decelerationRate\r\n * @returns {number}\r\n */\r\nfunction project(initialVelocity, decelerationRate) {\r\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\r\n}\r\n\r\n/**\r\n * Handles single pointer dragging\r\n */\r\nclass DragHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = gestures.pswp;\r\n    /** @type {Point} */\r\n    this.startPan = { x: 0, y: 0 };\r\n  }\r\n\r\n  start() {\r\n    if (this.pswp.currSlide) {\r\n      equalizePoints(this.startPan, this.pswp.currSlide.pan);\r\n    }\r\n    this.pswp.animations.stopAll();\r\n  }\r\n\r\n  change() {\r\n    const { p1, prevP1, dragAxis } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (dragAxis === 'y'\r\n        && this.pswp.options.closeOnVerticalDrag\r\n        && (currSlide && currSlide.currZoomLevel <= currSlide.zoomLevels.fit)\r\n        && !this.gestures.isMultitouch) {\r\n      // Handle vertical drag to close\r\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\r\n      if (!this.pswp.dispatch('verticalDrag', { panY }).defaultPrevented) {\r\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\r\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\r\n        this.pswp.applyBgOpacity(bgOpacity);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\r\n      if (!mainScrollChanged) {\r\n        this._panOrMoveMainScroll('y');\r\n\r\n        if (currSlide) {\r\n          roundPoint(currSlide.pan);\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  end() {\r\n    const { velocity } = this.gestures;\r\n    const { mainScroll, currSlide } = this.pswp;\r\n    let indexDiff = 0;\r\n\r\n    this.pswp.animations.stopAll();\r\n\r\n    // Handle main scroll if it's shifted\r\n    if (mainScroll.isShifted()) {\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX();\r\n\r\n      // Ratio between 0 and 1:\r\n      // 0 - slide is not visible at all,\r\n      // 0.5 - half of the slide is visible\r\n      // 1 - slide is fully visible\r\n      const currentSlideVisibilityRatio = (mainScrollShiftDiff / this.pswp.viewportSize.x);\r\n\r\n      // Go next slide.\r\n      //\r\n      // - if velocity and its direction is matched,\r\n      //   and we see at least tiny part of the next slide\r\n      //\r\n      // - or if we see less than 50% of the current slide\r\n      //   and velocity is close to 0\r\n      //\r\n      if ((velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0)\r\n          || (velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5)) {\r\n        // Go to next slide\r\n        indexDiff = 1;\r\n        velocity.x = Math.min(velocity.x, 0);\r\n      } else if ((velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0)\r\n          || (velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5)) {\r\n        // Go to prev slide\r\n        indexDiff = -1;\r\n        velocity.x = Math.max(velocity.x, 0);\r\n      }\r\n\r\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\r\n    }\r\n\r\n    // Restore zoom level\r\n    if ((currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.max)\r\n        || this.gestures.isMultitouch) {\r\n      this.gestures.zoomLevels.correctZoomPan(true);\r\n    } else {\r\n      // we run two animations instead of one,\r\n      // as each axis has own pan boundaries and thus different spring function\r\n      // (correctZoomPan does not have this functionality,\r\n      //  it animates all properties with single timing function)\r\n      this._finishPanGestureForAxis('x');\r\n      this._finishPanGestureForAxis('y');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   */\r\n  _finishPanGestureForAxis(axis) {\r\n    const { velocity } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const panPos = pan[axis];\r\n    const restoreBgOpacity = (this.pswp.bgOpacity < 1 && axis === 'y');\r\n\r\n    // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\r\n    // Increasing this number will reduce travel distance\r\n    const decelerationRate = 0.995; // 0.99\r\n\r\n    // Pan position if there is no bounds\r\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\r\n\r\n    if (restoreBgOpacity) {\r\n      const vDragRatio = this._getVerticalDragRatio(panPos);\r\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition);\r\n\r\n      // If we are above and moving upwards,\r\n      // or if we are below and moving downwards\r\n      if ((vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE)\r\n          || (vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE)) {\r\n        this.pswp.close();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Pan position with corrected bounds\r\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition);\r\n\r\n    // Exit if pan position should not be changed\r\n    // or if speed it too low\r\n    if (panPos === correctedPanPosition) {\r\n      return;\r\n    }\r\n\r\n    // Overshoot if the final position is out of pan bounds\r\n    const dampingRatio = (correctedPanPosition === projectedPosition) ? 1 : 0.82;\r\n\r\n    const initialBgOpacity = this.pswp.bgOpacity;\r\n    const totalPanDist = correctedPanPosition - panPos;\r\n\r\n    this.pswp.animations.startSpring({\r\n      name: 'panGesture' + axis,\r\n      isPan: true,\r\n      start: panPos,\r\n      end: correctedPanPosition,\r\n      velocity: velocity[axis],\r\n      dampingRatio,\r\n      onUpdate: (pos) => {\r\n        // Animate opacity of background relative to Y pan position of an image\r\n        if (restoreBgOpacity && this.pswp.bgOpacity < 1) {\r\n          // 0 - start of animation, 1 - end of animation\r\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist;\r\n\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          this.pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio,\r\n            0,\r\n            1\r\n          ));\r\n        }\r\n\r\n        pan[axis] = Math.floor(pos);\r\n        currSlide.applyCurrentZoomPan();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update position of the main scroll,\r\n   * or/and update pan position of the current slide.\r\n   *\r\n   * Should return true if it changes (or can change) main scroll.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @returns {boolean}\r\n   */\r\n  _panOrMoveMainScroll(axis) {\r\n    const { p1, dragAxis, prevP1, isMultitouch } = this.gestures;\r\n    const { currSlide, mainScroll } = this.pswp;\r\n    const delta = (p1[axis] - prevP1[axis]);\r\n    const newMainScrollX = mainScroll.x + delta;\r\n\r\n    if (!delta || !currSlide) {\r\n      return false;\r\n    }\r\n\r\n    // Always move main scroll if image can not be panned\r\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\r\n      mainScroll.moveTo(newMainScrollX, true);\r\n      return true; // changed main scroll\r\n    }\r\n\r\n    const { bounds } = currSlide;\r\n    const newPan = currSlide.pan[axis] + delta;\r\n\r\n    if (this.pswp.options.allowPanToNext\r\n        && dragAxis === 'x'\r\n        && axis === 'x'\r\n        && !isMultitouch) {\r\n      const currSlideMainScrollX = mainScroll.getCurrSlideX();\r\n\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\r\n\r\n      const isLeftToRight = delta > 0;\r\n      const isRightToLeft = !isLeftToRight;\r\n\r\n      if (newPan > bounds.min[axis] && isLeftToRight) {\r\n        // Panning from left to right, beyond the left edge\r\n\r\n        // Wether the image was at minimum pan position (or less)\r\n        // when this drag gesture started.\r\n        // Minimum pan position refers to the left edge of the image.\r\n        const wasAtMinPanPosition = (bounds.min[axis] <= this.startPan[axis]);\r\n\r\n        if (wasAtMinPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\r\n        // Paning from right to left, beyond the right edge\r\n\r\n        // Maximum pan position refers to the right edge of the image.\r\n        const wasAtMaxPanPosition = (this.startPan[axis] <= bounds.max[axis]);\r\n\r\n        if (wasAtMaxPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else {\r\n        // If main scroll is shifted\r\n        if (mainScrollShiftDiff !== 0) {\r\n          // If main scroll is shifted right\r\n          if (mainScrollShiftDiff > 0 /*&& isRightToLeft*/) {\r\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          } else if (mainScrollShiftDiff < 0 /*&& isLeftToRight*/) {\r\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\r\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          }\r\n        } else {\r\n          // We are within pan bounds, so just pan\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      }\r\n    } else {\r\n      if (axis === 'y') {\r\n        // Do not pan vertically if main scroll is shifted o\r\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      } else {\r\n        this._setPanWithFriction(axis, newPan);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // If we move above - the ratio is negative\r\n  // If we move below the ratio is positive\r\n\r\n  /**\r\n   * Relation between pan Y position and third of viewport height.\r\n   *\r\n   * When we are at initial position (center bounds) - the ratio is 0,\r\n   * if position is shifted upwards - the ratio is negative,\r\n   * if position is shifted downwards - the ratio is positive.\r\n   *\r\n   * @private\r\n   * @param {number} panY The current pan Y position.\r\n   * @returns {number}\r\n   */\r\n  _getVerticalDragRatio(panY) {\r\n    return (panY - (this.pswp.currSlide?.bounds.center.y ?? 0)) / (this.pswp.viewportSize.y / 3);\r\n  }\r\n\r\n  /**\r\n   * Set pan position of the current slide.\r\n   * Apply friction if the position is beyond the pan bounds,\r\n   * or if custom friction is defined.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} potentialPan\r\n   * @param {number} [customFriction] (0.1 - 1)\r\n   */\r\n  _setPanWithFriction(axis, potentialPan, customFriction) {\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const correctedPan = bounds.correctPan(axis, potentialPan);\r\n    // If we are out of pan bounds\r\n    if (correctedPan !== potentialPan || customFriction) {\r\n      const delta = Math.round(potentialPan - pan[axis]);\r\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\r\n    } else {\r\n      pan[axis] = potentialPan;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragHandler;\r\n", "import {\r\n  equalizePoints, getDistanceBetween, clamp, pointsEqual\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst UPPER_ZOOM_FRICTION = 0.05;\r\nconst LOWER_ZOOM_FRICTION = 0.15;\r\n\r\n\r\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nfunction getZoomPointsCenter(p, p1, p2) {\r\n  p.x = (p1.x + p2.x) / 2;\r\n  p.y = (p1.y + p2.y) / 2;\r\n  return p;\r\n}\r\n\r\nclass ZoomHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startPan = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startZoomPoint = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._zoomPoint = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._wasOverFitZoomLevel = false;\r\n    /** @private */\r\n    this._startZoomLevel = 1;\r\n  }\r\n\r\n  start() {\r\n    const { currSlide } = this.gestures.pswp;\r\n    if (currSlide) {\r\n      this._startZoomLevel = currSlide.currZoomLevel;\r\n      equalizePoints(this._startPan, currSlide.pan);\r\n    }\r\n\r\n    this.gestures.pswp.animations.stopAllPan();\r\n    this._wasOverFitZoomLevel = false;\r\n  }\r\n\r\n  change() {\r\n    const { p1, startP1, p2, startP2, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const minZoomLevel = currSlide.zoomLevels.min;\r\n    const maxZoomLevel = currSlide.zoomLevels.max;\r\n\r\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\r\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\r\n\r\n    let currZoomLevel = (1 / getDistanceBetween(startP1, startP2))\r\n                      * getDistanceBetween(p1, p2)\r\n                      * this._startZoomLevel;\r\n\r\n    // slightly over the zoom.fit\r\n    if (currZoomLevel > currSlide.zoomLevels.initial + (currSlide.zoomLevels.initial / 15)) {\r\n      this._wasOverFitZoomLevel = true;\r\n    }\r\n\r\n    if (currZoomLevel < minZoomLevel) {\r\n      if (pswp.options.pinchToClose\r\n          && !this._wasOverFitZoomLevel\r\n          && this._startZoomLevel <= currSlide.zoomLevels.initial) {\r\n        // fade out background if zooming out\r\n        const bgOpacity = 1 - ((minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2));\r\n        if (!pswp.dispatch('pinchClose', { bgOpacity }).defaultPrevented) {\r\n          pswp.applyBgOpacity(bgOpacity);\r\n        }\r\n      } else {\r\n        // Apply the friction if zoom level is below the min\r\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\r\n      }\r\n    } else if (currZoomLevel > maxZoomLevel) {\r\n      // Apply the friction if zoom level is above the max\r\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\r\n    }\r\n\r\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\r\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\r\n\r\n    currSlide.setZoomLevel(currZoomLevel);\r\n    currSlide.applyCurrentZoomPan();\r\n  }\r\n\r\n  end() {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    if ((!currSlide || currSlide.currZoomLevel < currSlide.zoomLevels.initial)\r\n        && !this._wasOverFitZoomLevel\r\n        && pswp.options.pinchToClose) {\r\n      pswp.close();\r\n    } else {\r\n      this.correctZoomPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} currZoomLevel\r\n   * @returns {number}\r\n   */\r\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\r\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\r\n    return this._zoomPoint[axis]\r\n            - ((this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Correct currZoomLevel and pan if they are\r\n   * beyond minimum or maximum values.\r\n   * With animation.\r\n   *\r\n   * @param {boolean} [ignoreGesture]\r\n   * Wether gesture coordinates should be ignored when calculating destination pan position.\r\n   */\r\n  correctZoomPan(ignoreGesture) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide?.isZoomable()) {\r\n      return;\r\n    }\r\n\r\n    if (this._zoomPoint.x === 0) {\r\n      ignoreGesture = true;\r\n    }\r\n\r\n    const prevZoomLevel = currSlide.currZoomLevel;\r\n\r\n    /** @type {number} */\r\n    let destinationZoomLevel;\r\n    let currZoomLevelNeedsChange = true;\r\n\r\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\r\n      destinationZoomLevel = currSlide.zoomLevels.initial;\r\n      // zoom to min\r\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\r\n      destinationZoomLevel = currSlide.zoomLevels.max;\r\n      // zoom to max\r\n    } else {\r\n      currZoomLevelNeedsChange = false;\r\n      destinationZoomLevel = prevZoomLevel;\r\n    }\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const restoreBgOpacity = pswp.bgOpacity < 1;\r\n\r\n    const initialPan = equalizePoints({ x: 0, y: 0 }, currSlide.pan);\r\n    let destinationPan = equalizePoints({ x: 0, y: 0 }, initialPan);\r\n\r\n    if (ignoreGesture) {\r\n      this._zoomPoint.x = 0;\r\n      this._zoomPoint.y = 0;\r\n      this._startZoomPoint.x = 0;\r\n      this._startZoomPoint.y = 0;\r\n      this._startZoomLevel = prevZoomLevel;\r\n      equalizePoints(this._startPan, initialPan);\r\n    }\r\n\r\n    if (currZoomLevelNeedsChange) {\r\n      destinationPan = {\r\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\r\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\r\n      };\r\n    }\r\n\r\n    // set zoom level, so pan bounds are updated according to it\r\n    currSlide.setZoomLevel(destinationZoomLevel);\r\n\r\n    destinationPan = {\r\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\r\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\r\n    };\r\n\r\n    // return zoom level and its bounds to initial\r\n    currSlide.setZoomLevel(prevZoomLevel);\r\n\r\n    const panNeedsChange = !pointsEqual(destinationPan, initialPan);\r\n\r\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\r\n      // update resolution after gesture\r\n      currSlide._setResolution(destinationZoomLevel);\r\n      currSlide.applyCurrentZoomPan();\r\n\r\n      // nothing to animate\r\n      return;\r\n    }\r\n\r\n    pswp.animations.stopAllPan();\r\n\r\n    pswp.animations.startSpring({\r\n      isPan: true,\r\n      start: 0,\r\n      end: 1000,\r\n      velocity: 0,\r\n      dampingRatio: 1,\r\n      naturalFrequency: 40,\r\n      onUpdate: (now) => {\r\n        now /= 1000; // 0 - start, 1 - end\r\n\r\n        if (panNeedsChange || currZoomLevelNeedsChange) {\r\n          if (panNeedsChange) {\r\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\r\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\r\n          }\r\n\r\n          if (currZoomLevelNeedsChange) {\r\n            const newZoomLevel = prevZoomLevel\r\n                        + (destinationZoomLevel - prevZoomLevel) * now;\r\n            currSlide.setZoomLevel(newZoomLevel);\r\n          }\r\n\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n\r\n        // Restore background opacity\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1\r\n          ));\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        // update resolution after transition ends\r\n        currSlide._setResolution(destinationZoomLevel);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default ZoomHandler;\r\n", "/**\r\n * @template {string} T\r\n * @template {string} P\r\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\r\n */\r\n\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\r\n\r\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {PointerEvent} event\r\n * @returns {boolean}\r\n */\r\nfunction didTapOnMainContent(event) {\r\n  return !!(/** @type {HTMLElement} */ (event.target).closest('.pswp__container'));\r\n}\r\n\r\n/**\r\n * Tap, double-tap handler.\r\n */\r\nclass TapHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  click(point, originalEvent) {\r\n    const targetClassList = /** @type {HTMLElement} */ (originalEvent.target).classList;\r\n    const isImageClick = targetClassList.contains('pswp__img');\r\n    const isBackgroundClick = targetClassList.contains('pswp__item')\r\n                              || targetClassList.contains('pswp__zoom-wrap');\r\n\r\n    if (isImageClick) {\r\n      this._doClickOrTapAction('imageClick', point, originalEvent);\r\n    } else if (isBackgroundClick) {\r\n      this._doClickOrTapAction('bgClick', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  tap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('tap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  doubleTap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Actions} actionName\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  _doClickOrTapAction(actionName, point, originalEvent) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const actionFullName = /** @type {AddPostfix<Actions, 'Action'>} */ (actionName + 'Action');\r\n    const optionValue = pswp.options[actionFullName];\r\n\r\n    if (pswp.dispatch(actionFullName, { point, originalEvent }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      optionValue.call(pswp, point, originalEvent);\r\n      return;\r\n    }\r\n\r\n    switch (optionValue) {\r\n      case 'close':\r\n      case 'next':\r\n        pswp[optionValue]();\r\n        break;\r\n      case 'zoom':\r\n        currSlide?.toggleZoom(point);\r\n        break;\r\n      case 'zoom-or-close':\r\n        // by default click zooms current image,\r\n        // if it can not be zoomed - gallery will be closed\r\n        if (currSlide?.isZoomable()\r\n            && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\r\n          currSlide.toggleZoom(point);\r\n        } else if (pswp.options.clickToCloseNonZoomable) {\r\n          pswp.close();\r\n        }\r\n        break;\r\n      case 'toggle-controls':\r\n        this.gestures.pswp.element?.classList.toggle('pswp--ui-visible');\r\n        // if (_controlsVisible) {\r\n        //   _ui.hideControls();\r\n        // } else {\r\n        //   _ui.showControls();\r\n        // }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TapHandler;\r\n", "import {\r\n  equalizePoints, pointsEqual, getDistanceBetween\r\n} from '../util/util.js';\r\n\r\nimport DragHandler from './drag-handler.js';\r\nimport ZoomHandler from './zoom-handler.js';\r\nimport TapHandler from './tap-handler.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n// How far should user should drag\r\n// until we can determine that the gesture is swipe and its direction\r\nconst AXIS_SWIPE_HYSTERISIS = 10;\r\n//const PAN_END_FRICTION = 0.35;\r\n\r\nconst DOUBLE_TAP_DELAY = 300; // ms\r\nconst MIN_TAP_DISTANCE = 25; // px\r\n\r\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\r\nclass Gestures {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    /** @type {'x' | 'y' | null} */\r\n    this.dragAxis = null;\r\n\r\n    // point objects are defined once and reused\r\n    // PhotoSwipe keeps track only of two pointers, others are ignored\r\n    /** @type {Point} */\r\n    this.p1 = { x: 0, y: 0 }; // the first pressed pointer\r\n    /** @type {Point} */\r\n    this.p2 = { x: 0, y: 0 }; // the second pressed pointer\r\n    /** @type {Point} */\r\n    this.prevP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.prevP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.velocity = { x: 0, y: 0 };\r\n\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._lastStartP1 = { x: 0, y: 0 };\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._intervalP1 = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @type {Point[]}\r\n     * @private\r\n     */\r\n    this._ongoingPointers = [];\r\n    /** @private */\r\n    this._touchEventEnabled = 'ontouchstart' in window;\r\n    /** @private */\r\n    this._pointerEventEnabled = !!(window.PointerEvent);\r\n    this.supportsTouch = this._touchEventEnabled\r\n                          || (this._pointerEventEnabled && navigator.maxTouchPoints > 1);\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @private */\r\n    this._intervalTime = 0;\r\n    /** @private */\r\n    this._velocityCalculated = false;\r\n    this.isMultitouch = false;\r\n    this.isDragging = false;\r\n    this.isZooming = false;\r\n    /** @type {number | null} */\r\n    this.raf = null;\r\n    /** @type {NodeJS.Timeout | null}\r\n     * @private\r\n     */\r\n    this._tapTimer = null;\r\n\r\n    if (!this.supportsTouch) {\r\n      // disable pan to next slide for non-touch devices\r\n      pswp.options.allowPanToNext = false;\r\n    }\r\n\r\n    this.drag = new DragHandler(this);\r\n    this.zoomLevels = new ZoomHandler(this);\r\n    this.tapHandler = new TapHandler(this);\r\n\r\n    pswp.on('bindEvents', () => {\r\n      pswp.events.add(\r\n        pswp.scrollWrap,\r\n        'click',\r\n        /** @type EventListener */(this._onClick.bind(this))\r\n      );\r\n\r\n      if (this._pointerEventEnabled) {\r\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\r\n      } else if (this._touchEventEnabled) {\r\n        this._bindEvents('touch', 'start', 'end', 'cancel');\r\n\r\n        // In previous versions we also bound mouse event here,\r\n        // in case device supports both touch and mouse events,\r\n        // but newer versions of browsers now support PointerEvent.\r\n\r\n        // on iOS10 if you bind touchmove/end after touchstart,\r\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\r\n        // preventDefault will have no effect on touchmove and touchend.\r\n        // Unless you bind it previously.\r\n        if (pswp.scrollWrap) {\r\n          pswp.scrollWrap.ontouchmove = () => {};\r\n          pswp.scrollWrap.ontouchend = () => {};\r\n        }\r\n      } else {\r\n        this._bindEvents('mouse', 'down', 'up');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'mouse' | 'touch' | 'pointer'} pref\r\n   * @param {'down' | 'start'} down\r\n   * @param {'up' | 'end'} up\r\n   * @param {'cancel'} [cancel]\r\n   */\r\n  _bindEvents(pref, down, up, cancel) {\r\n    const { pswp } = this;\r\n    const { events } = pswp;\r\n\r\n    const cancelEvent = cancel ? pref + cancel : '';\r\n\r\n    events.add(\r\n      pswp.scrollWrap,\r\n      pref + down,\r\n      /** @type EventListener */(this.onPointerDown.bind(this))\r\n    );\r\n    events.add(window, pref + 'move', /** @type EventListener */(this.onPointerMove.bind(this)));\r\n    events.add(window, pref + up, /** @type EventListener */(this.onPointerUp.bind(this)));\r\n    if (cancelEvent) {\r\n      events.add(\r\n        pswp.scrollWrap,\r\n        cancelEvent,\r\n        /** @type EventListener */(this.onPointerUp.bind(this))\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerDown(e) {\r\n    // We do not call preventDefault for touch events\r\n    // to allow browser to show native dialog on longpress\r\n    // (the one that allows to save image or open it in new tab).\r\n    //\r\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\r\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\r\n    const isMousePointer = e.type === 'mousedown' || e.pointerType === 'mouse';\r\n\r\n    // Allow dragging only via left mouse button.\r\n    // http://www.quirksmode.org/js/events_properties.html\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\r\n    if (isMousePointer && e.button > 0) {\r\n      return;\r\n    }\r\n\r\n    const { pswp } = this;\r\n\r\n    // if PhotoSwipe is opening or closing\r\n    if (!pswp.opener.isOpen) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (pswp.dispatch('pointerDown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (isMousePointer) {\r\n      pswp.mouseDetected();\r\n\r\n      // preventDefault mouse event to prevent\r\n      // browser image drag feature\r\n      this._preventPointerEventBehaviour(e, 'down');\r\n    }\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    this._updatePoints(e, 'down');\r\n\r\n    if (this._numActivePoints === 1) {\r\n      this.dragAxis = null;\r\n      // we need to store initial point to determine the main axis,\r\n      // drag is activated only after the axis is determined\r\n      equalizePoints(this.startP1, this.p1);\r\n    }\r\n\r\n    if (this._numActivePoints > 1) {\r\n      // Tap or double tap should not trigger if more than one pointer\r\n      this._clearTapTimer();\r\n      this.isMultitouch = true;\r\n    } else {\r\n      this.isMultitouch = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerMove(e) {\r\n    this._preventPointerEventBehaviour(e, 'move');\r\n\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'move');\r\n\r\n    if (this.pswp.dispatch('pointerMove', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 1 && !this.isDragging) {\r\n      if (!this.dragAxis) {\r\n        this._calculateDragDirection();\r\n      }\r\n\r\n      // Drag axis was detected, emit drag.start\r\n      if (this.dragAxis && !this.isDragging) {\r\n        if (this.isZooming) {\r\n          this.isZooming = false;\r\n          this.zoomLevels.end();\r\n        }\r\n\r\n        this.isDragging = true;\r\n        this._clearTapTimer(); // Tap can not trigger after drag\r\n\r\n        // Adjust starting point\r\n        this._updateStartPoints();\r\n        this._intervalTime = Date.now();\r\n        //this._startTime = this._intervalTime;\r\n        this._velocityCalculated = false;\r\n        equalizePoints(this._intervalP1, this.p1);\r\n        this.velocity.x = 0;\r\n        this.velocity.y = 0;\r\n        this.drag.start();\r\n\r\n        this._rafStopLoop();\r\n        this._rafRenderLoop();\r\n      }\r\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\r\n      this._finishDrag();\r\n\r\n      this.isZooming = true;\r\n\r\n      // Adjust starting points\r\n      this._updateStartPoints();\r\n\r\n      this.zoomLevels.start();\r\n\r\n      this._rafStopLoop();\r\n      this._rafRenderLoop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finishDrag() {\r\n    if (this.isDragging) {\r\n      this.isDragging = false;\r\n\r\n      // Try to calculate velocity,\r\n      // if it wasn't calculated yet in drag.change\r\n      if (!this._velocityCalculated) {\r\n        this._updateVelocity(true);\r\n      }\r\n\r\n      this.drag.end();\r\n      this.dragAxis = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerUp(e) {\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'up');\r\n\r\n    if (this.pswp.dispatch('pointerUp', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 0) {\r\n      this._rafStopLoop();\r\n\r\n      if (this.isDragging) {\r\n        this._finishDrag();\r\n      } else if (!this.isZooming && !this.isMultitouch) {\r\n        //this.zoomLevels.correctZoomPan();\r\n        this._finishTap(e);\r\n      }\r\n    }\r\n\r\n    if (this._numActivePoints < 2 && this.isZooming) {\r\n      this.isZooming = false;\r\n      this.zoomLevels.end();\r\n\r\n      if (this._numActivePoints === 1) {\r\n        // Since we have 1 point left, we need to reinitiate drag\r\n        this.dragAxis = null;\r\n        this._updateStartPoints();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafRenderLoop() {\r\n    if (this.isDragging || this.isZooming) {\r\n      this._updateVelocity();\r\n\r\n      if (this.isDragging) {\r\n        // make sure that pointer moved since the last update\r\n        if (!pointsEqual(this.p1, this.prevP1)) {\r\n          this.drag.change();\r\n        }\r\n      } else /* if (this.isZooming) */ {\r\n        if (!pointsEqual(this.p1, this.prevP1)\r\n            || !pointsEqual(this.p2, this.prevP2)) {\r\n          this.zoomLevels.change();\r\n        }\r\n      }\r\n\r\n      this._updatePrevPoints();\r\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update velocity at 50ms interval\r\n   *\r\n   * @private\r\n   * @param {boolean} [force]\r\n   */\r\n  _updateVelocity(force) {\r\n    const time = Date.now();\r\n    const duration = time - this._intervalTime;\r\n\r\n    if (duration < 50 && !force) {\r\n      return;\r\n    }\r\n\r\n\r\n    this.velocity.x = this._getVelocity('x', duration);\r\n    this.velocity.y = this._getVelocity('y', duration);\r\n\r\n    this._intervalTime = time;\r\n    equalizePoints(this._intervalP1, this.p1);\r\n    this._velocityCalculated = true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _finishTap(e) {\r\n    const { mainScroll } = this.pswp;\r\n\r\n    // Do not trigger tap events if main scroll is shifted\r\n    if (mainScroll.isShifted()) {\r\n      // restore main scroll position\r\n      // (usually happens if stopped in the middle of animation)\r\n      mainScroll.moveIndexBy(0, true);\r\n      return;\r\n    }\r\n\r\n    // Do not trigger tap for touchcancel or pointercancel\r\n    if (e.type.indexOf('cancel') > 0) {\r\n      return;\r\n    }\r\n\r\n    // Trigger click instead of tap for mouse events\r\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\r\n      this.tapHandler.click(this.startP1, e);\r\n      return;\r\n    }\r\n\r\n    // Disable delay if there is no doubleTapAction\r\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0;\r\n\r\n    // If tapTimer is defined - we tapped recently,\r\n    // check if the current tap is close to the previous one,\r\n    // if yes - trigger double tap\r\n    if (this._tapTimer) {\r\n      this._clearTapTimer();\r\n      // Check if two taps were more or less on the same place\r\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\r\n        this.tapHandler.doubleTap(this.startP1, e);\r\n      }\r\n    } else {\r\n      equalizePoints(this._lastStartP1, this.startP1);\r\n      this._tapTimer = setTimeout(() => {\r\n        this.tapHandler.tap(this.startP1, e);\r\n        this._clearTapTimer();\r\n      }, tapDelay);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearTapTimer() {\r\n    if (this._tapTimer) {\r\n      clearTimeout(this._tapTimer);\r\n      this._tapTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get velocity for axis\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} duration\r\n   * @returns {number}\r\n   */\r\n  _getVelocity(axis, duration) {\r\n    // displacement is like distance, but can be negative.\r\n    const displacement = this.p1[axis] - this._intervalP1[axis];\r\n\r\n    if (Math.abs(displacement) > 1 && duration > 5) {\r\n      return displacement / duration;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafStopLoop() {\r\n    if (this.raf) {\r\n      cancelAnimationFrame(this.raf);\r\n      this.raf = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _preventPointerEventBehaviour(e, pointerType) {\r\n    const preventPointerEvent = this.pswp.applyFilters('preventPointerEvent', true, e, pointerType);\r\n    if (preventPointerEvent) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses and normalizes points from the touch, mouse or pointer event.\r\n   * Updates p1 and p2.\r\n   *\r\n   * @private\r\n   * @param {PointerEvent | TouchEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _updatePoints(e, pointerType) {\r\n    if (this._pointerEventEnabled) {\r\n      const pointerEvent = /** @type {PointerEvent} */ (e);\r\n      // Try to find the current pointer in ongoing pointers by its ID\r\n      const pointerIndex = this._ongoingPointers.findIndex((ongoingPointer) => {\r\n        return ongoingPointer.id === pointerEvent.pointerId;\r\n      });\r\n\r\n      if (pointerType === 'up' && pointerIndex > -1) {\r\n        // release the pointer - remove it from ongoing\r\n        this._ongoingPointers.splice(pointerIndex, 1);\r\n      } else if (pointerType === 'down' && pointerIndex === -1) {\r\n        // add new pointer\r\n        this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, { x: 0, y: 0 }));\r\n      } else if (pointerIndex > -1) {\r\n        // update existing pointer\r\n        this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\r\n      }\r\n\r\n      this._numActivePoints = this._ongoingPointers.length;\r\n\r\n      // update points that PhotoSwipe uses\r\n      // to calculate position and scale\r\n      if (this._numActivePoints > 0) {\r\n        equalizePoints(this.p1, this._ongoingPointers[0]);\r\n      }\r\n\r\n      if (this._numActivePoints > 1) {\r\n        equalizePoints(this.p2, this._ongoingPointers[1]);\r\n      }\r\n    } else {\r\n      const touchEvent = /** @type {TouchEvent} */ (e);\r\n\r\n      this._numActivePoints = 0;\r\n      if (touchEvent.type.indexOf('touch') > -1) {\r\n        // Touch Event\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\r\n        if (touchEvent.touches && touchEvent.touches.length > 0) {\r\n          this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\r\n          this._numActivePoints++;\r\n          if (touchEvent.touches.length > 1) {\r\n            this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\r\n            this._numActivePoints++;\r\n          }\r\n        }\r\n      } else {\r\n        // Mouse Event\r\n        this._convertEventPosToPoint(/** @type {PointerEvent} */ (e), this.p1);\r\n        if (pointerType === 'up') {\r\n          // clear all points on mouseup\r\n          this._numActivePoints = 0;\r\n        } else {\r\n          this._numActivePoints++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** update points that were used during previous rAF tick\r\n   * @private\r\n   */\r\n  _updatePrevPoints() {\r\n    equalizePoints(this.prevP1, this.p1);\r\n    equalizePoints(this.prevP2, this.p2);\r\n  }\r\n\r\n  /** update points at the start of gesture\r\n   * @private\r\n   */\r\n  _updateStartPoints() {\r\n    equalizePoints(this.startP1, this.p1);\r\n    equalizePoints(this.startP2, this.p2);\r\n    this._updatePrevPoints();\r\n  }\r\n\r\n  /** @private */\r\n  _calculateDragDirection() {\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      // if main scroll position is shifted – direction is always horizontal\r\n      this.dragAxis = 'x';\r\n    } else {\r\n      // calculate delta of the last touchmove tick\r\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\r\n\r\n      if (diff !== 0) {\r\n        // check if pointer was shifted horizontally or vertically\r\n        const axisToCheck = diff > 0 ? 'x' : 'y';\r\n\r\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\r\n          this.dragAxis = axisToCheck;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts touch, pointer or mouse event\r\n   * to PhotoSwipe point.\r\n   *\r\n   * @private\r\n   * @param {Touch | PointerEvent} e\r\n   * @param {Point} p\r\n   * @returns {Point}\r\n   */\r\n  _convertEventPosToPoint(e, p) {\r\n    p.x = e.pageX - this.pswp.offset.x;\r\n    p.y = e.pageY - this.pswp.offset.y;\r\n\r\n    if ('pointerId' in e) {\r\n      p.id = e.pointerId;\r\n    } else if (e.identifier !== undefined) {\r\n      p.id = e.identifier;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _onClick(e) {\r\n    // Do not allow click event to pass through after drag\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gestures;\r\n", "import {\r\n  setTransform,\r\n  createElement,\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/slide.js').default} Slide */\r\n\r\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\r\n\r\nconst MAIN_SCROLL_END_FRICTION = 0.35;\r\n\r\n\r\n// const MIN_SWIPE_TRANSITION_DURATION = 250;\r\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\r\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\r\n\r\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\r\nclass MainScroll {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.x = 0;\r\n    this.slideWidth = 0;\r\n    /** @private */\r\n    this._currPositionIndex = 0;\r\n    /** @private */\r\n    this._prevPositionIndex = 0;\r\n    /** @private */\r\n    this._containerShiftIndex = -1;\r\n\r\n    /** @type {ItemHolder[]} */\r\n    this.itemHolders = [];\r\n  }\r\n\r\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {boolean} [resizeSlides] Whether slides content should resized\r\n   */\r\n  resize(resizeSlides) {\r\n    const { pswp } = this;\r\n    const newSlideWidth = Math.round(\r\n      pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing\r\n    );\r\n    // Mobile browsers might trigger a resize event during a gesture.\r\n    // (due to toolbar appearing or hiding).\r\n    // Avoid re-adjusting main scroll position if width wasn't changed\r\n    const slideWidthChanged = (newSlideWidth !== this.slideWidth);\r\n\r\n    if (slideWidthChanged) {\r\n      this.slideWidth = newSlideWidth;\r\n      this.moveTo(this.getCurrSlideX());\r\n    }\r\n\r\n    this.itemHolders.forEach((itemHolder, index) => {\r\n      if (slideWidthChanged) {\r\n        setTransform(itemHolder.el, (index + this._containerShiftIndex)\r\n                                    * this.slideWidth);\r\n      }\r\n\r\n      if (resizeSlides && itemHolder.slide) {\r\n        itemHolder.slide.resize();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reset X position of the main scroller to zero\r\n   */\r\n  resetPosition() {\r\n    // Position on the main scroller (offset)\r\n    // it is independent from slide index\r\n    this._currPositionIndex = 0;\r\n    this._prevPositionIndex = 0;\r\n\r\n    // This will force recalculation of size on next resize()\r\n    this.slideWidth = 0;\r\n\r\n    // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\r\n    this._containerShiftIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Create and append array of three items\r\n   * that hold data about slides in DOM\r\n   */\r\n  appendHolders() {\r\n    this.itemHolders = [];\r\n\r\n    // append our three slide holders -\r\n    // previous, current, and next\r\n    for (let i = 0; i < 3; i++) {\r\n      const el = createElement('pswp__item', 'div', this.pswp.container);\r\n      el.setAttribute('role', 'group');\r\n      el.setAttribute('aria-roledescription', 'slide');\r\n      el.setAttribute('aria-hidden', 'true');\r\n\r\n      // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\r\n      el.style.display = (i === 1) ? 'block' : 'none';\r\n\r\n      this.itemHolders.push({\r\n        el,\r\n        //index: -1\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n   * @returns {boolean}\r\n   */\r\n  canBeSwiped() {\r\n    return this.pswp.getNumItems() > 1;\r\n  }\r\n\r\n  /**\r\n   * Move main scroll by X amount of slides.\r\n   * For example:\r\n   *   `-1` will move to the previous slide,\r\n   *    `0` will reset the scroll position of the current slide,\r\n   *    `3` will move three slides forward\r\n   *\r\n   * If loop option is enabled - index will be automatically looped too,\r\n   * (for example `-1` will move to the last slide of the gallery).\r\n   *\r\n   * @param {number} diff\r\n   * @param {boolean} [animate]\r\n   * @param {number} [velocityX]\r\n   * @returns {boolean} whether index was changed or not\r\n   */\r\n  moveIndexBy(diff, animate, velocityX) {\r\n    const { pswp } = this;\r\n    let newIndex = pswp.potentialIndex + diff;\r\n    const numSlides = pswp.getNumItems();\r\n\r\n    if (pswp.canLoop()) {\r\n      newIndex = pswp.getLoopedIndex(newIndex);\r\n      const distance = (diff + numSlides) % numSlides;\r\n      if (distance <= numSlides / 2) {\r\n        // go forward\r\n        diff = distance;\r\n      } else {\r\n        // go backwards\r\n        diff = distance - numSlides;\r\n      }\r\n    } else {\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      } else if (newIndex >= numSlides) {\r\n        newIndex = numSlides - 1;\r\n      }\r\n      diff = newIndex - pswp.potentialIndex;\r\n    }\r\n\r\n    pswp.potentialIndex = newIndex;\r\n    this._currPositionIndex -= diff;\r\n\r\n    pswp.animations.stopMainScroll();\r\n\r\n    const destinationX = this.getCurrSlideX();\r\n    if (!animate) {\r\n      this.moveTo(destinationX);\r\n      this.updateCurrItem();\r\n    } else {\r\n      pswp.animations.startSpring({\r\n        isMainScroll: true,\r\n        start: this.x,\r\n        end: destinationX,\r\n        velocity: velocityX || 0,\r\n        naturalFrequency: 30,\r\n        dampingRatio: 1, //0.7,\r\n        onUpdate: (x) => {\r\n          this.moveTo(x);\r\n        },\r\n        onComplete: () => {\r\n          this.updateCurrItem();\r\n          pswp.appendHeavy();\r\n        }\r\n      });\r\n\r\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\r\n      if (pswp.canLoop()) {\r\n        const currDistance = (currDiff + numSlides) % numSlides;\r\n        if (currDistance <= numSlides / 2) {\r\n          // go forward\r\n          currDiff = currDistance;\r\n        } else {\r\n          // go backwards\r\n          currDiff = currDistance - numSlides;\r\n        }\r\n      }\r\n\r\n      // Force-append new slides during transition\r\n      // if difference between slides is more than 1\r\n      if (Math.abs(currDiff) > 1) {\r\n        this.updateCurrItem();\r\n      }\r\n    }\r\n\r\n    return Boolean(diff);\r\n  }\r\n\r\n  /**\r\n   * X position of the main scroll for the current slide\r\n   * (ignores position during dragging)\r\n   * @returns {number}\r\n   */\r\n  getCurrSlideX() {\r\n    return this.slideWidth * this._currPositionIndex;\r\n  }\r\n\r\n  /**\r\n   * Whether scroll position is shifted.\r\n   * For example, it will return true if the scroll is being dragged or animated.\r\n   * @returns {boolean}\r\n   */\r\n  isShifted() {\r\n    return this.x !== this.getCurrSlideX();\r\n  }\r\n\r\n  /**\r\n   * Update slides X positions and set their content\r\n   */\r\n  updateCurrItem() {\r\n    const { pswp } = this;\r\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\r\n\r\n    if (!positionDifference) {\r\n      return;\r\n    }\r\n\r\n    this._prevPositionIndex = this._currPositionIndex;\r\n\r\n    pswp.currIndex = pswp.potentialIndex;\r\n\r\n    let diffAbs = Math.abs(positionDifference);\r\n    /** @type {ItemHolder | undefined} */\r\n    let tempHolder;\r\n\r\n    if (diffAbs >= 3) {\r\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\r\n      diffAbs = 3;\r\n\r\n      // If slides are changed by 3 screens or more - clean up previous slides\r\n      this.itemHolders.forEach((itemHolder) => {\r\n        itemHolder.slide?.destroy();\r\n        itemHolder.slide = undefined;\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < diffAbs; i++) {\r\n      if (positionDifference > 0) {\r\n        tempHolder = this.itemHolders.shift();\r\n        if (tempHolder) {\r\n          this.itemHolders[2] = tempHolder; // move first to last\r\n\r\n          this._containerShiftIndex++;\r\n\r\n          setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex - diffAbs) + i + 2);\r\n        }\r\n      } else {\r\n        tempHolder = this.itemHolders.pop();\r\n        if (tempHolder) {\r\n          this.itemHolders.unshift(tempHolder); // move last to first\r\n\r\n          this._containerShiftIndex--;\r\n\r\n          setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex + diffAbs) - i - 2);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Reset transfrom every 50ish navigations in one direction.\r\n    //\r\n    // Otherwise transform will keep growing indefinitely,\r\n    // which might cause issues as browsers have a maximum transform limit.\r\n    // I wasn't able to reach it, but just to be safe.\r\n    // This should not cause noticable lag.\r\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\r\n      this.resetPosition();\r\n      this.resize();\r\n    }\r\n\r\n    // Pan transition might be running (and consntantly updating pan position)\r\n    pswp.animations.stopAllPan();\r\n\r\n    this.itemHolders.forEach((itemHolder, i) => {\r\n      if (itemHolder.slide) {\r\n        // Slide in the 2nd holder is always active\r\n        itemHolder.slide.setIsActive(i === 1);\r\n      }\r\n    });\r\n\r\n    pswp.currSlide = this.itemHolders[1]?.slide;\r\n    pswp.contentLoader.updateLazy(positionDifference);\r\n\r\n    if (pswp.currSlide) {\r\n      pswp.currSlide.applyCurrentZoomPan();\r\n    }\r\n\r\n    pswp.dispatch('change');\r\n  }\r\n\r\n  /**\r\n   * Move the X position of the main scroll container\r\n   *\r\n   * @param {number} x\r\n   * @param {boolean} [dragging]\r\n   */\r\n  moveTo(x, dragging) {\r\n    if (!this.pswp.canLoop() && dragging) {\r\n      // Apply friction\r\n      let newSlideIndexOffset = ((this.slideWidth * this._currPositionIndex) - x) / this.slideWidth;\r\n      newSlideIndexOffset += this.pswp.currIndex;\r\n      const delta = Math.round(x - this.x);\r\n\r\n      if ((newSlideIndexOffset < 0 && delta > 0)\r\n          || (newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0)) {\r\n        x = this.x + (delta * MAIN_SCROLL_END_FRICTION);\r\n      }\r\n    }\r\n\r\n    this.x = x;\r\n\r\n    if (this.pswp.container) {\r\n      setTransform(this.pswp.container, x);\r\n    }\r\n\r\n    this.pswp.dispatch('moveMainScroll', { x, dragging: dragging ?? false });\r\n  }\r\n}\r\n\r\nexport default MainScroll;\r\n", "import { specialKeyUsed } from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Methods<T>} Methods<T>\r\n */\r\n\r\nconst KeyboardKeyCodesMap = {\r\n  Escape: 27,\r\n  z: 90,\r\n  ArrowLeft: 37,\r\n  ArrowUp: 38,\r\n  ArrowRight: 39,\r\n  ArrowDown: 40,\r\n  Tab: 9,\r\n};\r\n\r\n/**\r\n * @template {keyof KeyboardKeyCodesMap} T\r\n * @param {T} key\r\n * @param {boolean} isKeySupported\r\n * @returns {T | number | undefined}\r\n */\r\nconst getKeyboardEventKey = (key, isKeySupported) => {\r\n  return isKeySupported ? key : KeyboardKeyCodesMap[key];\r\n};\r\n\r\n/**\r\n * - Manages keyboard shortcuts.\r\n * - Helps trap focus within photoswipe.\r\n */\r\nclass Keyboard {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    /** @private */\r\n    this._wasFocused = false;\r\n\r\n    pswp.on('bindEvents', () => {\r\n      if (pswp.options.trapFocus) {\r\n        // Dialog was likely opened by keyboard if initial point is not defined\r\n        if (!pswp.options.initialPointerPos) {\r\n          // focus causes layout,\r\n          // which causes lag during the animation,\r\n          // that's why we delay it until the opener transition ends\r\n          this._focusRoot();\r\n        }\r\n\r\n        pswp.events.add(\r\n          document,\r\n          'focusin',\r\n          /** @type EventListener */(this._onFocusIn.bind(this))\r\n        );\r\n      }\r\n\r\n      pswp.events.add(document, 'keydown', /** @type EventListener */(this._onKeyDown.bind(this)));\r\n    });\r\n\r\n    const lastActiveElement = /** @type {HTMLElement} */ (document.activeElement);\r\n    pswp.on('destroy', () => {\r\n      if (pswp.options.returnFocus\r\n          && lastActiveElement\r\n          && this._wasFocused) {\r\n        lastActiveElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  _focusRoot() {\r\n    if (!this._wasFocused && this.pswp.element) {\r\n      this.pswp.element.focus();\r\n      this._wasFocused = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  _onKeyDown(e) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('keydown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (specialKeyUsed(e)) {\r\n      // don't do anything if special key pressed\r\n      // to prevent from overriding default browser actions\r\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\r\n      return;\r\n    }\r\n\r\n    /** @type {Methods<PhotoSwipe> | undefined} */\r\n    let keydownAction;\r\n    /** @type {'x' | 'y' | undefined} */\r\n    let axis;\r\n    let isForward = false;\r\n    const isKeySupported = 'key' in e;\r\n\r\n    switch (isKeySupported ? e.key : e.keyCode) {\r\n      case getKeyboardEventKey('Escape', isKeySupported):\r\n        if (pswp.options.escKey) {\r\n          keydownAction = 'close';\r\n        }\r\n        break;\r\n      case getKeyboardEventKey('z', isKeySupported):\r\n        keydownAction = 'toggleZoom';\r\n        break;\r\n      case getKeyboardEventKey('ArrowLeft', isKeySupported):\r\n        axis = 'x';\r\n        break;\r\n      case getKeyboardEventKey('ArrowUp', isKeySupported):\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('ArrowRight', isKeySupported):\r\n        axis = 'x';\r\n        isForward = true;\r\n        break;\r\n      case getKeyboardEventKey('ArrowDown', isKeySupported):\r\n        isForward = true;\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('Tab', isKeySupported):\r\n        this._focusRoot();\r\n        break;\r\n      default:\r\n    }\r\n\r\n    // if left/right/top/bottom key\r\n    if (axis) {\r\n      // prevent page scroll\r\n      e.preventDefault();\r\n\r\n      const { currSlide } = pswp;\r\n\r\n      if (pswp.options.arrowKeys\r\n          && axis === 'x'\r\n          && pswp.getNumItems() > 1) {\r\n        keydownAction = isForward ? 'next' : 'prev';\r\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\r\n        // up/down arrow keys pan the image vertically\r\n        // left/right arrow keys pan horizontally.\r\n        // Unless there is only one image,\r\n        // or arrowKeys option is disabled\r\n        currSlide.pan[axis] += isForward ? -80 : 80;\r\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\r\n      }\r\n    }\r\n\r\n    if (keydownAction) {\r\n      e.preventDefault();\r\n      // @ts-ignore\r\n      pswp[keydownAction]();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trap focus inside photoswipe\r\n   *\r\n   * @private\r\n   * @param {FocusEvent} e\r\n   */\r\n  _onFocusIn(e) {\r\n    const { template } = this.pswp;\r\n    if (template\r\n        && document !== e.target\r\n        && template !== e.target\r\n        && !template.contains(/** @type {Node} */ (e.target))) {\r\n      // focus root element\r\n      template.focus();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n", "import { setTransitionStyle, removeTransitionStyle } from './util.js';\r\n\r\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/** @typedef {Object} DefaultCssAnimationProps\r\n *\r\n * @prop {HTMLElement} target\r\n * @prop {number} [duration]\r\n * @prop {string} [easing]\r\n * @prop {string} [transform]\r\n * @prop {string} [opacity]\r\n * */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultCssAnimationProps} CssAnimationProps */\r\n\r\n/**\r\n * Runs CSS transition.\r\n */\r\nclass CSSAnimation {\r\n  /**\r\n   * onComplete can be unpredictable, be careful about current state\r\n   *\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    const {\r\n      target,\r\n      onComplete,\r\n      transform,\r\n      onFinish = () => {},\r\n      duration = 333,\r\n      easing = DEFAULT_EASING,\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    // support only transform and opacity\r\n    const prop = transform ? 'transform' : 'opacity';\r\n    const propValue = props[prop] ?? '';\r\n\r\n    /** @private */\r\n    this._target = target;\r\n    /** @private */\r\n    this._onComplete = onComplete;\r\n    /** @private */\r\n    this._finished = false;\r\n\r\n    /** @private */\r\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\r\n\r\n    // Using timeout hack to make sure that animation\r\n    // starts even if the animated property was changed recently,\r\n    // otherwise transitionend might not fire or transition won't start.\r\n    // https://drafts.csswg.org/css-transitions/#starting\r\n    //\r\n    // ¯\\_(ツ)_/¯\r\n    /** @private */\r\n    this._helperTimeout = setTimeout(() => {\r\n      setTransitionStyle(target, prop, duration, easing);\r\n      this._helperTimeout = setTimeout(() => {\r\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\r\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false);\r\n\r\n        // Safari occasionally does not emit transitionend event\r\n        // if element property was modified during the transition,\r\n        // which may be caused by resize or third party component,\r\n        // using timeout as a safety fallback\r\n        this._helperTimeout = setTimeout(() => {\r\n          this._finalizeAnimation();\r\n        }, duration + 500);\r\n        target.style[prop] = propValue;\r\n      }, 30); // Do not reduce this number\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TransitionEvent} e\r\n   */\r\n  _onTransitionEnd(e) {\r\n    if (e.target === this._target) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finalizeAnimation() {\r\n    if (!this._finished) {\r\n      this._finished = true;\r\n      this.onFinish();\r\n      if (this._onComplete) {\r\n        this._onComplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._helperTimeout) {\r\n      clearTimeout(this._helperTimeout);\r\n    }\r\n    removeTransitionStyle(this._target);\r\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\r\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\r\n    if (!this._finished) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default CSSAnimation;\r\n", "const DEFAULT_NATURAL_FREQUENCY = 12;\r\nconst DEFAULT_DAMPING_RATIO = 0.75;\r\n\r\n/**\r\n * Spring easing helper\r\n */\r\nclass SpringEaser {\r\n  /**\r\n   * @param {number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {number} [dampingRatio]\r\n   * Determines how bouncy animation will be.\r\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   * \"overshoot\" refers to part of animation that\r\n   * goes beyond the final value.\r\n   *\r\n   * @param {number} [naturalFrequency]\r\n   * Determines how fast animation will slow down.\r\n   * The higher value - the stiffer the transition will be,\r\n   * and the faster it will slow down.\r\n   * Recommended value from 10 to 50\r\n   */\r\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\r\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\r\n\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO;\r\n\r\n    // https://en.wikipedia.org/wiki/Natural_frequency\r\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\r\n\r\n    this._dampedFrequency = this._naturalFrequency;\r\n\r\n    if (this._dampingRatio < 1) {\r\n      this._dampedFrequency *= Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} deltaPosition Difference between current and end position of the animation\r\n   * @param {number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {number} Displacement, relative to the end position.\r\n   */\r\n  easeFrame(deltaPosition, deltaTime) {\r\n    // Inspired by Apple Webkit and Android spring function implementation\r\n    // https://en.wikipedia.org/wiki/Oscillation\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    // we ignore mass (assume that it's 1kg)\r\n\r\n    let displacement = 0;\r\n    let coeff;\r\n\r\n    deltaTime /= 1000;\r\n\r\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\r\n\r\n    if (this._dampingRatio === 1) {\r\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\r\n\r\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency) + coeff\r\n                        * naturalDumpingPow;\r\n    } else if (this._dampingRatio < 1) {\r\n      coeff = (1 / this._dampedFrequency)\r\n                * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\r\n\r\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\r\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\r\n\r\n      displacement = naturalDumpingPow\r\n                       * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency)\r\n                        * this._dampingRatio\r\n                        + naturalDumpingPow\r\n                        * (-this._dampedFrequency * deltaPosition * dumpedFSin\r\n                        + this._dampedFrequency * coeff * dumpedFCos);\r\n    }\r\n\r\n    // Overdamped (>1) damping ratio is not supported\r\n\r\n    return displacement;\r\n  }\r\n}\r\n\r\nexport default SpringEaser;\r\n", "import SpringEaser from './spring-easer.js';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/**\r\n * @typedef {Object} DefaultSpringAnimationProps\r\n *\r\n * @prop {number} start\r\n * @prop {number} end\r\n * @prop {number} velocity\r\n * @prop {number} [dampingRatio]\r\n * @prop {number} [naturalFrequency]\r\n * @prop {(end: number) => void} onUpdate\r\n */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultSpringAnimationProps} SpringAnimationProps */\r\n\r\nclass SpringAnimation {\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    this._raf = 0;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      velocity,\r\n      onUpdate,\r\n      onComplete,\r\n      onFinish = () => {},\r\n      dampingRatio,\r\n      naturalFrequency\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\r\n    let prevTime = Date.now();\r\n    let deltaPosition = start - end;\r\n\r\n    const animationLoop = () => {\r\n      if (this._raf) {\r\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime);\r\n\r\n        // Stop the animation if velocity is low and position is close to end\r\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\r\n          // Finalize the animation\r\n          onUpdate(end);\r\n          if (onComplete) {\r\n            onComplete();\r\n          }\r\n          this.onFinish();\r\n        } else {\r\n          prevTime = Date.now();\r\n          onUpdate(deltaPosition + end);\r\n          this._raf = requestAnimationFrame(animationLoop);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._raf = requestAnimationFrame(animationLoop);\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._raf >= 0) {\r\n      cancelAnimationFrame(this._raf);\r\n    }\r\n    this._raf = 0;\r\n  }\r\n}\r\n\r\nexport default SpringAnimation;\r\n", "import CSSAnimation from './css-animation.js';\r\nimport SpringAnimation from './spring-animation.js';\r\n\r\n/** @typedef {import('./css-animation.js').CssAnimationProps} CssAnimationProps */\r\n/** @typedef {import('./spring-animation.js').SpringAnimationProps} SpringAnimationProps */\r\n\r\n/** @typedef {Object} SharedAnimationProps\r\n * @prop {string} [name]\r\n * @prop {boolean} [isPan]\r\n * @prop {boolean} [isMainScroll]\r\n * @prop {VoidFunction} [onComplete]\r\n * @prop {VoidFunction} [onFinish]\r\n */\r\n\r\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\r\n/** @typedef {SpringAnimationProps | CssAnimationProps} AnimationProps */\r\n\r\n/**\r\n * Manages animations\r\n */\r\nclass Animations {\r\n  constructor() {\r\n    /** @type {Animation[]} */\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  startSpring(props) {\r\n    this._start(props, true);\r\n  }\r\n\r\n  /**\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  startTransition(props) {\r\n    this._start(props);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {AnimationProps} props\r\n   * @param {boolean} [isSpring]\r\n   * @returns {Animation}\r\n   */\r\n  _start(props, isSpring) {\r\n    const animation = isSpring\r\n      ? new SpringAnimation(/** @type SpringAnimationProps */ (props))\r\n      : new CSSAnimation(/** @type CssAnimationProps */ (props));\r\n\r\n    this.activeAnimations.push(animation);\r\n    animation.onFinish = () => this.stop(animation);\r\n\r\n    return animation;\r\n  }\r\n\r\n  /**\r\n   * @param {Animation} animation\r\n   */\r\n  stop(animation) {\r\n    animation.destroy();\r\n    const index = this.activeAnimations.indexOf(animation);\r\n    if (index > -1) {\r\n      this.activeAnimations.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  stopAll() { // _stopAllAnimations\r\n    this.activeAnimations.forEach((animation) => {\r\n      animation.destroy();\r\n    });\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * Stop all pan or zoom transitions\r\n   */\r\n  stopAllPan() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isPan) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  stopMainScroll() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isMainScroll) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if main scroll transition is running\r\n   */\r\n  // isMainScrollRunning() {\r\n  //   return this.activeAnimations.some((animation) => {\r\n  //     return animation.props.isMainScroll;\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Returns true if any pan or zoom transition is running\r\n   */\r\n  isPanRunning() {\r\n    return this.activeAnimations.some((animation) => {\r\n      return animation.props.isPan;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Animations;\r\n", "/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\r\nclass ScrollWheel {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    pswp.events.add(pswp.element, 'wheel', /** @type EventListener */(this._onWheel.bind(this)));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {WheelEvent} e\r\n   */\r\n  _onWheel(e) {\r\n    e.preventDefault();\r\n    const { currSlide } = this.pswp;\r\n    let { deltaX, deltaY } = e;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('wheel', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\r\n      // zoom\r\n      if (currSlide.isZoomable()) {\r\n        let zoomFactor = -deltaY;\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          zoomFactor *= 0.05;\r\n        } else {\r\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\r\n        }\r\n        zoomFactor = 2 ** zoomFactor;\r\n\r\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\r\n        currSlide.zoomTo(destZoomLevel, {\r\n          x: e.clientX,\r\n          y: e.clientY\r\n        });\r\n      }\r\n    } else {\r\n      // pan\r\n      if (currSlide.isPannable()) {\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          // 18 - average line height\r\n          deltaX *= 18;\r\n          deltaY *= 18;\r\n        }\r\n\r\n        currSlide.panTo(\r\n          currSlide.pan.x - deltaX,\r\n          currSlide.pan.y - deltaY\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScrollWheel;\r\n", "import { createElement } from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Methods<T>} Methods<T>\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementMarkupProps\r\n * @prop {boolean} [isCustomSVG]\r\n * @prop {string} inner\r\n * @prop {string} [outlineID]\r\n * @prop {number | string} [size]\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementData\r\n * @prop {DefaultUIElements | string} [name]\r\n * @prop {string} [className]\r\n * @prop {UIElementMarkup} [html]\r\n * @prop {boolean} [isButton]\r\n * @prop {keyof HTMLElementTagNameMap} [tagName]\r\n * @prop {string} [title]\r\n * @prop {string} [ariaLabel]\r\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\r\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\r\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\r\n * @prop {number} [order]\r\n */\r\n\r\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\r\n\r\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\r\n\r\n/**\r\n * @param {UIElementMarkup} [htmlData]\r\n * @returns {string}\r\n */\r\nfunction addElementHTML(htmlData) {\r\n  if (typeof htmlData === 'string') {\r\n    // Allow developers to provide full svg,\r\n    // For example:\r\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\r\n    //   <path d=\"...\" />\r\n    //   <circle ... />\r\n    // </svg>\r\n    // Can also be any HTML string.\r\n    return htmlData;\r\n  }\r\n\r\n  if (!htmlData || !htmlData.isCustomSVG) {\r\n    return '';\r\n  }\r\n\r\n  const svgData = htmlData;\r\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">';\r\n  // replace all %d with size\r\n  out = out.split('%d').join(/** @type {string} */ (svgData.size || 32));\r\n\r\n  // Icons may contain outline/shadow,\r\n  // to make it we \"clone\" base icon shape and add border to it.\r\n  // Icon itself and border are styled via CSS.\r\n  //\r\n  // Property shadowID defines ID of element that should be cloned.\r\n  if (svgData.outlineID) {\r\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\r\n  }\r\n\r\n  out += svgData.inner;\r\n\r\n  out += '</svg>';\r\n\r\n  return out;\r\n}\r\n\r\nclass UIElement {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   * @param {UIElementData} data\r\n   */\r\n  constructor(pswp, data) {\r\n    const name = data.name || data.className;\r\n    let elementHTML = data.html;\r\n\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (pswp.options[name] === false) {\r\n      // exit if element is disabled from options\r\n      return;\r\n    }\r\n\r\n    // Allow to override SVG icons from options\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\r\n      // arrowPrevSVG\r\n      // arrowNextSVG\r\n      // closeSVG\r\n      // zoomSVG\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      elementHTML = pswp.options[name + 'SVG'];\r\n    }\r\n\r\n    pswp.dispatch('uiElementCreate', { data });\r\n\r\n    let className = '';\r\n    if (data.isButton) {\r\n      className += 'pswp__button ';\r\n      className += (data.className || `pswp__button--${data.name}`);\r\n    } else {\r\n      className += (data.className || `pswp__${data.name}`);\r\n    }\r\n\r\n    let tagName = data.isButton ? (data.tagName || 'button') : (data.tagName || 'div');\r\n    tagName = /** @type {keyof HTMLElementTagNameMap} */ (tagName.toLowerCase());\r\n    /** @type {HTMLElement} */\r\n    const element = createElement(className, tagName);\r\n\r\n    if (data.isButton) {\r\n      if (tagName === 'button') {\r\n        /** @type {HTMLButtonElement} */ (element).type = 'button';\r\n      }\r\n\r\n      let { title } = data;\r\n      const { ariaLabel } = data;\r\n\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      if (typeof pswp.options[name + 'Title'] === 'string') {\r\n        // @ts-expect-error lookup only by `data.name` maybe?\r\n        title = pswp.options[name + 'Title'];\r\n      }\r\n\r\n      if (title) {\r\n        element.title = title;\r\n      }\r\n\r\n      const ariaText = ariaLabel || title;\r\n      if (ariaText) {\r\n        element.setAttribute('aria-label', ariaText);\r\n      }\r\n    }\r\n\r\n    element.innerHTML = addElementHTML(elementHTML);\r\n\r\n    if (data.onInit) {\r\n      data.onInit(element, pswp);\r\n    }\r\n\r\n    if (data.onClick) {\r\n      element.onclick = (e) => {\r\n        if (typeof data.onClick === 'string') {\r\n          // @ts-ignore\r\n          pswp[data.onClick]();\r\n        } else if (typeof data.onClick === 'function') {\r\n          data.onClick(e, element, pswp);\r\n        }\r\n      };\r\n    }\r\n\r\n    // Top bar is default position\r\n    const appendTo = data.appendTo || 'bar';\r\n    /** @type {HTMLElement | undefined} root element by default */\r\n    let container = pswp.element;\r\n    if (appendTo === 'bar') {\r\n      if (!pswp.topBar) {\r\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\r\n      }\r\n      container = pswp.topBar;\r\n    } else {\r\n      // element outside of top bar gets a secondary class\r\n      // that makes element fade out on close\r\n      element.classList.add('pswp__hide-on-close');\r\n\r\n      if (appendTo === 'wrapper') {\r\n        container = pswp.scrollWrap;\r\n      }\r\n    }\r\n\r\n    container?.appendChild(pswp.applyFilters('uiElement', element, data));\r\n  }\r\n}\r\n\r\nexport default UIElement;\r\n", "/*\r\n  Backward and forward arrow buttons\r\n */\r\n\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {PhotoSwipe} pswp\r\n * @param {boolean} [isNextButton]\r\n */\r\nfunction initArrowButton(element, pswp, isNextButton) {\r\n  element.classList.add('pswp__button--arrow');\r\n  // TODO: this should point to a unique id for this instance\r\n  element.setAttribute('aria-controls', 'pswp__items');\r\n  pswp.on('change', () => {\r\n    if (!pswp.options.loop) {\r\n      if (isNextButton) {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\r\n      } else {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex > 0);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowPrev = {\r\n  name: 'arrowPrev',\r\n  className: 'pswp__button--arrow--prev',\r\n  title: 'Previous',\r\n  order: 10,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'prev',\r\n  onInit: initArrowButton\r\n};\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowNext = {\r\n  name: 'arrowNext',\r\n  className: 'pswp__button--arrow--next',\r\n  title: 'Next',\r\n  order: 11,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'next',\r\n  onInit: (el, pswp) => {\r\n    initArrowButton(el, pswp, true);\r\n  }\r\n};\r\n", "/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst closeButton = {\r\n  name: 'close',\r\n  title: 'Close',\r\n  order: 20,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\r\n    outlineID: 'pswp__icn-close'\r\n  },\r\n  onClick: 'close'\r\n};\r\n\r\nexport default closeButton;\r\n", "/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst zoomButton = {\r\n  name: 'zoom',\r\n  title: 'Zoom',\r\n  order: 10,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\r\n    outlineID: 'pswp__icn-zoom'\r\n  },\r\n  onClick: 'toggleZoom'\r\n};\r\n\r\nexport default zoomButton;\r\n", "/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const loadingIndicator = {\r\n  name: 'preloader',\r\n  appendTo: 'bar',\r\n  order: 7,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\r\n    outlineID: 'pswp__icn-loading'\r\n  },\r\n  onInit: (indicatorElement, pswp) => {\r\n    /** @type {boolean | undefined} */\r\n    let isVisible;\r\n    /** @type {NodeJS.Timeout | null} */\r\n    let delayTimeout = null;\r\n\r\n    /**\r\n     * @param {string} className\r\n     * @param {boolean} add\r\n     */\r\n    const toggleIndicatorClass = (className, add) => {\r\n      indicatorElement.classList.toggle('pswp__preloader--' + className, add);\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} visible\r\n     */\r\n    const setIndicatorVisibility = (visible) => {\r\n      if (isVisible !== visible) {\r\n        isVisible = visible;\r\n        toggleIndicatorClass('active', visible);\r\n      }\r\n    };\r\n\r\n    const updatePreloaderVisibility = () => {\r\n      if (!pswp.currSlide?.content.isLoading()) {\r\n        setIndicatorVisibility(false);\r\n        if (delayTimeout) {\r\n          clearTimeout(delayTimeout);\r\n          delayTimeout = null;\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!delayTimeout) {\r\n        // display loading indicator with delay\r\n        delayTimeout = setTimeout(() => {\r\n          setIndicatorVisibility(Boolean(pswp.currSlide?.content.isLoading()));\r\n          delayTimeout = null;\r\n        }, pswp.options.preloaderDelay);\r\n      }\r\n    };\r\n\r\n    pswp.on('change', updatePreloaderVisibility);\r\n\r\n    pswp.on('loadComplete', (e) => {\r\n      if (pswp.currSlide === e.slide) {\r\n        updatePreloaderVisibility();\r\n      }\r\n    });\r\n\r\n    // expose the method\r\n    if (pswp.ui) {\r\n      pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\r\n    }\r\n  }\r\n};\r\n", "/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const counterIndicator = {\r\n  name: 'counter',\r\n  order: 5,\r\n  onInit: (counterElement, pswp) => {\r\n    pswp.on('change', () => {\r\n      counterElement.innerText = (pswp.currIndex + 1)\r\n                                  + pswp.options.indexIndicatorSep\r\n                                  + pswp.getNumItems();\r\n    });\r\n  }\r\n};\r\n", "import UIElement from './ui-element.js';\r\nimport { arrowPrev, arrowNext } from './button-arrow.js';\r\nimport closeButton from './button-close.js';\r\nimport zoomButton from './button-zoom.js';\r\nimport { loadingIndicator } from './loading-indicator.js';\r\nimport { counterIndicator } from './counter-indicator.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n\r\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default, it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {boolean} isZoomedIn\r\n */\r\nfunction setZoomedIn(el, isZoomedIn) {\r\n  el.classList.toggle('pswp--zoomed-in', isZoomedIn);\r\n}\r\n\r\nclass UI {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isRegistered = false;\r\n    /** @type {UIElementData[]} */\r\n    this.uiElementsData = [];\r\n    /** @type {(UIElement | UIElementData)[]} */\r\n    this.items = [];\r\n    /** @type {() => void} */\r\n    this.updatePreloaderVisibility = () => {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number | undefined}\r\n     */\r\n    this._lastUpdatedZoomLevel = undefined;\r\n  }\r\n\r\n  init() {\r\n    const { pswp } = this;\r\n    this.isRegistered = false;\r\n    this.uiElementsData = [\r\n      closeButton,\r\n      arrowPrev,\r\n      arrowNext,\r\n      zoomButton,\r\n      loadingIndicator,\r\n      counterIndicator\r\n    ];\r\n\r\n    pswp.dispatch('uiRegister');\r\n\r\n    // sort by order\r\n    this.uiElementsData.sort((a, b) => {\r\n      // default order is 0\r\n      return (a.order || 0) - (b.order || 0);\r\n    });\r\n\r\n    this.items = [];\r\n\r\n    this.isRegistered = true;\r\n    this.uiElementsData.forEach((uiElementData) => {\r\n      this.registerElement(uiElementData);\r\n    });\r\n\r\n    pswp.on('change', () => {\r\n      pswp.element?.classList.toggle('pswp--one-slide', pswp.getNumItems() === 1);\r\n    });\r\n\r\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\r\n  }\r\n\r\n  /**\r\n   * @param {UIElementData} elementData\r\n   */\r\n  registerElement(elementData) {\r\n    if (this.isRegistered) {\r\n      this.items.push(\r\n        new UIElement(this.pswp, elementData)\r\n      );\r\n    } else {\r\n      this.uiElementsData.push(elementData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired each time zoom or pan position is changed.\r\n   * Update classes that control visibility of zoom button and cursor icon.\r\n   *\r\n   * @private\r\n   */\r\n  _onZoomPanUpdate() {\r\n    const { template, currSlide, options } = this.pswp;\r\n\r\n    if (this.pswp.opener.isClosing || !template || !currSlide) {\r\n      return;\r\n    }\r\n\r\n    let { currZoomLevel } = currSlide;\r\n\r\n    // if not open yet - check against initial zoom level\r\n    if (!this.pswp.opener.isOpen) {\r\n      currZoomLevel = currSlide.zoomLevels.initial;\r\n    }\r\n\r\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\r\n      return;\r\n    }\r\n    this._lastUpdatedZoomLevel = currZoomLevel;\r\n\r\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary;\r\n\r\n    // Initial and secondary zoom levels are almost equal\r\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\r\n      // disable zoom\r\n      setZoomedIn(template, false);\r\n      template.classList.remove('pswp--zoom-allowed');\r\n      return;\r\n    }\r\n\r\n    template.classList.add('pswp--zoom-allowed');\r\n\r\n    const potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial\r\n      ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\r\n\r\n    setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\r\n\r\n    if (options.imageClickAction === 'zoom'\r\n        || options.imageClickAction === 'zoom-or-close') {\r\n      template.classList.add('pswp--click-to-zoom');\r\n    }\r\n  }\r\n}\r\n\r\nexport default UI;\r\n", "/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns Bounds\r\n */\r\nfunction getBoundsByElement(el) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n  return {\r\n    x: thumbAreaRect.left,\r\n    y: thumbAreaRect.top,\r\n    w: thumbAreaRect.width\r\n  };\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {number} imageWidth\r\n * @param {number} imageHeight\r\n * @returns Bounds\r\n */\r\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n\r\n  // fill image into the area\r\n  // (do they same as object-fit:cover does to retrieve coordinates)\r\n  const hRatio = thumbAreaRect.width / imageWidth;\r\n  const vRatio = thumbAreaRect.height / imageHeight;\r\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\r\n\r\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\r\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\r\n\r\n  /**\r\n   * Coordinates of the image,\r\n   * as if it was not cropped,\r\n   * height is calculated automatically\r\n   *\r\n   * @type {Bounds}\r\n   */\r\n  const bounds = {\r\n    x: thumbAreaRect.left + offsetX,\r\n    y: thumbAreaRect.top + offsetY,\r\n    w: imageWidth * fillZoomLevel\r\n  };\r\n\r\n  // Coordinates of inner crop area\r\n  // relative to the image\r\n  bounds.innerRect = {\r\n    w: thumbAreaRect.width,\r\n    h: thumbAreaRect.height,\r\n    x: offsetX,\r\n    y: offsetY\r\n  };\r\n\r\n  return bounds;\r\n}\r\n\r\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {number} index\r\n * @param {SlideData} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns {Bounds | undefined}\r\n */\r\nexport function getThumbBounds(index, itemData, instance) {\r\n  // legacy event, before filters were introduced\r\n  const event = instance.dispatch('thumbBounds', {\r\n    index,\r\n    itemData,\r\n    instance\r\n  });\r\n  // @ts-expect-error\r\n  if (event.thumbBounds) {\r\n    // @ts-expect-error\r\n    return event.thumbBounds;\r\n  }\r\n\r\n  const { element } = itemData;\r\n  /** @type {Bounds | undefined} */\r\n  let thumbBounds;\r\n  /** @type {HTMLElement | null | undefined} */\r\n  let thumbnail;\r\n\r\n  if (element && instance.options.thumbSelector !== false) {\r\n    const thumbSelector = instance.options.thumbSelector || 'img';\r\n    thumbnail = element.matches(thumbSelector)\r\n      ? element : /** @type {HTMLElement | null} */ (element.querySelector(thumbSelector));\r\n  }\r\n\r\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\r\n\r\n  if (thumbnail) {\r\n    if (!itemData.thumbCropped) {\r\n      thumbBounds = getBoundsByElement(thumbnail);\r\n    } else {\r\n      thumbBounds = getCroppedBoundsByElement(\r\n        thumbnail,\r\n        itemData.width || itemData.w || 0,\r\n        itemData.height || itemData.h || 0\r\n      );\r\n    }\r\n  }\r\n\r\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\r\n}\r\n", "/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n", "import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n", "import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n", "import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n", "import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n", "import {\r\n  setTransform,\r\n  equalizePoints,\r\n  decodeImage,\r\n  toTransformString\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\r\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\r\n\r\n// some browsers do not paint\r\n// elements which opacity is set to 0,\r\n// since we need to pre-render elements for the animation -\r\n// we set it to the minimum amount\r\nconst MIN_OPACITY = 0.003;\r\n\r\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\r\nclass Opener {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isClosed = true;\r\n    this.isOpen = false;\r\n    this.isClosing = false;\r\n    this.isOpening = false;\r\n    /**\r\n     * @private\r\n     * @type {number | false | undefined}\r\n     */\r\n    this._duration = undefined;\r\n    /** @private */\r\n    this._useAnimation = false;\r\n    /** @private */\r\n    this._croppedZoom = false;\r\n    /** @private */\r\n    this._animateRootOpacity = false;\r\n    /** @private */\r\n    this._animateBgOpacity = false;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | HTMLImageElement | null | undefined }\r\n     */\r\n    this._placeholder = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._opacityElement = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._cropContainer1 = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLElement | null | undefined }\r\n     */\r\n    this._cropContainer2 = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Bounds | undefined}\r\n     */\r\n    this._thumbBounds = undefined;\r\n\r\n\r\n    this._prepareOpen = this._prepareOpen.bind(this);\r\n\r\n    // Override initial zoom and pan position\r\n    pswp.on('firstZoomPan', this._prepareOpen);\r\n  }\r\n\r\n  open() {\r\n    this._prepareOpen();\r\n    this._start();\r\n  }\r\n\r\n  close() {\r\n    if (this.isClosed || this.isClosing || this.isOpening) {\r\n      // if we close during opening animation\r\n      // for now do nothing,\r\n      // browsers aren't good at changing the direction of the CSS transition\r\n      return;\r\n    }\r\n\r\n    const slide = this.pswp.currSlide;\r\n\r\n    this.isOpen = false;\r\n    this.isOpening = false;\r\n    this.isClosing = true;\r\n    this._duration = this.pswp.options.hideAnimationDuration;\r\n\r\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._applyStartProps();\r\n    setTimeout(() => {\r\n      this._start();\r\n    }, this._croppedZoom ? 30 : 0);\r\n  }\r\n\r\n  /** @private */\r\n  _prepareOpen() {\r\n    this.pswp.off('firstZoomPan', this._prepareOpen);\r\n    if (!this.isOpening) {\r\n      const slide = this.pswp.currSlide;\r\n      this.isOpening = true;\r\n      this.isClosing = false;\r\n      this._duration = this.pswp.options.showAnimationDuration;\r\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n        this._duration = 0;\r\n      }\r\n      this._applyStartProps();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _applyStartProps() {\r\n    const { pswp } = this;\r\n    const slide = this.pswp.currSlide;\r\n    const { options } = pswp;\r\n\r\n    if (options.showHideAnimationType === 'fade') {\r\n      options.showHideOpacity = true;\r\n      this._thumbBounds = undefined;\r\n    } else if (options.showHideAnimationType === 'none') {\r\n      options.showHideOpacity = false;\r\n      this._duration = 0;\r\n      this._thumbBounds = undefined;\r\n    } else if (this.isOpening && pswp._initialThumbBounds) {\r\n      // Use initial bounds if defined\r\n      this._thumbBounds = pswp._initialThumbBounds;\r\n    } else {\r\n      this._thumbBounds = this.pswp.getThumbBounds();\r\n    }\r\n\r\n    this._placeholder = slide?.getPlaceholderElement();\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Discard animations when duration is less than 50ms\r\n    this._useAnimation = Boolean(this._duration && this._duration > 50);\r\n    this._animateZoom = Boolean(this._thumbBounds)\r\n                        && slide?.content.usePlaceholder()\r\n                        && (!this.isClosing || !pswp.mainScroll.isShifted());\r\n    if (!this._animateZoom) {\r\n      this._animateRootOpacity = true;\r\n\r\n      if (this.isOpening && slide) {\r\n        slide.zoomAndPanToInitial();\r\n        slide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      this._animateRootOpacity = options.showHideOpacity ?? false;\r\n    }\r\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\r\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\r\n\r\n    if (!this._useAnimation) {\r\n      this._duration = 0;\r\n      this._animateZoom = false;\r\n      this._animateBgOpacity = false;\r\n      this._animateRootOpacity = true;\r\n      if (this.isOpening) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\r\n      // Properties are used when animation from cropped thumbnail\r\n      this._croppedZoom = true;\r\n      this._cropContainer1 = this.pswp.container;\r\n      this._cropContainer2 = this.pswp.currSlide?.holderElement;\r\n\r\n      if (pswp.container) {\r\n        pswp.container.style.overflow = 'hidden';\r\n        pswp.container.style.width = pswp.viewportSize.x + 'px';\r\n      }\r\n    } else {\r\n      this._croppedZoom = false;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n      // Apply styles before opening transition\r\n      if (this._animateRootOpacity) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      } else {\r\n        if (this._animateBgOpacity && pswp.bg) {\r\n          pswp.bg.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = '1';\r\n        }\r\n      }\r\n\r\n      if (this._animateZoom) {\r\n        this._setClosedStateZoomPan();\r\n        if (this._placeholder) {\r\n          // tell browser that we plan to animate the placeholder\r\n          this._placeholder.style.willChange = 'transform';\r\n\r\n          // hide placeholder to allow hiding of\r\n          // elements that overlap it (such as icons over the thumbnail)\r\n          this._placeholder.style.opacity = String(MIN_OPACITY);\r\n        }\r\n      }\r\n    } else if (this.isClosing) {\r\n      // hide nearby slides to make sure that\r\n      // they are not painted during the transition\r\n      if (pswp.mainScroll.itemHolders[0]) {\r\n        pswp.mainScroll.itemHolders[0].el.style.display = 'none';\r\n      }\r\n      if (pswp.mainScroll.itemHolders[2]) {\r\n        pswp.mainScroll.itemHolders[2].el.style.display = 'none';\r\n      }\r\n\r\n      if (this._croppedZoom) {\r\n        if (pswp.mainScroll.x !== 0) {\r\n          // shift the main scroller to zero position\r\n          pswp.mainScroll.resetPosition();\r\n          pswp.mainScroll.resize();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _start() {\r\n    if (this.isOpening\r\n        && this._useAnimation\r\n        && this._placeholder\r\n        && this._placeholder.tagName === 'IMG') {\r\n      // To ensure smooth animation\r\n      // we wait till the current slide image placeholder is decoded,\r\n      // but no longer than 250ms,\r\n      // and no shorter than 50ms\r\n      // (just using requestanimationframe is not enough in Firefox,\r\n      // for some reason)\r\n      new Promise((resolve) => {\r\n        let decoded = false;\r\n        let isDelaying = true;\r\n        decodeImage(/** @type {HTMLImageElement} */ (this._placeholder)).finally(() => {\r\n          decoded = true;\r\n          if (!isDelaying) {\r\n            resolve(true);\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          isDelaying = false;\r\n          if (decoded) {\r\n            resolve(true);\r\n          }\r\n        }, 50);\r\n        setTimeout(resolve, 250);\r\n      }).finally(() => this._initiate());\r\n    } else {\r\n      this._initiate();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _initiate() {\r\n    this.pswp.element?.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\r\n\r\n    this.pswp.dispatch(\r\n      this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'\r\n    );\r\n\r\n    // legacy event\r\n    this.pswp.dispatch(\r\n      /** @type {'initialZoomIn' | 'initialZoomOut'} */\r\n      ('initialZoom' + (this.isOpening ? 'In' : 'Out'))\r\n    );\r\n\r\n    this.pswp.element?.classList.toggle('pswp--ui-visible', this.isOpening);\r\n\r\n    if (this.isOpening) {\r\n      if (this._placeholder) {\r\n        // unhide the placeholder\r\n        this._placeholder.style.opacity = '1';\r\n      }\r\n      this._animateToOpenState();\r\n    } else if (this.isClosing) {\r\n      this._animateToClosedState();\r\n    }\r\n\r\n    if (!this._useAnimation) {\r\n      this._onAnimationComplete();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _onAnimationComplete() {\r\n    const { pswp } = this;\r\n    this.isOpen = this.isOpening;\r\n    this.isClosed = this.isClosing;\r\n    this.isOpening = false;\r\n    this.isClosing = false;\r\n\r\n    pswp.dispatch(\r\n      this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'\r\n    );\r\n\r\n    // legacy event\r\n    pswp.dispatch(\r\n      /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\r\n      ('initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'))\r\n    );\r\n\r\n    if (this.isClosed) {\r\n      pswp.destroy();\r\n    } else if (this.isOpen) {\r\n      if (this._animateZoom && pswp.container) {\r\n        pswp.container.style.overflow = 'visible';\r\n        pswp.container.style.width = '100%';\r\n      }\r\n      pswp.currSlide?.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToOpenState() {\r\n    const { pswp } = this;\r\n    if (this._animateZoom) {\r\n      if (this._croppedZoom && this._cropContainer1 && this._cropContainer2) {\r\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\r\n        this._animateTo(this._cropContainer2, 'transform', 'none');\r\n      }\r\n\r\n      if (pswp.currSlide) {\r\n        pswp.currSlide.zoomAndPanToInitial();\r\n        this._animateTo(\r\n          pswp.currSlide.container,\r\n          'transform',\r\n          pswp.currSlide.getCurrentTransform()\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this._animateBgOpacity && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '1');\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToClosedState() {\r\n    const { pswp } = this;\r\n\r\n    if (this._animateZoom) {\r\n      this._setClosedStateZoomPan(true);\r\n    }\r\n\r\n    // do not animate opacity if it's already at 0\r\n    if (this._animateBgOpacity && pswp.bgOpacity > 0.01 && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', '0');\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '0');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {boolean} [animate]\r\n   */\r\n  _setClosedStateZoomPan(animate) {\r\n    if (!this._thumbBounds) return;\r\n\r\n    const { pswp } = this;\r\n    const { innerRect } = this._thumbBounds;\r\n    const { currSlide, viewportSize } = pswp;\r\n\r\n    if (this._croppedZoom && innerRect && this._cropContainer1 && this._cropContainer2) {\r\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\r\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\r\n      const containerTwoPanX = viewportSize.x - innerRect.w;\r\n      const containerTwoPanY = viewportSize.y - innerRect.h;\r\n\r\n\r\n      if (animate) {\r\n        this._animateTo(\r\n          this._cropContainer1,\r\n          'transform',\r\n          toTransformString(containerOnePanX, containerOnePanY)\r\n        );\r\n\r\n        this._animateTo(\r\n          this._cropContainer2,\r\n          'transform',\r\n          toTransformString(containerTwoPanX, containerTwoPanY)\r\n        );\r\n      } else {\r\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\r\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\r\n      }\r\n    }\r\n\r\n    if (currSlide) {\r\n      equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\r\n      currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\r\n      if (animate) {\r\n        this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\r\n      } else {\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {HTMLElement} target\r\n   * @param {'transform' | 'opacity'} prop\r\n   * @param {string} propValue\r\n   */\r\n  _animateTo(target, prop, propValue) {\r\n    if (!this._duration) {\r\n      target.style[prop] = propValue;\r\n      return;\r\n    }\r\n\r\n    const { animations } = this.pswp;\r\n    /** @type {AnimationProps} */\r\n    const animProps = {\r\n      duration: this._duration,\r\n      easing: this.pswp.options.easing,\r\n      onComplete: () => {\r\n        if (!animations.activeAnimations.length) {\r\n          this._onAnimationComplete();\r\n        }\r\n      },\r\n      target,\r\n    };\r\n    animProps[prop] = propValue;\r\n    animations.startTransition(animProps);\r\n  }\r\n}\r\n\r\nexport default Opener;\r\n", "import {\r\n  createElement,\r\n  equalizePoints,\r\n  pointsEqual,\r\n  clamp,\r\n} from './util/util.js';\r\n\r\nimport DOMEvents from './util/dom-events.js';\r\nimport Slide from './slide/slide.js';\r\nimport Gestures from './gestures/gestures.js';\r\nimport MainScroll from './main-scroll.js';\r\n\r\nimport Keyboard from './keyboard.js';\r\nimport Animations from './util/animations.js';\r\nimport ScrollWheel from './scroll-wheel.js';\r\nimport UI from './ui/ui.js';\r\nimport { getViewportSize } from './util/viewport-size.js';\r\nimport { getThumbBounds } from './slide/get-thumb-bounds.js';\r\nimport PhotoSwipeBase from './core/base.js';\r\nimport Opener from './opener.js';\r\nimport ContentLoader from './slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\r\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n/** @typedef {import('./slide/get-thumb-bounds').Bounds} Bounds */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\r\n */\r\n\r\n/** @typedef {{ x: number; y: number; id?: string | number }} Point */\r\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\r\n/** @typedef {SlideData[]} DataSourceArray */\r\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\r\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\r\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\r\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\r\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\r\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\r\n\r\n/**\r\n * @typedef {string | NodeListOf<HTMLElement> | HTMLElement[] | HTMLElement} ElementProvider\r\n */\r\n\r\n/** @typedef {Partial<PreparedPhotoSwipeOptions>} PhotoSwipeOptions https://photoswipe.com/options/ */\r\n/**\r\n * @typedef {Object} PreparedPhotoSwipeOptions\r\n *\r\n * @prop {DataSource} [dataSource]\r\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\r\n * (which may be modified further from numItems event).\r\n *\r\n * Each item should contain data that you need to generate slide\r\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\r\n *\r\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\r\n *\r\n * @prop {number} bgOpacity\r\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\r\n *\r\n * @prop {number} spacing\r\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\r\n *\r\n * @prop {boolean} allowPanToNext\r\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\r\n *\r\n * @prop {boolean} loop\r\n * If set to true you'll be able to swipe from the last to the first image.\r\n * Option is always false when there are less than 3 slides.\r\n *\r\n * @prop {boolean} [wheelToZoom]\r\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\r\n *\r\n * @prop {boolean} pinchToClose\r\n * Pinch touch gesture to close the gallery.\r\n *\r\n * @prop {boolean} closeOnVerticalDrag\r\n * Vertical drag gesture to close the PhotoSwipe.\r\n *\r\n * @prop {Padding} [padding]\r\n * Slide area padding (in pixels).\r\n *\r\n * @prop {(viewportSize: Point, itemData: SlideData, index: number) => Padding} [paddingFn]\r\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\r\n *\r\n * @prop {number | false} hideAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} showAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} zoomAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {string} easing\r\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\r\n *\r\n * @prop {boolean} escKey\r\n * Esc key to close.\r\n *\r\n * @prop {boolean} arrowKeys\r\n * Left/right arrow keys for navigation.\r\n *\r\n * @prop {boolean} trapFocus\r\n * Trap focus within PhotoSwipe element while it's open.\r\n *\r\n * @prop {boolean} returnFocus\r\n * Restore focus the last active element after PhotoSwipe is closed.\r\n *\r\n * @prop {boolean} clickToCloseNonZoomable\r\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\r\n *\r\n * @prop {ActionType | ActionFn | false} imageClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} bgClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} tapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} doubleTapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {number} preloaderDelay\r\n * Delay before the loading indicator will be displayed,\r\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\r\n *\r\n * @prop {string} indexIndicatorSep\r\n * Used for slide count indicator (\"1 of 10 \").\r\n *\r\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipeBase) => Point} [getViewportSizeFn]\r\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\r\n *\r\n * @prop {string} errorMsg\r\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\r\n *\r\n * @prop {[number, number]} preload\r\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\r\n * first one - number of items to preload before the current image, second one - after the current image.\r\n * Two nearby images are always loaded.\r\n *\r\n * @prop {string} [mainClass]\r\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\r\n * Example on Styling page.\r\n *\r\n * @prop {HTMLElement} [appendToEl]\r\n * Element to which PhotoSwipe dialog will be appended when it opens.\r\n *\r\n * @prop {number} maxWidthToAnimate\r\n * Maximum width of image to animate, if initial rendered image width\r\n * is larger than this value - the opening/closing transition will be automatically disabled.\r\n *\r\n * @prop {string} [closeTitle]\r\n * Translating\r\n *\r\n * @prop {string} [zoomTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowNextTitle]\r\n * Translating\r\n *\r\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\r\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\r\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\r\n *\r\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\r\n *\r\n * @prop {number} index\r\n * Defines start slide index.\r\n *\r\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\r\n *\r\n * @prop {boolean} [arrowPrev]\r\n * @prop {boolean} [arrowNext]\r\n * @prop {boolean} [zoom]\r\n * @prop {boolean} [close]\r\n * @prop {boolean} [counter]\r\n *\r\n * @prop {string} [arrowPrevSVG]\r\n * @prop {string} [arrowNextSVG]\r\n * @prop {string} [zoomSVG]\r\n * @prop {string} [closeSVG]\r\n * @prop {string} [counterSVG]\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * @prop {string} [arrowNextTitle]\r\n * @prop {string} [zoomTitle]\r\n * @prop {string} [closeTitle]\r\n * @prop {string} [counterTitle]\r\n *\r\n * @prop {ZoomLevelOption} [initialZoomLevel]\r\n * @prop {ZoomLevelOption} [secondaryZoomLevel]\r\n * @prop {ZoomLevelOption} [maxZoomLevel]\r\n *\r\n * @prop {boolean} [mouseMovePan]\r\n * @prop {Point | null} [initialPointerPos]\r\n * @prop {boolean} [showHideOpacity]\r\n *\r\n * @prop {PhotoSwipeModuleOption} [pswpModule]\r\n * @prop {() => Promise<any>} [openPromise]\r\n * @prop {boolean} [preloadFirstSlide]\r\n * @prop {ElementProvider} [gallery]\r\n * @prop {string} [gallerySelector]\r\n * @prop {ElementProvider} [children]\r\n * @prop {string} [childSelector]\r\n * @prop {string | false} [thumbSelector]\r\n */\r\n\r\n/** @type {PreparedPhotoSwipeOptions} */\r\nconst defaultOptions = {\r\n  allowPanToNext: true,\r\n  spacing: 0.1,\r\n  loop: true,\r\n  pinchToClose: true,\r\n  closeOnVerticalDrag: true,\r\n  hideAnimationDuration: 333,\r\n  showAnimationDuration: 333,\r\n  zoomAnimationDuration: 333,\r\n  escKey: true,\r\n  arrowKeys: true,\r\n  trapFocus: true,\r\n  returnFocus: true,\r\n  maxWidthToAnimate: 4000,\r\n  clickToCloseNonZoomable: true,\r\n  imageClickAction: 'zoom-or-close',\r\n  bgClickAction: 'close',\r\n  tapAction: 'toggle-controls',\r\n  doubleTapAction: 'zoom',\r\n  indexIndicatorSep: ' / ',\r\n  preloaderDelay: 2000,\r\n  bgOpacity: 0.8,\r\n\r\n  index: 0,\r\n  errorMsg: 'The image cannot be loaded',\r\n  preload: [1, 2],\r\n  easing: 'cubic-bezier(.4,0,.22,1)'\r\n};\r\n\r\n/**\r\n * PhotoSwipe Core\r\n */\r\nclass PhotoSwipe extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.options = this._prepareOptions(options || {});\r\n\r\n    /**\r\n     * offset of viewport relative to document\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.offset = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * @type {Point}\r\n     * @private\r\n     */\r\n    this._prevViewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * Size of scrollable PhotoSwipe viewport\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.viewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * background (backdrop) opacity\r\n     */\r\n    this.bgOpacity = 1;\r\n    this.currIndex = 0;\r\n    this.potentialIndex = 0;\r\n    this.isOpen = false;\r\n    this.isDestroying = false;\r\n    this.hasMouse = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {SlideData}\r\n     */\r\n    this._initialItemData = {};\r\n    /** @type {Bounds | undefined} */\r\n    this._initialThumbBounds = undefined;\r\n\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.topBar = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.template = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.container = undefined;\r\n    /** @type {HTMLElement | undefined} */\r\n    this.scrollWrap = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.currSlide = undefined;\r\n\r\n    this.events = new DOMEvents();\r\n    this.animations = new Animations();\r\n    this.mainScroll = new MainScroll(this);\r\n    this.gestures = new Gestures(this);\r\n    this.opener = new Opener(this);\r\n    this.keyboard = new Keyboard(this);\r\n    this.contentLoader = new ContentLoader(this);\r\n  }\r\n\r\n  /** @returns {boolean} */\r\n  init() {\r\n    if (this.isOpen || this.isDestroying) {\r\n      return false;\r\n    }\r\n\r\n    this.isOpen = true;\r\n    this.dispatch('init'); // legacy\r\n    this.dispatch('beforeOpen');\r\n\r\n    this._createMainStructure();\r\n\r\n    // add classes to the root element of PhotoSwipe\r\n    let rootClasses = 'pswp--open';\r\n    if (this.gestures.supportsTouch) {\r\n      rootClasses += ' pswp--touch';\r\n    }\r\n    if (this.options.mainClass) {\r\n      rootClasses += ' ' + this.options.mainClass;\r\n    }\r\n    if (this.element) {\r\n      this.element.className += ' ' + rootClasses;\r\n    }\r\n\r\n    this.currIndex = this.options.index || 0;\r\n    this.potentialIndex = this.currIndex;\r\n    this.dispatch('firstUpdate'); // starting index can be modified here\r\n\r\n    // initialize scroll wheel handler to block the scroll\r\n    this.scrollWheel = new ScrollWheel(this);\r\n\r\n    // sanitize index\r\n    if (Number.isNaN(this.currIndex)\r\n        || this.currIndex < 0\r\n        || this.currIndex >= this.getNumItems()) {\r\n      this.currIndex = 0;\r\n    }\r\n\r\n    if (!this.gestures.supportsTouch) {\r\n      // enable mouse features if no touch support detected\r\n      this.mouseDetected();\r\n    }\r\n\r\n    // causes forced synchronous layout\r\n    this.updateSize();\r\n\r\n    this.offset.y = window.pageYOffset;\r\n\r\n    this._initialItemData = this.getItemData(this.currIndex);\r\n    this.dispatch('gettingData', {\r\n      index: this.currIndex,\r\n      data: this._initialItemData,\r\n      slide: undefined\r\n    });\r\n\r\n    // *Layout* - calculate size and position of elements here\r\n    this._initialThumbBounds = this.getThumbBounds();\r\n    this.dispatch('initialLayout');\r\n\r\n    this.on('openingAnimationEnd', () => {\r\n      const { itemHolders } = this.mainScroll;\r\n\r\n      // Add content to the previous and next slide\r\n      if (itemHolders[0]) {\r\n        itemHolders[0].el.style.display = 'block';\r\n        this.setContent(itemHolders[0], this.currIndex - 1);\r\n      }\r\n      if (itemHolders[2]) {\r\n        itemHolders[2].el.style.display = 'block';\r\n        this.setContent(itemHolders[2], this.currIndex + 1);\r\n      }\r\n\r\n      this.appendHeavy();\r\n\r\n      this.contentLoader.updateLazy();\r\n\r\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\r\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\r\n      this.dispatch('bindEvents');\r\n    });\r\n\r\n    // set content for center slide (first time)\r\n    if (this.mainScroll.itemHolders[1]) {\r\n      this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\r\n    }\r\n    this.dispatch('change');\r\n\r\n    this.opener.open();\r\n\r\n    this.dispatch('afterInit');\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get looped slide index\r\n   * (for example, -1 will return the last slide)\r\n   *\r\n   * @param {number} index\r\n   * @returns {number}\r\n   */\r\n  getLoopedIndex(index) {\r\n    const numSlides = this.getNumItems();\r\n\r\n    if (this.options.loop) {\r\n      if (index > numSlides - 1) {\r\n        index -= numSlides;\r\n      }\r\n\r\n      if (index < 0) {\r\n        index += numSlides;\r\n      }\r\n    }\r\n\r\n    return clamp(index, 0, numSlides - 1);\r\n  }\r\n\r\n  appendHeavy() {\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.appendHeavy();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change the slide\r\n   * @param {number} index New index\r\n   */\r\n  goTo(index) {\r\n    this.mainScroll.moveIndexBy(\r\n      this.getLoopedIndex(index) - this.potentialIndex\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Go to the next slide.\r\n   */\r\n  next() {\r\n    this.goTo(this.potentialIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Go to the previous slide.\r\n   */\r\n  prev() {\r\n    this.goTo(this.potentialIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js zoomTo\r\n   *\r\n   * @param {Parameters<Slide['zoomTo']>} args\r\n   */\r\n  zoomTo(...args) {\r\n    this.currSlide?.zoomTo(...args);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js toggleZoom\r\n   */\r\n  toggleZoom() {\r\n    this.currSlide?.toggleZoom();\r\n  }\r\n\r\n  /**\r\n   * Close the gallery.\r\n   * After closing transition ends - destroy it\r\n   */\r\n  close() {\r\n    if (!this.opener.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isDestroying = true;\r\n\r\n    this.dispatch('close');\r\n\r\n    this.events.removeAll();\r\n    this.opener.close();\r\n  }\r\n\r\n  /**\r\n   * Destroys the gallery:\r\n   * - instantly closes the gallery\r\n   * - unbinds events,\r\n   * - cleans intervals and timeouts\r\n   * - removes elements from DOM\r\n   */\r\n  destroy() {\r\n    if (!this.isDestroying) {\r\n      this.options.showHideAnimationType = 'none';\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    this.dispatch('destroy');\r\n\r\n    this._listeners = {};\r\n\r\n    if (this.scrollWrap) {\r\n      this.scrollWrap.ontouchmove = null;\r\n      this.scrollWrap.ontouchend = null;\r\n    }\r\n\r\n    this.element?.remove();\r\n\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.destroy();\r\n    });\r\n\r\n    this.contentLoader.destroy();\r\n    this.events.removeAll();\r\n  }\r\n\r\n  /**\r\n   * Refresh/reload content of a slide by its index\r\n   *\r\n   * @param {number} slideIndex\r\n   */\r\n  refreshSlideContent(slideIndex) {\r\n    this.contentLoader.removeByIndex(slideIndex);\r\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\r\n      let potentialHolderIndex = (this.currSlide?.index ?? 0) - 1 + i;\r\n      if (this.canLoop()) {\r\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\r\n      }\r\n      if (potentialHolderIndex === slideIndex) {\r\n        // set the new slide content\r\n        this.setContent(itemHolder, slideIndex, true);\r\n\r\n        // activate the new slide if it's current\r\n        if (i === 1) {\r\n          this.currSlide = itemHolder.slide;\r\n          itemHolder.slide?.setIsActive(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dispatch('change');\r\n  }\r\n\r\n\r\n  /**\r\n   * Set slide content\r\n   *\r\n   * @param {ItemHolder} holder mainScroll.itemHolders array item\r\n   * @param {number} index Slide index\r\n   * @param {boolean} [force] If content should be set even if index wasn't changed\r\n   */\r\n  setContent(holder, index, force) {\r\n    if (this.canLoop()) {\r\n      index = this.getLoopedIndex(index);\r\n    }\r\n\r\n    if (holder.slide) {\r\n      if (holder.slide.index === index && !force) {\r\n        // exit if holder already contains this slide\r\n        // this could be common when just three slides are used\r\n        return;\r\n      }\r\n\r\n      // destroy previous slide\r\n      holder.slide.destroy();\r\n      holder.slide = undefined;\r\n    }\r\n\r\n    // exit if no loop and index is out of bounds\r\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\r\n      return;\r\n    }\r\n\r\n    const itemData = this.getItemData(index);\r\n    holder.slide = new Slide(itemData, index, this);\r\n\r\n    // set current slide\r\n    if (index === this.currIndex) {\r\n      this.currSlide = holder.slide;\r\n    }\r\n\r\n    holder.slide.append(holder.el);\r\n  }\r\n\r\n  /** @returns {Point} */\r\n  getViewportCenterPoint() {\r\n    return {\r\n      x: this.viewportSize.x / 2,\r\n      y: this.viewportSize.y / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update size of all elements.\r\n   * Executed on init and on page resize.\r\n   *\r\n   * @param {boolean} [force] Update size even if size of viewport was not changed.\r\n   */\r\n  updateSize(force) {\r\n    // let item;\r\n    // let itemIndex;\r\n\r\n    if (this.isDestroying) {\r\n      // exit if PhotoSwipe is closed or closing\r\n      // (to avoid errors, as resize event might be delayed)\r\n      return;\r\n    }\r\n\r\n    //const newWidth = this.scrollWrap.clientWidth;\r\n    //const newHeight = this.scrollWrap.clientHeight;\r\n\r\n    const newViewportSize = getViewportSize(this.options, this);\r\n\r\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\r\n      // Exit if dimensions were not changed\r\n      return;\r\n    }\r\n\r\n    //this._prevViewportSize.x = newWidth;\r\n    //this._prevViewportSize.y = newHeight;\r\n    equalizePoints(this._prevViewportSize, newViewportSize);\r\n\r\n    this.dispatch('beforeResize');\r\n\r\n    equalizePoints(this.viewportSize, this._prevViewportSize);\r\n\r\n    this._updatePageScrollOffset();\r\n\r\n    this.dispatch('viewportSize');\r\n\r\n    // Resize slides only after opener animation is finished\r\n    // and don't re-calculate size on inital size update\r\n    this.mainScroll.resize(this.opener.isOpen);\r\n\r\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\r\n      this.mouseDetected();\r\n    }\r\n\r\n    this.dispatch('resize');\r\n  }\r\n\r\n  /**\r\n   * @param {number} opacity\r\n   */\r\n  applyBgOpacity(opacity) {\r\n    this.bgOpacity = Math.max(opacity, 0);\r\n    if (this.bg) {\r\n      this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether mouse is detected\r\n   */\r\n  mouseDetected() {\r\n    if (!this.hasMouse) {\r\n      this.hasMouse = true;\r\n      this.element?.classList.add('pswp--has_mouse');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page resize event handler\r\n   *\r\n   * @private\r\n   */\r\n  _handlePageResize() {\r\n    this.updateSize();\r\n\r\n    // In iOS webview, if element size depends on document size,\r\n    // it'll be measured incorrectly in resize event\r\n    //\r\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\r\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\r\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\r\n      setTimeout(() => {\r\n        this.updateSize();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page scroll offset is used\r\n   * to get correct coordinates\r\n   * relative to PhotoSwipe viewport.\r\n   *\r\n   * @private\r\n   */\r\n  _updatePageScrollOffset() {\r\n    this.setScrollOffset(0, window.pageYOffset);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  setScrollOffset(x, y) {\r\n    this.offset.x = x;\r\n    this.offset.y = y;\r\n    this.dispatch('updateScrollOffset');\r\n  }\r\n\r\n  /**\r\n   * Create main HTML structure of PhotoSwipe,\r\n   * and add it to DOM\r\n   *\r\n   * @private\r\n   */\r\n  _createMainStructure() {\r\n    // root DOM element of PhotoSwipe (.pswp)\r\n    this.element = createElement('pswp', 'div');\r\n    this.element.setAttribute('tabindex', '-1');\r\n    this.element.setAttribute('role', 'dialog');\r\n\r\n    // template is legacy prop\r\n    this.template = this.element;\r\n\r\n    // Background is added as a separate element,\r\n    // as animating opacity is faster than animating rgba()\r\n    this.bg = createElement('pswp__bg', 'div', this.element);\r\n    this.scrollWrap = createElement('pswp__scroll-wrap', 'section', this.element);\r\n    this.container = createElement('pswp__container', 'div', this.scrollWrap);\r\n\r\n    // aria pattern: carousel\r\n    this.scrollWrap.setAttribute('aria-roledescription', 'carousel');\r\n    this.container.setAttribute('aria-live', 'off');\r\n    this.container.setAttribute('id', 'pswp__items');\r\n\r\n    this.mainScroll.appendHolders();\r\n\r\n    this.ui = new UI(this);\r\n    this.ui.init();\r\n\r\n    // append to DOM\r\n    (this.options.appendToEl || document.body).appendChild(this.element);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get position and dimensions of small thumbnail\r\n   *   {x:,y:,w:}\r\n   *\r\n   * Height is optional (calculated based on the large image)\r\n   *\r\n   * @returns {Bounds | undefined}\r\n   */\r\n  getThumbBounds() {\r\n    return getThumbBounds(\r\n      this.currIndex,\r\n      this.currSlide ? this.currSlide.data : this._initialItemData,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * If the PhotoSwipe can have continuous loop\r\n   * @returns Boolean\r\n   */\r\n  canLoop() {\r\n    return (this.options.loop && this.getNumItems() > 2);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PhotoSwipeOptions} options\r\n   * @returns {PreparedPhotoSwipeOptions}\r\n   */\r\n  _prepareOptions(options) {\r\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\r\n      options.showHideAnimationType = 'none';\r\n      options.zoomAnimationDuration = 0;\r\n    }\r\n\r\n    /** @type {PreparedPhotoSwipeOptions} */\r\n    return {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n  }\r\n}\r\n\r\nexport default PhotoSwipe;\r\n", "const $popupHandler = document.querySelectorAll(\".open-call-popup\");\r\nconst $popupElement = document.querySelector(\"#call-popup\");\r\nconst $popupCloser = document.querySelector(\"#call-popup-closer\");\r\nconst $callPopupBanner = document.querySelector(\"#call-popup-banner\");\r\n\r\nif (!$popupElement) return;\r\n\r\n$popupHandler.forEach((btnHandler) => {\r\n  btnHandler.addEventListener(\"click\", () => {\r\n    $popupElement.classList.add(\"show-popup\");\r\n  });\r\n});\r\n\r\n$popupCloser.addEventListener(\"click\", () => {\r\n  $popupElement.classList.remove(\"show-popup\");\r\n});\r\n\r\nif (\r\n  $popupElement.addEventListener(\"click\", (el) => {\r\n    if (el.target == $popupElement) {\r\n      $popupElement.classList.remove(\"show-popup\");\r\n    }\r\n  })\r\n);\r\n", "let aboutSlider = document.querySelector(\".about-slider\");\r\nif (aboutSlider) {\r\n  var swiper = new Swiper(\".about-slider\", {\r\n    autoplay: {\r\n      delay: 5000,\r\n      disableOnInteraction: false,\r\n    },\r\n    speed: 1000,\r\n    spaceBetween: 20,\r\n    loop: true,\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\",\r\n    },\r\n  });\r\n}\r\n\r\nlet certificates = document.querySelector(\".certificates-section\");\r\nif (certificates) {\r\n  var swiper = new Swiper(\".certificates-section\", {\r\n    slidesPerView: 3,\r\n    speed: 1000,\r\n    spaceBetween: 16,\r\n\r\n    autoplay: {\r\n      delay: 5000,\r\n      disableOnInteraction: false,\r\n    },\r\n\r\n    breakpoints: {\r\n      200: {\r\n        slidesPerView: 1,\r\n      },\r\n      480: {\r\n        slidesPerView: 2,\r\n      },\r\n      700: {\r\n        slidesPerView: 3,\r\n      },\r\n    },\r\n\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\",\r\n    },\r\n\r\n    // pagination: {\r\n    //   el: \".swiper-pagination\",\r\n    //   dynamicBullets: true,\r\n    // },\r\n  });\r\n}\r\n", "/****************************************************  home text effect  */\r\nlet animateletter = document.querySelectorAll(\".animate-letter\");\r\nif (animateletter) {\r\n  const observerCallback = (entries, observer) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        typitvs(entry.target);\r\n        observer.unobserve(entry.target);\r\n      }\r\n    });\r\n  };\r\n\r\n  const observer = new IntersectionObserver(observerCallback, {\r\n    threshold: 0.2,\r\n  });\r\n\r\n  document.querySelectorAll(\".animate-letter\").forEach((element) => {\r\n    observer.observe(element);\r\n  });\r\n\r\n  function typitvs(element) {\r\n    let h2 = element.querySelector(\".animation\");\r\n    let text = h2.textContent;\r\n\r\n    h2.textContent = text.charAt(0);\r\n    let i = 1;\r\n    let len = text.length;\r\n    let interval = setInterval(function () {\r\n      if (i < len) {\r\n        h2.textContent += text[i];\r\n        i++;\r\n      } else {\r\n        clearInterval(interval);\r\n      }\r\n    }, 180);\r\n  }\r\n}\r\n\r\n/****************************************************  home-service-slider */\r\nlet mobileServiceSlider = document.querySelector(\".home-service-slider\");\r\nif (mobileServiceSlider) {\r\n  var swiper = new Swiper(\".home-service-slider\", {\r\n    slidesPerView: \"auto\",\r\n    spaceBetween: 14,\r\n    loop: true,\r\n    speed: 800,\r\n    autoplay: {\r\n      delay: 3000,\r\n      disableOnInteraction: false,\r\n    },\r\n  });\r\n}\r\n\r\n/****************************************************  tab click */\r\n\r\nfunction homePageTabs() {\r\n  const homePageTabs = document.querySelector(\"#homePageTabs\");\r\n  if (!homePageTabs) return;\r\n\r\n  const tabTitleGroup = homePageTabs.querySelector(\"#tabTitleGroup\");\r\n  const tabContentGroup = homePageTabs.querySelector(\"#tabContentGroup\");\r\n  const tabDecriptionGroup = homePageTabs.querySelectorAll(\"#content-tab\");\r\n\r\n  if (!tabTitleGroup || !tabContentGroup) return;\r\n\r\n  const tabTitleGroupInner = tabTitleGroup.querySelectorAll(\"div.tab-title\");\r\n  const tabContentGroupInner =\r\n    tabContentGroup.querySelectorAll(\"div.tab-content\");\r\n\r\n  if (!tabTitleGroupInner || !tabContentGroupInner) return;\r\n\r\n  tabTitleGroupInner[0].classList.add(\"active\");\r\n  tabContentGroupInner[0].classList.add(\"active\");\r\n\r\n  tabTitleGroupInner.forEach((tabTitle) => {\r\n    tabTitle.addEventListener(\"click\", () => {\r\n      if (tabTitle.classList.contains(\"active\")) {\r\n        tabTitle.classList.remove(\"active\");\r\n      } else {\r\n        tabTitleGroupInner.forEach((tabs) => {\r\n          tabs.classList.remove(\"active\");\r\n        });\r\n        tabTitle.classList.add(\"active\");\r\n      }\r\n      tabTitle.classList.add(\"active\");\r\n\r\n      tabContentGroupInner.forEach((tabContent) => {\r\n        tabContent.classList.remove(\"active\");\r\n\r\n        if (tabContent.dataset.tab === tabTitle.dataset.tab) {\r\n          tabContent.classList.add(\"active\");\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  tabContentGroupInner.forEach((tabContentGroup) => {\r\n    const radioButtons = tabContentGroup.querySelector(\".radio-buttons\");\r\n    const radioButtonContents = tabContentGroup.querySelector(\r\n      \".radio-button-content\"\r\n    );\r\n\r\n    if (!radioButtons || !radioButtonContents) return;\r\n\r\n    const titles = radioButtons.querySelectorAll(\".title\");\r\n    const contents = radioButtonContents.querySelectorAll(\".content\");\r\n\r\n    if (!titles || !contents) return;\r\n\r\n    titles.forEach((title) => {\r\n      title.addEventListener(\"click\", () => {\r\n        contents.forEach((content) => {\r\n          content.classList.remove(\"active\");\r\n\r\n          if (content.dataset.value === title.dataset.value) {\r\n            content.classList.add(\"active\");\r\n          }\r\n        });\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nhomePageTabs();\r\n\r\n// // js for mobile dropdown\r\n// const dropdown = document.querySelector(\"#dropdown-menu\");\r\n// if (dropdown) {\r\n//   const tabContents = document.querySelectorAll(\".tabcontent\");\r\n//   dropdown.addEventListener(\"change\", function (e) {\r\n//     for (let index = 0; index < tabContents.length; index++) {\r\n//       if (e.target.value === tabContents[index].id) {\r\n//         tabContents[index].classList.add(\"active\");\r\n//       } else {\r\n//         tabContents[index].classList.remove(\"active\");\r\n//       }\r\n//     }\r\n//   });\r\n// }\r\n\r\n/****************************************************  insurance slider */\r\n\r\nlet insuranceSlider = document.querySelector(\".insurance-slider\");\r\n\r\nif (insuranceSlider) {\r\n  var swiper = new Swiper(\".insurance-slider\", {\r\n    slidesPerView: \"auto\",\r\n    spaceBetween: 50,\r\n    loop: true,\r\n    speed: 800,\r\n    autoplay: {\r\n      delay: 3000,\r\n    },\r\n  });\r\n}\r\n\r\n/****************************************************  faq click */\r\nconst accordionItemHeaders = document.querySelectorAll(\r\n  \".accordion-item-header\"\r\n);\r\nif (accordionItemHeaders) {\r\n  // let accordionItemBody = document.querySelectorAll(\".accordion-item-body\");\r\n  accordionItemHeaders.forEach((accordionItemHeader) => {\r\n    const accordionItemBody = accordionItemHeader.nextElementSibling;\r\n    if (accordionItemHeader.classList.contains(\"active\")) {\r\n      accordionItemBody.style.maxHeight = accordionItemBody.scrollHeight + \"px\";\r\n    }\r\n    accordionItemHeader.addEventListener(\"click\", () => {\r\n      if (accordionItemHeader.classList.contains(\"active\")) {\r\n        accordionItemHeader.classList.remove(\"active\");\r\n        accordionItemBody.style.maxHeight = 0;\r\n      } else {\r\n        accordionItemHeader.classList.add(\"active\");\r\n        accordionItemBody.style.maxHeight =\r\n          accordionItemBody.scrollHeight + \"px\";\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n/****************************************************  testimonial swiper */\r\n\r\nlet testimonial = document.getElementsByClassName(\"testimonial-slider\");\r\nif (testimonial) {\r\n  var swiper = new Swiper(\".testimonial-slider\", {\r\n    slidesPerView: \"auto\",\r\n    spaceBetween: 16,\r\n    centeredSlides: false,\r\n    // loop: true,\r\n    autoplay: {\r\n      delay: 4000,\r\n      disableOnInteraction: true,\r\n      pauseOnMouseEnter: true,\r\n    },\r\n    breakpoints: {\r\n      768: {\r\n        slidesPerView: \"auto\",\r\n        spaceBetween: 16,\r\n      },\r\n    },\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n    },\r\n  });\r\n}\r\n", "// ************************************************ mobile menu\nlet mobile = document.querySelector(\".hamburger-menu\");\n\nlet close_mobile = document.getElementById(\"close-menu\");\n\nif (mobile) {\n  (function () {\n    mobile.addEventListener(\"click\", function () {\n      document.querySelector(\".mobile-menu\").classList.toggle(\"disply-menu\");\n      document.querySelector(\".mobile-menu-detail\").classList.toggle(\"active\");\n      document.body.style.overflow = \"hidden\";\n      return false;\n    });\n    close_mobile.addEventListener(\"click\", function () {\n      document.querySelector(\".mobile-menu-detail\").classList.remove(\"active\");\n      document.querySelector(\".mobile-menu\").classList.remove(\"disply-menu\");\n      document.body.style.overflow = \"auto\";\n    });\n  })();\n\n  let mobileMenuContainer = document.querySelector(\".menu-contain\");\n\n  let menuItemsHasChildren = mobileMenuContainer.querySelectorAll(\n    \"li.menu-item-has-children\"\n  );\n\n  for (let i = 0; i < menuItemsHasChildren.length; i++) {\n    menuItemsHasChildren[i].addEventListener(\"click\", function (event) {\n      event.stopPropagation();\n      let subMenu = this.getElementsByClassName(\"sub-menu\");\n      if (subMenu[0].classList.contains(\"active-sub\")) {\n        subMenu[0].style.height = 0;\n        subMenu[0].classList.remove(\"active-sub\");\n        menuItemsHasChildren[i].classList.remove(\"active-2\");\n      } else {\n        subMenu[0].classList.add(\"active-sub\");\n        subMenu[0].style.height = subMenu[0].scrollHeight + \"px\";\n        menuItemsHasChildren[i].classList.add(\"active-2\");\n      }\n    });\n  }\n}\n", "let blogSlider = document.querySelector(\".front-blogs-slider\");\r\nif (blogSlider) {\r\n  var swiper = new Swiper(\".front-blogs-slider\", {\r\n    slidesPerView: 5,\r\n    spaceBetween: 20,\r\n    loop: true,\r\n    pagination: {\r\n      el: \".swiper-pagination\",\r\n      clickable: true,\r\n    },\r\n    autoplay: {\r\n      delay: 3000,\r\n      disableOnInteraction: false,\r\n    },\r\n    breakpoints: {\r\n      999: {\r\n        slidesPerView: 3,\r\n      },\r\n      768: {\r\n        slidesPerView: 2,\r\n      },\r\n      280: {\r\n        slidesPerView: 1,\r\n      },\r\n    },\r\n  });\r\n}\r\n", "// **************************************************special blog slider with progressbar\nlet specialSlider = document.querySelector(\".special-blog-slider\");\nif (specialSlider) {\n  var swiper = new Swiper(\".special-blog-slider\", {\n    autoplay: {\n      delay: 5000,\n      disableOnInteraction: false,\n    },\n    speed: 1000,\n    loop: true,\n    spaceBetween: 20,\n    pagination: {\n      el: \".swiper-pagination\",\n      type: \"fraction\",\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n    on: {\n      init: function () {\n        var progressBarItems = document.querySelectorAll(\n          \".swiper-progress-bar\"\n        );\n        progressBarItems.forEach(function (item, index) {\n          item.classList.remove(\"animate\");\n          item.classList.remove(\"active\");\n          if (index === 0) {\n            item.classList.add(\"animate\");\n            item.classList.add(\"active\");\n          }\n        });\n      },\n      slideChangeTransitionStart: function () {\n        var progressBarItems = document.querySelectorAll(\n          \".swiper-progress-bar\"\n        );\n        progressBarItems.forEach(function (item) {\n          item.classList.remove(\"animate\");\n          item.classList.remove(\"active\");\n        });\n        progressBarItems[0].classList.add(\"active\");\n      },\n      slideChangeTransitionEnd: function () {\n        var progressBarItems = document.querySelectorAll(\n          \".swiper-progress-bar\"\n        );\n        progressBarItems[0].classList.add(\"animate\");\n      },\n    },\n  });\n}\n", "let sectionHeadings = document.querySelectorAll(\"#content-single h2 ,#content-single h3\");\nlet scrollList = document.querySelector(\".scroll-list\");\nif (sectionHeadings && scrollList) {\n  let scrollList = document.querySelector(\".scroll-list\");\n  let counter = 1;\n  // Assign id\n  sectionHeadings.forEach(function (heading, index) {\n    // Create a random ID\n    let randomId = \"section-\" + counter;\n    // Assign the ID to the heading\n    heading.id = randomId;\n\n    // Assign the ID to  headings h2 , h3 in the blog content\n    let contentHeadings = document.querySelectorAll(\"#content-single h2 , #content-single h3\");\n    contentHeadings[index].id = randomId;\n\n\n    // Create a link in the quick access list\n    let listItem = document.createElement(\"li\");\n    if (contentHeadings[index].tagName === \"H3\") {\n      listItem.classList.add(\"sub-li\");\n     \n    }\n   \n    let link = document.createElement(\"a\");\n    link.textContent = heading.textContent;\n    link.href = \"#\" + randomId;\n    listItem.appendChild(link);\n    scrollList.appendChild(listItem);\n    counter++;\n  });\n}\n", "// ****************************************************** service-box\nlet serviceBox = document.querySelectorAll(\".service-box\");\n\nif (serviceBox) {\n    serviceBox.forEach(box => {\n\n\n        box.addEventListener('click', () => {\n            if (box.classList.contains('active')) {\n                box.classList.remove('active');\n            } else {\n                serviceBox.forEach(otherBox => {\n                    otherBox.classList.remove('active');\n                });\n                box.classList.add('active');\n\n            }\n        });\n\n    });\n};\n\n// ******************************************************doctors-slider\nlet doctorsSlider = document.querySelector(\".doctors-slider\");\nif (doctorsSlider) {\n    var swiper = new Swiper(\".doctors-slider\", {\n        // autoplay: {\n        //     delay: 5000,\n        //     disableOnInteraction: false,\n        // },\n        spaceBetween: 20,\n        speed: 1000,\n        loop: true,\n        navigation: {\n            nextEl: \".swiper-button-next\",\n            prevEl: \".swiper-button-prev\",\n        },\n    });\n}\n\n// ****************************************************** video section\n\nconst mainVideo = document.getElementById('mainVideo');\nif (mainVideo) {\n    const videoThumbnails = document.querySelectorAll('.video-thumbnail');\n\n    videoThumbnails.forEach(thumbnail => {\n        thumbnail.addEventListener('click', () => {\n            const videoSrc = thumbnail.getAttribute('data-video-src');\n            mainVideo.src = videoSrc;\n\n        });\n    });\n}\n", "import Toastify from \"toastify-js\";\r\n\r\nconst successColor = \"#4caf50\";\r\nconst errorColor = \"#ef5350\";\r\n\r\nlet successText = \"\u0639\u0645\u0644\u06CC\u0627\u062A \u0628\u0627 \u0645\u0648\u0641\u0642\u06CC\u062A \u0627\u0646\u062C\u0627\u0645 \u0634\u062F\";\r\nlet errorText = \"\u0639\u0645\u0644\u06CC\u0627\u062A \u0628\u0627 \u062E\u0637\u0627 \u0645\u0648\u0627\u062C\u0647 \u0634\u062F\";\r\nlet successFormText = \"\u0641\u0631\u0645 \u0628\u0627 \u0645\u0648\u0641\u0642\u06CC\u062A \u0627\u0631\u0633\u0627\u0644 \u0634\u062F\";\r\n\r\nexport const successToast = Toastify({\r\n  text: successText,\r\n  style: {\r\n    background: successColor,\r\n  },\r\n});\r\n\r\nexport const errorToast = Toastify({\r\n  text: errorText,\r\n  style: {\r\n    background: errorColor,\r\n  },\r\n});\r\n\r\nexport const successFormToast = Toastify({\r\n  text: successFormText,\r\n  style: {\r\n    background: successColor,\r\n  },\r\n});\r\n", "import { errorToast, successFormToast } from \"./toastify\";\n\nfunction contact() {\n  const form = document.querySelector(\"#contact_form\");\n\n  if (!form) return;\n\n  form.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n\n    const formData = new FormData(form);\n    formData.append(\"nonce\", rest_details.nonce);\n\n    jQuery(($) => {\n      $.ajax({\n        url: rest_details.url + \"cynApi/v1/contactForm\",\n        type: \"post\",\n        cache: false,\n        processData: false,\n        contentType: false,\n        data: formData,\n\n        success: (res) => {\n          successFormToast.showToast();\n          form.reset();\n        },\n\n        error: (err) => {\n          errorToast.showToast();\n        },\n      });\n    });\n  });\n}\n\ncontact();\n", "import { errorToast, successFormToast } from \"./toastify\";\r\n\r\nfunction testimonial() {\r\n  const formComment = document.querySelector(\"#service_comment_form\");\r\n\r\n  if (!formComment) return;\r\n\r\n  formComment.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(formComment);\r\n    formData.append(\"nonce\", rest_details.nonce);\r\n\r\n    jQuery(($) => {\r\n      $.ajax({\r\n        url: rest_details.url + \"cynApi/v1/testimonialForm\",\r\n        type: \"post\",\r\n        cache: false,\r\n        processData: false,\r\n        contentType: false,\r\n        data: formData,\r\n\r\n        success: (res) => {\r\n          successFormToast.showToast();\r\n          formComment.reset();\r\n        },\r\n\r\n        error: (err) => {\r\n          errorToast.showToast();\r\n        },\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\ntestimonial();\r\n", "let mobileCategoryList = document.querySelector(\"#mobile-category-list\");\nif (mobileCategoryList) {\n  let options = mobileCategoryList.querySelectorAll(\"option\");\n\n  for (let i = 0; i < options.length; i++) {\n    mobileCategoryList.addEventListener(\"change\", function () {\n      window.location = this.value;\n    });\n  }\n}\n", "console.clear();\nlet speed = 50;\nlet allTicker = document.querySelectorAll(\".ticker-custom\");\nif(allTicker){\nfor(let i= 0; i< allTicker.length; i++){\n    \n    let target=  allTicker[i];\n    const original_html = target.innerHTML;\n    const new_html = \"<div class='ticker-items'>\" + original_html + \"</div>\";\n    target.innerHTML = new_html;\n    target.innerHTML = target.innerHTML + new_html;\n    \n    const tickerWidth = document.querySelector(\".ticker-items\").offsetWidth;\n    const initDuration = tickerWidth / speed;\n    \n    gsap.to(\".ticker-items\", {\n        duration: initDuration,\n        xPercent: -100,\n        ease: \"none\",\n        repeat: -1,\n    \n    });\n}\n}\n", "import Plyr from \"plyr\";\r\n\r\ncontrols: [\r\n  \"play-large\", // The large play button in the center\r\n  \"restart\", // Restart playback\r\n  \"rewind\", // Rewind by the seek time (default 10 seconds)\r\n  \"play\", // Play/pause playback\r\n  \"fast-forward\", // Fast forward by the seek time (default 10 seconds)\r\n  \"progress\", // The progress bar and scrubber for playback and buffering\r\n  \"current-time\", // The current time of playback\r\n  \"duration\", // The full duration of the media\r\n  \"mute\", // Toggle mute\r\n  \"volume\", // Volume control\r\n  \"captions\", // Toggle captions\r\n  \"settings\", // Settings menu\r\n  \"pip\", // Picture-in-picture (currently Safari only)\r\n  \"airplay\", // Airplay (currently Safari only)\r\n  \"download\", // Show a download button with a link to either the current source or a custom URL you specify in your options\r\n  \"fullscreen\", // Toggle fullscreen\r\n];\r\n\r\nconst players = Plyr.setup(\".audio-player\", {\r\n  controls: [\"play\", \"progress\", \"current-time\", \"mute\", \"volume\"],\r\n});\r\n\r\nconst player = Plyr.setup(\".video-player\", {\r\n  controls: [\"play\", \"progress\", \"current-time\", \"mute\", \"fullscreen\"],\r\n});\r\n", "/*!\n  * PhotoSwipe Lightbox 5.4.4 - https://photoswipe.com\n  * (c) 2024 Dmytro Semenov\n  */\nfunction t(t,i,s){const h=document.createElement(i);return t&&(h.className=t),s&&s.appendChild(h),h}function i(t,i,s){t.style.width=\"number\"==typeof i?`${i}px`:i,t.style.height=\"number\"==typeof s?`${s}px`:s}const s=\"idle\",h=\"loading\",e=\"loaded\",n=\"error\";function o(t,i,s=document){let h=[];if(t instanceof Element)h=[t];else if(t instanceof NodeList||Array.isArray(t))h=Array.from(t);else{const e=\"string\"==typeof t?t:i;e&&(h=Array.from(s.querySelectorAll(e)))}return h}function r(){return!(!navigator.vendor||!navigator.vendor.match(/apple/i))}class l{constructor(t,i){this.type=t,this.defaultPrevented=!1,i&&Object.assign(this,i)}preventDefault(){this.defaultPrevented=!0}}class a{constructor(i,s){if(this.element=t(\"pswp__img pswp__img--placeholder\",i?\"img\":\"div\",s),i){const t=this.element;t.decoding=\"async\",t.alt=\"\",t.src=i,t.setAttribute(\"role\",\"presentation\")}this.element.setAttribute(\"aria-hidden\",\"true\")}setDisplayedSize(t,s){this.element&&(\"IMG\"===this.element.tagName?(i(this.element,250,\"auto\"),this.element.style.transformOrigin=\"0 0\",this.element.style.transform=function(t,i,s){let h=`translate3d(${t}px,${i||0}px,0)`;return void 0!==s&&(h+=` scale3d(${s},${s},1)`),h}(0,0,t/250)):i(this.element,t,s))}destroy(){var t;null!==(t=this.element)&&void 0!==t&&t.parentNode&&this.element.remove(),this.element=null}}class d{constructor(t,i,h){this.instance=i,this.data=t,this.index=h,this.element=void 0,this.placeholder=void 0,this.slide=void 0,this.displayedImageWidth=0,this.displayedImageHeight=0,this.width=Number(this.data.w)||Number(this.data.width)||0,this.height=Number(this.data.h)||Number(this.data.height)||0,this.isAttached=!1,this.hasSlide=!1,this.isDecoding=!1,this.state=s,this.data.type?this.type=this.data.type:this.data.src?this.type=\"image\":this.type=\"html\",this.instance.dispatch(\"contentInit\",{content:this})}removePlaceholder(){this.placeholder&&!this.keepPlaceholder()&&setTimeout((()=>{this.placeholder&&(this.placeholder.destroy(),this.placeholder=void 0)}),1e3)}load(i,s){if(this.slide&&this.usePlaceholder())if(this.placeholder){const t=this.placeholder.element;t&&!t.parentElement&&this.slide.container.prepend(t)}else{const t=this.instance.applyFilters(\"placeholderSrc\",!(!this.data.msrc||!this.slide.isFirstSlide)&&this.data.msrc,this);this.placeholder=new a(t,this.slide.container)}this.element&&!s||this.instance.dispatch(\"contentLoad\",{content:this,isLazy:i}).defaultPrevented||(this.isImageContent()?(this.element=t(\"pswp__img\",\"img\"),this.displayedImageWidth&&this.loadImage(i)):(this.element=t(\"pswp__content\",\"div\"),this.element.innerHTML=this.data.html||\"\"),s&&this.slide&&this.slide.updateContentSize(!0))}loadImage(t){var i,s;if(!this.isImageContent()||!this.element||this.instance.dispatch(\"contentLoadImage\",{content:this,isLazy:t}).defaultPrevented)return;const e=this.element;this.updateSrcsetSizes(),this.data.srcset&&(e.srcset=this.data.srcset),e.src=null!==(i=this.data.src)&&void 0!==i?i:\"\",e.alt=null!==(s=this.data.alt)&&void 0!==s?s:\"\",this.state=h,e.complete?this.onLoaded():(e.onload=()=>{this.onLoaded()},e.onerror=()=>{this.onError()})}setSlide(t){this.slide=t,this.hasSlide=!0,this.instance=t.pswp}onLoaded(){this.state=e,this.slide&&this.element&&(this.instance.dispatch(\"loadComplete\",{slide:this.slide,content:this}),this.slide.isActive&&this.slide.heavyAppended&&!this.element.parentNode&&(this.append(),this.slide.updateContentSize(!0)),this.state!==e&&this.state!==n||this.removePlaceholder())}onError(){this.state=n,this.slide&&(this.displayError(),this.instance.dispatch(\"loadComplete\",{slide:this.slide,isError:!0,content:this}),this.instance.dispatch(\"loadError\",{slide:this.slide,content:this}))}isLoading(){return this.instance.applyFilters(\"isContentLoading\",this.state===h,this)}isError(){return this.state===n}isImageContent(){return\"image\"===this.type}setDisplayedSize(t,s){if(this.element&&(this.placeholder&&this.placeholder.setDisplayedSize(t,s),!this.instance.dispatch(\"contentResize\",{content:this,width:t,height:s}).defaultPrevented&&(i(this.element,t,s),this.isImageContent()&&!this.isError()))){const i=!this.displayedImageWidth&&t;this.displayedImageWidth=t,this.displayedImageHeight=s,i?this.loadImage(!1):this.updateSrcsetSizes(),this.slide&&this.instance.dispatch(\"imageSizeChange\",{slide:this.slide,width:t,height:s,content:this})}}isZoomable(){return this.instance.applyFilters(\"isContentZoomable\",this.isImageContent()&&this.state!==n,this)}updateSrcsetSizes(){if(!this.isImageContent()||!this.element||!this.data.srcset)return;const t=this.element,i=this.instance.applyFilters(\"srcsetSizesWidth\",this.displayedImageWidth,this);(!t.dataset.largestUsedSize||i>parseInt(t.dataset.largestUsedSize,10))&&(t.sizes=i+\"px\",t.dataset.largestUsedSize=String(i))}usePlaceholder(){return this.instance.applyFilters(\"useContentPlaceholder\",this.isImageContent(),this)}lazyLoad(){this.instance.dispatch(\"contentLazyLoad\",{content:this}).defaultPrevented||this.load(!0)}keepPlaceholder(){return this.instance.applyFilters(\"isKeepingPlaceholder\",this.isLoading(),this)}destroy(){this.hasSlide=!1,this.slide=void 0,this.instance.dispatch(\"contentDestroy\",{content:this}).defaultPrevented||(this.remove(),this.placeholder&&(this.placeholder.destroy(),this.placeholder=void 0),this.isImageContent()&&this.element&&(this.element.onload=null,this.element.onerror=null,this.element=void 0))}displayError(){if(this.slide){var i,s;let h=t(\"pswp__error-msg\",\"div\");h.innerText=null!==(i=null===(s=this.instance.options)||void 0===s?void 0:s.errorMsg)&&void 0!==i?i:\"\",h=this.instance.applyFilters(\"contentErrorElement\",h,this),this.element=t(\"pswp__content pswp__error-msg-container\",\"div\"),this.element.appendChild(h),this.slide.container.innerText=\"\",this.slide.container.appendChild(this.element),this.slide.updateContentSize(!0),this.removePlaceholder()}}append(){if(this.isAttached||!this.element)return;if(this.isAttached=!0,this.state===n)return void this.displayError();if(this.instance.dispatch(\"contentAppend\",{content:this}).defaultPrevented)return;const t=\"decode\"in this.element;this.isImageContent()?t&&this.slide&&(!this.slide.isActive||r())?(this.isDecoding=!0,this.element.decode().catch((()=>{})).finally((()=>{this.isDecoding=!1,this.appendImage()}))):this.appendImage():this.slide&&!this.element.parentNode&&this.slide.container.appendChild(this.element)}activate(){!this.instance.dispatch(\"contentActivate\",{content:this}).defaultPrevented&&this.slide&&(this.isImageContent()&&this.isDecoding&&!r()?this.appendImage():this.isError()&&this.load(!1,!0),this.slide.holderElement&&this.slide.holderElement.setAttribute(\"aria-hidden\",\"false\"))}deactivate(){this.instance.dispatch(\"contentDeactivate\",{content:this}),this.slide&&this.slide.holderElement&&this.slide.holderElement.setAttribute(\"aria-hidden\",\"true\")}remove(){this.isAttached=!1,this.instance.dispatch(\"contentRemove\",{content:this}).defaultPrevented||(this.element&&this.element.parentNode&&this.element.remove(),this.placeholder&&this.placeholder.element&&this.placeholder.element.remove())}appendImage(){this.isAttached&&(this.instance.dispatch(\"contentAppendImage\",{content:this}).defaultPrevented||(this.slide&&this.element&&!this.element.parentNode&&this.slide.container.appendChild(this.element),this.state!==e&&this.state!==n||this.removePlaceholder()))}}function c(t,i,s,h,e){let n=0;if(i.paddingFn)n=i.paddingFn(s,h,e)[t];else if(i.padding)n=i.padding[t];else{const s=\"padding\"+t[0].toUpperCase()+t.slice(1);i[s]&&(n=i[s])}return Number(n)||0}class u{constructor(t,i,s,h){this.pswp=h,this.options=t,this.itemData=i,this.index=s,this.panAreaSize=null,this.elementSize=null,this.fit=1,this.fill=1,this.vFill=1,this.initial=1,this.secondary=1,this.max=1,this.min=1}update(t,i,s){const h={x:t,y:i};this.elementSize=h,this.panAreaSize=s;const e=s.x/h.x,n=s.y/h.y;this.fit=Math.min(1,e<n?e:n),this.fill=Math.min(1,e>n?e:n),this.vFill=Math.min(1,n),this.initial=this.t(),this.secondary=this.i(),this.max=Math.max(this.initial,this.secondary,this.o()),this.min=Math.min(this.fit,this.initial,this.secondary),this.pswp&&this.pswp.dispatch(\"zoomLevelsUpdate\",{zoomLevels:this,slideData:this.itemData})}l(t){const i=t+\"ZoomLevel\",s=this.options[i];if(s)return\"function\"==typeof s?s(this):\"fill\"===s?this.fill:\"fit\"===s?this.fit:Number(s)}i(){let t=this.l(\"secondary\");return t||(t=Math.min(1,3*this.fit),this.elementSize&&t*this.elementSize.x>4e3&&(t=4e3/this.elementSize.x),t)}t(){return this.l(\"initial\")||this.fit}o(){return this.l(\"max\")||Math.max(1,4*this.fit)}}function p(t,i,s){const h=i.createContentFromData(t,s);let e;const{options:n}=i;if(n){let o;e=new u(n,t,-1),o=i.pswp?i.pswp.viewportSize:function(t,i){if(t.getViewportSizeFn){const s=t.getViewportSizeFn(t,i);if(s)return s}return{x:document.documentElement.clientWidth,y:window.innerHeight}}(n,i);const r=function(t,i,s,h){return{x:i.x-c(\"left\",t,i,s,h)-c(\"right\",t,i,s,h),y:i.y-c(\"top\",t,i,s,h)-c(\"bottom\",t,i,s,h)}}(n,o,t,s);e.update(h.width,h.height,r)}return h.lazyLoad(),e&&h.setDisplayedSize(Math.ceil(h.width*e.initial),Math.ceil(h.height*e.initial)),h}class v extends class extends class{constructor(){this.u={},this.p={},this.pswp=void 0,this.options=void 0}addFilter(t,i,s=100){var h,e,n;this.p[t]||(this.p[t]=[]),null===(h=this.p[t])||void 0===h||h.push({fn:i,priority:s}),null===(e=this.p[t])||void 0===e||e.sort(((t,i)=>t.priority-i.priority)),null===(n=this.pswp)||void 0===n||n.addFilter(t,i,s)}removeFilter(t,i){this.p[t]&&(this.p[t]=this.p[t].filter((t=>t.fn!==i))),this.pswp&&this.pswp.removeFilter(t,i)}applyFilters(t,...i){var s;return null===(s=this.p[t])||void 0===s||s.forEach((t=>{i[0]=t.fn.apply(this,i)})),i[0]}on(t,i){var s,h;this.u[t]||(this.u[t]=[]),null===(s=this.u[t])||void 0===s||s.push(i),null===(h=this.pswp)||void 0===h||h.on(t,i)}off(t,i){var s;this.u[t]&&(this.u[t]=this.u[t].filter((t=>i!==t))),null===(s=this.pswp)||void 0===s||s.off(t,i)}dispatch(t,i){var s;if(this.pswp)return this.pswp.dispatch(t,i);const h=new l(t,i);return null===(s=this.u[t])||void 0===s||s.forEach((t=>{t.call(this,h)})),h}}{getNumItems(){var t;let i=0;const s=null===(t=this.options)||void 0===t?void 0:t.dataSource;s&&\"length\"in s?i=s.length:s&&\"gallery\"in s&&(s.items||(s.items=this.v(s.gallery)),s.items&&(i=s.items.length));const h=this.dispatch(\"numItems\",{dataSource:s,numItems:i});return this.applyFilters(\"numItems\",h.numItems,s)}createContentFromData(t,i){return new d(t,this,i)}getItemData(t){var i;const s=null===(i=this.options)||void 0===i?void 0:i.dataSource;let h={};Array.isArray(s)?h=s[t]:s&&\"gallery\"in s&&(s.items||(s.items=this.v(s.gallery)),h=s.items[t]);let e=h;e instanceof Element&&(e=this.m(e));const n=this.dispatch(\"itemData\",{itemData:e||{},index:t});return this.applyFilters(\"itemData\",n.itemData,t)}v(t){var i,s;return null!==(i=this.options)&&void 0!==i&&i.children||null!==(s=this.options)&&void 0!==s&&s.childSelector?o(this.options.children,this.options.childSelector,t)||[]:[t]}m(t){const i={element:t},s=\"A\"===t.tagName?t:t.querySelector(\"a\");if(s){i.src=s.dataset.pswpSrc||s.href,s.dataset.pswpSrcset&&(i.srcset=s.dataset.pswpSrcset),i.width=s.dataset.pswpWidth?parseInt(s.dataset.pswpWidth,10):0,i.height=s.dataset.pswpHeight?parseInt(s.dataset.pswpHeight,10):0,i.w=i.width,i.h=i.height,s.dataset.pswpType&&(i.type=s.dataset.pswpType);const e=t.querySelector(\"img\");var h;if(e)i.msrc=e.currentSrc||e.src,i.alt=null!==(h=e.getAttribute(\"alt\"))&&void 0!==h?h:\"\";(s.dataset.pswpCropped||s.dataset.cropped)&&(i.thumbCropped=!0)}return this.applyFilters(\"domItemData\",i,t,s)}lazyLoadData(t,i){return p(t,this,i)}}{constructor(t){super(),this.options=t||{},this.g=0,this.shouldOpen=!1,this._=void 0,this.onThumbnailsClick=this.onThumbnailsClick.bind(this)}init(){o(this.options.gallery,this.options.gallerySelector).forEach((t=>{t.addEventListener(\"click\",this.onThumbnailsClick,!1)}))}onThumbnailsClick(t){if(function(t){return\"button\"in t&&1===t.button||t.ctrlKey||t.metaKey||t.altKey||t.shiftKey}(t)||window.pswp)return;let i={x:t.clientX,y:t.clientY};i.x||i.y||(i=null);let s=this.getClickedIndex(t);s=this.applyFilters(\"clickedIndex\",s,t,this);const h={gallery:t.currentTarget};s>=0&&(t.preventDefault(),this.loadAndOpen(s,h,i))}getClickedIndex(t){if(this.options.getClickedIndexFn)return this.options.getClickedIndexFn.call(this,t);const i=t.target,s=o(this.options.children,this.options.childSelector,t.currentTarget).findIndex((t=>t===i||t.contains(i)));return-1!==s?s:this.options.children||this.options.childSelector?-1:0}loadAndOpen(t,i,s){if(window.pswp||!this.options)return!1;if(!i&&this.options.gallery&&this.options.children){const t=o(this.options.gallery);t[0]&&(i={gallery:t[0]})}return this.options.index=t,this.options.initialPointerPos=s,this.shouldOpen=!0,this.preload(t,i),!0}preload(t,i){const{options:s}=this;i&&(s.dataSource=i);const h=[],e=typeof s.pswpModule;if(\"function\"==typeof(n=s.pswpModule)&&n.prototype&&n.prototype.goTo)h.push(Promise.resolve(s.pswpModule));else{if(\"string\"===e)throw new Error(\"pswpModule as string is no longer supported\");if(\"function\"!==e)throw new Error(\"pswpModule is not valid\");h.push(s.pswpModule())}var n;\"function\"==typeof s.openPromise&&h.push(s.openPromise()),!1!==s.preloadFirstSlide&&t>=0&&(this._=function(t,i){const s=i.getItemData(t);if(!i.dispatch(\"lazyLoadSlide\",{index:t,itemData:s}).defaultPrevented)return p(s,i,t)}(t,this));const o=++this.g;Promise.all(h).then((t=>{if(this.shouldOpen){const i=t[0];this.I(i,o)}}))}I(t,i){if(i!==this.g&&this.shouldOpen)return;if(this.shouldOpen=!1,window.pswp)return;const s=\"object\"==typeof t?new t.default(this.options):new t(this.options);this.pswp=s,window.pswp=s,Object.keys(this.u).forEach((t=>{var i;null===(i=this.u[t])||void 0===i||i.forEach((i=>{s.on(t,i)}))})),Object.keys(this.p).forEach((t=>{var i;null===(i=this.p[t])||void 0===i||i.forEach((i=>{s.addFilter(t,i.fn,i.priority)}))})),this._&&(s.contentLoader.addToCache(this._),this._=void 0),s.on(\"destroy\",(()=>{this.pswp=void 0,delete window.pswp})),s.init()}destroy(){var t;null===(t=this.pswp)||void 0===t||t.destroy(),this.shouldOpen=!1,this.u={},o(this.options.gallery,this.options.gallerySelector).forEach((t=>{t.removeEventListener(\"click\",this.onThumbnailsClick,!1)}))}}export{v as default};\n", "import PhotoSwipeLightbox from \"../libs/photoswipe-lightbox.esm.min\";\r\n\r\nconst lightbox = new PhotoSwipeLightbox({\r\n  // may select multiple \"galleries\"\r\n  gallery: \".certificate-gallery\",\r\n\r\n  // Elements within gallery (slides)\r\n  children: \"#static-thumbnails\",\r\n\r\n  // setup PhotoSwipe Core dynamic import\r\n  pswpModule: () => import(\"photoswipe\"),\r\n});\r\nlightbox.init();\r\n", "import \"./modules/about\";\r\nimport \"./modules/front-page\";\r\nimport \"./modules/menu\";\r\nimport \"./modules/blog-cart\";\r\nimport \"./modules/blogs\";\r\nimport \"./modules/quick-access\";\r\nimport \"./modules/single-service\";\r\nimport \"./modules/contact\";\r\nimport \"./modules/testimonial\";\r\nimport \"./modules/mobile-category-list\";\r\nimport \"./modules/ticker\";\r\nimport \"./modules/plyr\";\r\nimport \"./modules/toastify\";\r\nimport \"./modules/image-opener\";\r\nimport \"./modules/call-popup\";\r\n// import \"./modules/circle-bg\";\r\n"],
  "mappings": "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",
  "names": ["require_toastify", "__commonJSMin", "exports", "module", "root", "factory", "global", "Toastify", "options", "version", "divElement", "property", "avatarElement", "closeElement", "event", "width", "self", "x", "getAxisOffsetAValue", "y", "xOffset", "yOffset", "rootElement", "elementToInsert", "toastElement", "topLeftOffsetSize", "topRightOffsetSize", "offsetSize", "allToasts", "classUsed", "i", "containsClass", "height", "offset", "axis", "elem", "yourClass", "require_plyr_min", "__commonJSMin", "exports", "module", "navigator", "global", "factory", "define", "amd", "globalThis", "self", "Plyr", "this", "_defineProperty$1", "obj", "key", "value", "arg", "input", "hint", "prim", "Symbol", "toPrimitive", "res", "call", "TypeError", "String", "Number", "Object", "defineProperty", "enumerable", "configurable", "writable", "_defineProperties", "e", "t", "n", "length", "r", "_defineProperty", "ownKeys", "keys", "getOwnPropertySymbols", "filter", "getOwnPropertyDescriptor", "push", "apply", "_objectSpread2", "arguments", "forEach", "getOwnPropertyDescriptors", "defineProperties", "defaults", "addCSS", "thumbWidth", "watch", "getConstructor", "constructor", "instanceOf", "isNullOrUndefined", "isObject", "isString", "isArray", "Array", "isNodeList", "NodeList", "is", "nullOrUndefined", "object", "number", "isNaN", "string", "boolean", "Boolean", "function", "Function", "array", "nodeList", "element", "Element", "event", "Event", "empty", "round", "concat", "match", "Math", "max", "parseFloat", "toFixed", "RangeTouch", "document", "querySelector", "rangeTouch", "config", "init", "prototype", "enabled", "style", "userSelect", "webKitUserSelect", "touchAction", "listeners", "set", "target", "i", "changedTouches", "o", "getAttribute", "s", "u", "c", "getBoundingClientRect", "a", "width", "clientX", "left", "disabled", "preventDefault", "get", "bubbles", "dispatchEvent", "type", "from", "querySelectorAll", "MutationObserver", "addedNodes", "includes", "observe", "body", "childList", "subtree", "map", "documentElement", "isFunction", "isEmpty", "weakMap", "WeakMap", "nodeType", "ownerDocument", "textNode", "Text", "keyboardEvent", "KeyboardEvent", "cue", "window", "TextTrackCue", "VTTCue", "track", "TextTrack", "kind", "promise", "Promise", "then", "url", "URL", "startsWith", "hostname", "_", "transitionEndEvent", "createElement", "events", "WebkitTransition", "MozTransition", "OTransition", "transition", "find", "repaint", "delay", "setTimeout", "hidden", "offsetHeight", "browser", "isIE", "documentMode", "isEdge", "test", "userAgent", "isWebKit", "isIPhone", "maxTouchPoints", "isIPadOS", "platform", "isIos", "getDeep", "path", "split", "reduce", "extend", "sources", "source", "shift", "assign", "wrap", "elements", "wrapper", "targets", "reverse", "index", "child", "cloneNode", "parent", "parentNode", "sibling", "nextSibling", "appendChild", "insertBefore", "setAttributes", "attributes", "entries", "setAttribute", "text", "innerText", "insertElement", "removeElement", "removeChild", "emptyElement", "childNodes", "lastChild", "replaceElement", "newChild", "oldChild", "replaceChild", "getAttributesFromSelector", "sel", "existingAttributes", "existing", "selector", "trim", "className", "replace", "parts", "charAt", "class", "id", "toggleHidden", "hide", "toggleClass", "force", "method", "classList", "contains", "hasClass", "matches", "webkitMatchesSelector", "mozMatchesSelector", "msMatchesSelector", "getElements", "container", "getElement", "setFocus", "focusVisible", "focus", "preventScroll", "defaultCodecs", "support", "audio", "video", "check", "provider", "api", "ui", "rangeInput", "pip", "webkitSetPresentationMode", "pictureInPictureEnabled", "disablePictureInPicture", "airplay", "WebKitPlaybackTargetAvailabilityEvent", "playsinline", "mime", "mediaType", "isHTML5", "media", "canPlayType", "textTracks", "range", "touch", "transitions", "reducedMotion", "matchMedia", "supportsPassiveListeners", "supported", "options", "addEventListener", "removeEventListener", "toggleListener", "callback", "toggle", "passive", "capture", "eventListeners", "on", "off", "once", "onceCallback", "args", "triggerEvent", "detail", "CustomEvent", "__spreadProps", "__spreadValues", "plyr", "unbindListeners", "item", "ready", "resolve", "silencePromise", "dedupe", "indexOf", "closest", "prev", "curr", "abs", "supportsCSS", "declaration", "CSS", "supports", "standardRatios", "out", "x", "y", "validateAspectRatio", "every", "reduceAspectRatio", "ratio", "height", "getDivider", "w", "h", "divider", "getAspectRatio", "parse", "embed", "videoWidth", "videoHeight", "setAspectRatio", "isVideo", "padding", "aspectRatio", "paddingBottom", "isVimeo", "vimeo", "premium", "offsetWidth", "parseInt", "getComputedStyle", "offset", "fullscreen", "active", "transform", "add", "classNames", "videoFixedRatio", "roundAspectRatio", "tolerance", "closestRatio", "html5", "getSources", "getQualityOptions", "quality", "forced", "setup", "player", "speed", "onChange", "currentTime", "paused", "preload", "readyState", "playbackRate", "src", "play", "load", "cancelRequests", "blankVideo", "debug", "log", "format", "toString", "replaceAll", "RegExp", "toTitleCase", "toUpperCase", "slice", "toLowerCase", "toCamelCase", "getHTML", "innerHTML", "resources", "youtube", "i18n", "seekTime", "title", "k", "v", "Storage", "store", "localStorage", "getItem", "json", "JSON", "storage", "setItem", "stringify", "removeItem", "fetch", "responseType", "reject", "request", "XMLHttpRequest", "responseText", "response", "Error", "status", "open", "send", "error", "loadSprite", "prefix", "hasId", "isCached", "exists", "getElementById", "update", "data", "insertAdjacentElement", "useStorage", "cached", "content", "result", "catch", "getHours", "trunc", "getMinutes", "getSeconds", "formatTime", "time", "displayHours", "inverted", "hours", "mins", "secs", "controls", "getIconUrl", "iconUrl", "location", "host", "top", "cors", "svg4everybody", "findElements", "selectors", "buttons", "pause", "restart", "rewind", "fastForward", "mute", "settings", "captions", "progress", "inputs", "seek", "volume", "display", "buffer", "duration", "seekTooltip", "tooltip", "warn", "toggleNativeControls", "createIcon", "namespace", "iconPath", "iconPrefix", "icon", "createElementNS", "focusable", "use", "setAttributeNS", "createLabel", "attr", "join", "createBadge", "badge", "menu", "createButton", "buttonType", "props", "label", "labelPressed", "iconPressed", "some", "control", "button", "createRange", "min", "step", "autocomplete", "role", "updateRangeFill", "createProgress", "suffixKey", "played", "suffix", "createTime", "attrs", "bindMenuItemShortcuts", "menuItem", "stopPropagation", "isRadioButton", "showMenuPanel", "nextElementSibling", "firstElementChild", "previousElementSibling", "lastElementChild", "focusFirstMenuItem", "createMenuItem", "list", "checked", "flex", "children", "node", "bind", "currentTrack", "updateTimeDisplay", "updateVolume", "setRange", "muted", "pressed", "updateProgress", "setProgress", "val", "getElementsByTagName", "nodeValue", "current", "buffered", "percent", "setProperty", "updateSeekTooltip", "_this$config$markers", "_this$config$markers$", "tooltips", "tipElement", "visible", "show", "clientRect", "pageX", "point", "markers", "points", "insertAdjacentHTML", "timeUpdate", "invert", "invertTime", "seeking", "durationUpdate", "__pow", "hasDuration", "displayDuration", "setMarkers", "toggleMenuButton", "setting", "updateSetting", "pane", "panels", "default", "getLabel", "setQualityMenu", "checkMenu", "getBadge", "sort", "b", "sorting", "setCaptionsMenu", "tracks", "getTracks", "toggled", "language", "unshift", "setSpeedMenu", "minimumSpeed", "maximumSpeed", "values", "popup", "p", "firstItem", "toggleMenu", "composedPath", "isMenuItem", "getMenuSize", "tab", "clone", "position", "opacity", "removeAttribute", "scrollWidth", "scrollHeight", "size", "restore", "propertyName", "setDownloadUrl", "download", "create", "defaultAttributes", "progressContainer", "inner", "home", "backButton", "href", "urls", "isEmbed", "inject", "floor", "random", "seektime", "addProperty", "controlPressed", "labels", "setMediaMetadata", "mediaSession", "metadata", "MediaMetadata", "mediaMetadata", "artist", "album", "artwork", "_this$config$markers2", "_this$config$markers3", "containerFragment", "createDocumentFragment", "pointsFragment", "tipVisible", "toggleTip", "markerElement", "marker", "tip", "parseUrl", "safe", "parser", "buildUrlParams", "params", "URLSearchParams", "isYouTube", "protocol", "blob", "createObjectURL", "languages", "userLanguage", "trackEvents", "meta", "currentTrackNode", "languageExists", "mode", "updateCues", "setLanguage", "activeClass", "findTrack", "enableTextTrack", "has", "sortIsDefault", "sorted", "getCurrentTrack", "cues", "activeCues", "getCueAsHTML", "cueText", "caption", "autoplay", "autopause", "toggleInvert", "clickToPlay", "hideControls", "resetOnEnd", "disableContextMenu", "loop", "selected", "keyboard", "focused", "fallback", "iosNative", "seekLabel", "unmute", "enableCaptions", "disableCaptions", "enterFullscreen", "exitFullscreen", "frameTitle", "menuBack", "normal", "start", "end", "all", "reset", "advertisement", "qualityBadge", "sdk", "iframe", "googleIMA", "editable", "embedContainer", "poster", "posterEnabled", "ads", "playing", "stopped", "loading", "hover", "isTouch", "uiSupported", "noTransition", "previewThumbnails", "thumbContainer", "thumbContainerShown", "imageContainer", "timeContainer", "scrubbingContainer", "scrubbingContainerShown", "hash", "publisherId", "tagUrl", "byline", "portrait", "transparent", "customControls", "referrerPolicy", "rel", "showinfo", "iv_load_policy", "modestbranding", "noCookie", "providers", "types", "noop", "Console", "console", "Fullscreen", "_a", "_b", "scrollPosition", "scrollX", "scrollY", "scrollTo", "overflow", "viewport", "head", "property", "hasProperty", "cleanupViewport", "part", "activeElement", "first", "last", "shiftKey", "forceFallback", "nativeSupported", "requestFullscreen", "webkitEnterFullscreen", "toggleFallback", "navigationUI", "action", "cancelFullScreen", "exit", "enter", "el", "parentElement", "proxy", "trapFocus", "fullscreenEnabled", "webkitFullscreenEnabled", "mozFullScreenEnabled", "msFullscreenEnabled", "useNative", "pre", "getRootNode", "fullscreenElement", "shadowRoot", "loadImage", "minWidth", "image", "Image", "handler", "onload", "onerror", "naturalWidth", "addStyleHook", "build", "checkPlaying", "setTitle", "setPoster", "togglePoster", "enable", "backgroundImage", "backgroundSize", "toggleControls", "checkLoading", "clearTimeout", "timers", "controlsElement", "recentTouchSeek", "lastSeekTime", "Date", "now", "migrateStyles", "getPropertyValue", "removeProperty", "Listeners", "handleKey", "firstTouch", "setGutter", "useNativeAspectRatio", "maxWidth", "margin", "viewportWidth", "viewportHeight", "clientWidth", "innerWidth", "clientHeight", "innerHeight", "resized", "isAudio", "ended", "togglePlay", "proxyEvents", "defaultHandler", "customHandlerKey", "customHandler", "returned", "hasCustomHandler", "inputEvent", "forward", "toggleCaptions", "rect", "currentTarget", "attribute", "hasAttribute", "done", "seekTo", "loaded", "startMove", "endMove", "startScrubbing", "endScrubbing", "webkitDirectionInvertedFromDevice", "deltaX", "deltaY", "direction", "sign", "increaseVolume", "lastKey", "focusTimer", "lastKeyDown", "altKey", "ctrlKey", "metaKey", "repeat", "increment", "decreaseVolume", "usingNative", "loadjs_umd", "fn", "devnull", "bundleIdCache", "bundleResultCache", "bundleCallbackQueue", "subscribe", "bundleIds", "callbackFn", "bundleId", "depsNotFound", "numWaiting", "pathsNotFound", "publish", "q", "splice", "executeCallbacks", "success", "loadFile", "numTries", "isLegacyIECss", "doc", "async", "maxTries", "numRetries", "beforeCallbackFn", "before", "pathname", "pathStripped", "relList", "as", "onbeforeload", "ev", "sheet", "cssText", "code", "defaultPrevented", "loadFiles", "paths", "loadjs", "arg1", "arg2", "loadFn", "returnPromise", "deps", "isDefined", "loadScript", "assurePlaybackState", "hasPlayed", "Vimeo", "frameParams", "found", "hashParam", "sidedock", "gesture", "$2", "thumbnail_url", "Player", "disableTextTrack", "stop", "restorePause", "setVolume", "setCurrentTime", "setPlaybackRate", "setMuted", "currentSrc", "setLoop", "getVideoUrl", "getVideoWidth", "getVideoHeight", "dimensions", "setAutopause", "state", "getVideoTitle", "getCurrentTime", "getDuration", "getTextTracks", "strippedCues", "fragment", "firstChild", "getPaused", "seconds", "getHost", "YT", "onYouTubeIframeAPIReady", "getTitle", "videoId", "currentId", "undefined", "posterSrc", "playerVars", "hl", "disablekb", "cc_load_policy", "cc_lang_pref", "widget_referrer", "onError", "message", "onPlaybackRateChange", "instance", "getPlaybackRate", "onReady", "playVideo", "pauseVideo", "stopVideo", "speeds", "getAvailablePlaybackRates", "clearInterval", "buffering", "setInterval", "getVideoLoadedFraction", "lastBuffered", "onStateChange", "unMute", "Ads", "google", "ima", "trigger", "manager", "destroy", "displayContainer", "remove", "startSafetyTimer", "managerPromise", "clearSafetyTimer", "setupIMA", "setVpaidMode", "ImaSdkSettings", "VpaidMode", "ENABLED", "setLocale", "setDisableCustomPlaybackForIOS10Plus", "AdDisplayContainer", "loader", "AdsLoader", "AdsManagerLoadedEvent", "Type", "ADS_MANAGER_LOADED", "onAdsManagerLoaded", "AdErrorEvent", "AD_ERROR", "onAdError", "requestAds", "AdsRequest", "adTagUrl", "linearAdSlotWidth", "linearAdSlotHeight", "nonLinearAdSlotWidth", "nonLinearAdSlotHeight", "forceNonLinearFullSlot", "setAdWillPlayMuted", "countdownTimer", "getRemainingTime", "AdsRenderingSettings", "restoreCustomPlaybackStateOnAdBreakComplete", "enablePreloading", "getAdsManager", "cuePoints", "getCuePoints", "AdEvent", "onAdEvent", "cuePoint", "seekElement", "cuePercentage", "ad", "getAd", "adData", "getAdData", "LOADED", "pollCountdown", "isLinear", "STARTED", "ALL_ADS_COMPLETED", "loadAds", "contentComplete", "CONTENT_PAUSE_REQUESTED", "pauseContent", "CONTENT_RESUME_REQUESTED", "resumeContent", "LOG", "adError", "getMessage", "cancel", "addCuePoints", "seekedTime", "discardAdBreak", "resize", "ViewMode", "NORMAL", "initialize", "initialized", "zIndex", "handlers", "safetyTimer", "AV_PUBLISHERID", "AV_CHANNELID", "AV_URL", "cb", "AV_WIDTH", "AV_HEIGHT", "AV_CDIM2", "clamp", "parseVtt", "vttDataString", "processedList", "frame", "line", "startTime", "lineSplit", "matchTimes", "endTime", "fitRatio", "outer", "PreviewThumbnails", "getThumbnails", "render", "determineContainerAutoSizing", "sortAndResolve", "thumbnails", "promises", "getThumbnail", "thumbnail", "frames", "urlPrefix", "substring", "lastIndexOf", "tempImage", "naturalHeight", "_this$player$config$m", "_this$player$config$m2", "percentage", "mousePosX", "thumb", "showImageAtCurrentTime", "toggleThumbContainer", "mouseDown", "toggleScrubbingContainer", "ceil", "lastTime", "scrubbing", "setScrubbingContainerSize", "setThumbContainerSizeAndPos", "thumbNum", "findIndex", "hasThumb", "qualityIndex", "loadedImages", "showingThumb", "thumbFilename", "thumbUrl", "currentImageElement", "dataset", "filename", "showImage", "removeOldImages", "loadingImage", "usingSprites", "previewImage", "showingThumbFilename", "newImage", "setImageSizeAndOffset", "currentImageContainer", "preloadNearby", "getHigherQuality", "currentImage", "tagName", "removeDelay", "deleting", "oldThumbFilename", "thumbnailsClone", "foundOne", "newThumbFilename", "thumbURL", "currentQualityIndex", "previewImageHeight", "thumbContainerHeight", "clearShowing", "sizeSpecifiedInCSS", "thumbAspectRatio", "thumbHeight", "setThumbContainerPos", "scrubberRect", "containerRect", "right", "clamped", "multiplier", "lastMouseMoveTime", "currentScrubbingImageElement", "currentThumbnailImageElement", "insertElements", "change", "crossorigin", "webkitShowPlaybackTargetPicker", "isHidden", "hiding", "eventName", "soft", "original", "unload", "failed", "jQuery", "search", "truthy", "searchParams", "inputIsValid", "fauxDuration", "realDuration", "Infinity", "hasAudio", "mozHasAudio", "webkitAudioDecodedByteCount", "audioTracks", "updateStorage", "requestPictureInPicture", "exitPictureInPicture", "webkitPresentationMode", "pictureInPictureElement", "setPreviewThumbnails", "thumbnailSource", "static", "createElement", "className", "tagName", "appendToEl", "el", "document", "appendChild", "equalizePoints", "p1", "p2", "x", "y", "id", "undefined", "roundPoint", "p", "Math", "round", "getDistanceBetween", "abs", "sqrt", "pointsEqual", "clamp", "val", "min", "max", "toTransformString", "scale", "propValue", "setTransform", "style", "transform", "setTransitionStyle", "prop", "duration", "ease", "transition", "defaultCSSEasing", "setWidthHeight", "w", "h", "width", "height", "removeTransitionStyle", "decodeImage", "img", "decode", "catch", "complete", "Promise", "resolve", "reject", "onload", "onerror", "specialKeyUsed", "e", "button", "ctrlKey", "metaKey", "altKey", "shiftKey", "getElementsFromOption", "option", "legacySelector", "parent", "elements", "Element", "NodeList", "Array", "isArray", "from", "selector", "querySelectorAll", "isSafari", "navigator", "vendor", "match", "getViewportSize", "options", "pswp", "getViewportSizeFn", "newViewportSize", "documentElement", "clientWidth", "window", "innerHeight", "parsePaddingOption", "viewportSize", "itemData", "index", "paddingValue", "paddingFn", "padding", "legacyPropName", "toUpperCase", "slice", "Number", "getPanAreaSize", "project", "initialVelocity", "decelerationRate", "getZoomPointsCenter", "didTapOnMainContent", "event", "target", "closest", "addElementHTML", "htmlData", "isCustomSVG", "svgData", "out", "split", "join", "size", "outlineID", "inner", "initArrowButton", "element", "isNextButton", "classList", "add", "setAttribute", "on", "loop", "disabled", "currIndex", "getNumItems", "setZoomedIn", "isZoomedIn", "toggle", "getBoundsByElement", "thumbAreaRect", "getBoundingClientRect", "left", "top", "getCroppedBoundsByElement", "imageWidth", "imageHeight", "hRatio", "vRatio", "fillZoomLevel", "offsetX", "offsetY", "bounds", "innerRect", "getThumbBounds", "instance", "dispatch", "thumbBounds", "thumbnail", "thumbSelector", "matches", "querySelector", "applyFilters", "thumbCropped", "lazyLoadData", "content", "createContentFromData", "zoomLevel", "ZoomLevel", "panAreaSize", "update", "lazyLoad", "setDisplayedSize", "ceil", "initial", "lazyLoadSlide", "getItemData", "defaultPrevented", "LOAD_STATE", "supportsPassive", "DOMEvents", "PanBounds", "MAX_IMAGE_WIDTH", "Slide", "PAN_END_FRICTION", "VERTICAL_DRAG_FRICTION", "MIN_RATIO_TO_CLOSE", "MIN_NEXT_SLIDE_SPEED", "DragHandler", "UPPER_ZOOM_FRICTION", "LOWER_ZOOM_FRICTION", "ZoomHandler", "TapHandler", "AXIS_SWIPE_HYSTERISIS", "DOUBLE_TAP_DELAY", "MIN_TAP_DISTANCE", "Gestures", "MAIN_SCROLL_END_FRICTION", "MainScroll", "KeyboardKeyCodesMap", "getKeyboardEventKey", "Keyboard", "DEFAULT_EASING", "CSSAnimation", "DEFAULT_NATURAL_FREQUENCY", "DEFAULT_DAMPING_RATIO", "SpringEaser", "SpringAnimation", "Animations", "ScrollWheel", "UIElement", "arrowPrev", "arrowNext", "closeButton", "zoomButton", "loadingIndicator", "counterIndicator", "UI", "PhotoSwipeEvent", "Eventable", "Placeholder", "Content", "MIN_SLIDES_TO_CACHE", "ContentLoader", "PhotoSwipeBase", "MIN_OPACITY", "Opener", "defaultOptions", "PhotoSwipe", "IDLE", "LOADING", "LOADED", "ERROR", "addEventListener", "Object", "defineProperty", "get", "constructor", "_pool", "type", "listener", "passive", "_toggleListener", "remove", "removeAll", "forEach", "poolItem", "unbind", "skipPool", "methodName", "eType", "filter", "push", "eventOptions", "slide", "currZoomLevel", "center", "_updateAxis", "reset", "axis", "elSize", "data", "correctPan", "panOffset", "elementSize", "fit", "fill", "vFill", "secondary", "maxWidth", "maxHeight", "_getInitial", "_getSecondary", "_getMax", "zoomLevels", "slideData", "_parseZoomLevelOption", "optionPrefix", "optionName", "optionValue", "isActive", "currentResolution", "pan", "isFirstSlide", "opener", "isOpen", "contentLoader", "getContentBySlide", "container", "holderElement", "heavyAppended", "prevDisplayedWidth", "prevDisplayedHeight", "setIsActive", "activate", "deactivate", "append", "transformOrigin", "calculateSize", "load", "updateContentSize", "appendHeavy", "zoomAndPanToInitial", "applyCurrentZoomPan", "appendHeavyNearby", "mainScroll", "isShifted", "destroy", "hasSlide", "resize", "panTo", "force", "scaleMultiplier", "sizeChanged", "getPlaceholderElement", "_this$content$placeho", "placeholder", "zoomTo", "destZoomLevel", "centerPoint", "transitionDuration", "ignoreBounds", "isZoomable", "animations", "stopAllPan", "prevZoomLevel", "setZoomLevel", "calculateZoomToPanOffset", "finishTransition", "_setResolution", "startTransition", "isPan", "name", "getCurrentTransform", "onComplete", "easing", "toggleZoom", "zoomAnimationDuration", "point", "getViewportCenterPoint", "zoomFactor", "panX", "panY", "isPannable", "Boolean", "_applyZoomTransform", "currSlide", "zoom", "newResolution", "gestures", "startPan", "start", "stopAll", "change", "prevP1", "dragAxis", "closeOnVerticalDrag", "isMultitouch", "_setPanWithFriction", "bgOpacity", "_getVerticalDragRatio", "applyBgOpacity", "_panOrMoveMainScroll", "end", "velocity", "indexDiff", "currentSlideVisibilityRatio", "getCurrSlideX", "moveIndexBy", "correctZoomPan", "_finishPanGestureForAxis", "panPos", "restoreBgOpacity", "projectedPosition", "vDragRatio", "projectedVDragRatio", "close", "correctedPanPosition", "dampingRatio", "initialBgOpacity", "totalPanDist", "startSpring", "onUpdate", "pos", "animationProgressRatio", "floor", "delta", "newMainScrollX", "moveTo", "newPan", "allowPanToNext", "currSlideMainScrollX", "mainScrollShiftDiff", "isLeftToRight", "isRightToLeft", "_this$pswp$currSlide$", "_this$pswp$currSlide", "potentialPan", "customFriction", "_startPan", "_startZoomPoint", "_zoomPoint", "_wasOverFitZoomLevel", "_startZoomLevel", "startP1", "startP2", "minZoomLevel", "maxZoomLevel", "pinchToClose", "_calculatePanForZoomLevel", "ignoreGesture", "destinationZoomLevel", "currZoomLevelNeedsChange", "initialPan", "destinationPan", "panNeedsChange", "naturalFrequency", "now", "newZoomLevel", "click", "originalEvent", "targetClassList", "isImageClick", "contains", "isBackgroundClick", "_doClickOrTapAction", "tap", "doubleTap", "actionName", "_this$gestures$pswp$e", "actionFullName", "call", "clickToCloseNonZoomable", "prevP2", "_lastStartP1", "_intervalP1", "_numActivePoints", "_ongoingPointers", "_touchEventEnabled", "_pointerEventEnabled", "PointerEvent", "supportsTouch", "maxTouchPoints", "_intervalTime", "_velocityCalculated", "isDragging", "isZooming", "raf", "_tapTimer", "drag", "tapHandler", "events", "scrollWrap", "_onClick", "bind", "_bindEvents", "ontouchmove", "ontouchend", "pref", "down", "up", "cancel", "cancelEvent", "onPointerDown", "onPointerMove", "onPointerUp", "isMousePointer", "pointerType", "preventDefault", "mouseDetected", "_preventPointerEventBehaviour", "_updatePoints", "_clearTapTimer", "_calculateDragDirection", "_updateStartPoints", "Date", "_rafStopLoop", "_rafRenderLoop", "_finishDrag", "_updateVelocity", "_finishTap", "_updatePrevPoints", "requestAnimationFrame", "time", "_getVelocity", "indexOf", "tapDelay", "doubleTapAction", "setTimeout", "clearTimeout", "displacement", "cancelAnimationFrame", "pointerEvent", "pointerIndex", "findIndex", "ongoingPointer", "pointerId", "splice", "_convertEventPosToPoint", "length", "touchEvent", "touches", "diff", "axisToCheck", "pageX", "offset", "pageY", "identifier", "stopPropagation", "slideWidth", "_currPositionIndex", "_prevPositionIndex", "_containerShiftIndex", "itemHolders", "resizeSlides", "newSlideWidth", "spacing", "slideWidthChanged", "itemHolder", "resetPosition", "appendHolders", "i", "display", "canBeSwiped", "animate", "velocityX", "newIndex", "potentialIndex", "numSlides", "canLoop", "getLoopedIndex", "distance", "stopMainScroll", "destinationX", "updateCurrItem", "isMainScroll", "currDiff", "currDistance", "_this$itemHolders$", "positionDifference", "diffAbs", "tempHolder", "_itemHolder$slide", "shift", "setContent", "pop", "unshift", "updateLazy", "dragging", "newSlideIndexOffset", "Escape", "z", "ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", "Tab", "key", "isKeySupported", "_wasFocused", "trapFocus", "initialPointerPos", "_focusRoot", "_onFocusIn", "_onKeyDown", "lastActiveElement", "activeElement", "returnFocus", "focus", "keydownAction", "isForward", "keyCode", "escKey", "arrowKeys", "template", "props", "_props$prop", "onFinish", "_target", "_onComplete", "_finished", "_onTransitionEnd", "_helperTimeout", "_finalizeAnimation", "removeEventListener", "_dampingRatio", "_naturalFrequency", "_dampedFrequency", "easeFrame", "deltaPosition", "deltaTime", "coeff", "naturalDumpingPow", "E", "dumpedFCos", "cos", "dumpedFSin", "sin", "_raf", "easer", "prevTime", "animationLoop", "activeAnimations", "_start", "isSpring", "animation", "stop", "isPanRunning", "some", "_onWheel", "deltaX", "deltaY", "wheelToZoom", "deltaMode", "__pow", "clientX", "clientY", "_container", "elementHTML", "html", "isButton", "toLowerCase", "title", "ariaLabel", "ariaText", "innerHTML", "onInit", "onClick", "onclick", "appendTo", "topBar", "order", "indicatorElement", "isVisible", "delayTimeout", "toggleIndicatorClass", "setIndicatorVisibility", "visible", "updatePreloaderVisibility", "_pswp$currSlide", "isLoading", "_pswp$currSlide2", "preloaderDelay", "ui", "counterElement", "innerText", "indexIndicatorSep", "isRegistered", "uiElementsData", "items", "_lastUpdatedZoomLevel", "init", "sort", "a", "b", "uiElementData", "registerElement", "_pswp$element", "_onZoomPanUpdate", "elementData", "isClosing", "currZoomLevelDiff", "potentialZoomLevel", "imageClickAction", "details", "assign", "_listeners", "_filters", "addFilter", "fn", "priority", "_this$_filters$name", "_this$_filters$name2", "_this$pswp", "f1", "f2", "removeFilter", "args", "_this$_filters$name3", "apply", "_this$_listeners$name", "_this$pswp2", "off", "_this$pswp3", "_this$_listeners$name2", "imageSrc", "imgEl", "decoding", "alt", "src", "_this$element", "parentNode", "displayedImageWidth", "displayedImageHeight", "isAttached", "isDecoding", "state", "removePlaceholder", "keepPlaceholder", "isLazy", "reload", "usePlaceholder", "placeholderEl", "parentElement", "prepend", "placeholderSrc", "msrc", "isImageContent", "loadImage", "_this$data$src", "_this$data$alt", "imageElement", "updateSrcsetSizes", "srcset", "onLoaded", "onError", "setSlide", "displayError", "isError", "isInitialSizeUpdate", "image", "sizesWidth", "dataset", "largestUsedSize", "parseInt", "sizes", "String", "_this$instance$option", "_this$instance$option2", "errorMsgEl", "errorMsg", "supportsDecode", "finally", "appendImage", "limit", "preload", "_cachedItems", "loadSlideByIndex", "initialIndex", "getContentByIndex", "addToCache", "removeByIndex", "indexToRemove", "item", "find", "_this$options", "numItems", "dataSource", "_getGalleryDOMElements", "gallery", "_this$options2", "dataSourceItem", "_domElementToItemData", "galleryElement", "_this$options3", "_this$options4", "children", "childSelector", "linkEl", "pswpSrc", "href", "pswpSrcset", "pswpWidth", "pswpHeight", "pswpType", "thumbnailEl", "_thumbnailEl$getAttri", "currentSrc", "getAttribute", "pswpCropped", "cropped", "isClosed", "isOpening", "_duration", "_useAnimation", "_croppedZoom", "_animateRootOpacity", "_animateBgOpacity", "_placeholder", "_opacityElement", "_cropContainer1", "_cropContainer2", "_thumbBounds", "_prepareOpen", "open", "hideAnimationDuration", "maxWidthToAnimate", "_applyStartProps", "showAnimationDuration", "showHideAnimationType", "showHideOpacity", "_initialThumbBounds", "_animateZoom", "_options$showHideOpac", "bg", "opacity", "overflow", "_setClosedStateZoomPan", "willChange", "decoded", "isDelaying", "_initiate", "_this$pswp$element", "_this$pswp$element2", "setProperty", "_animateToOpenState", "_animateToClosedState", "_onAnimationComplete", "_animateTo", "containerOnePanX", "containerOnePanY", "containerTwoPanX", "containerTwoPanY", "animProps", "bgClickAction", "tapAction", "_prepareOptions", "_prevViewportSize", "isDestroying", "hasMouse", "_initialItemData", "keyboard", "_createMainStructure", "rootClasses", "mainClass", "scrollWheel", "isNaN", "updateSize", "pageYOffset", "_handlePageResize", "_updatePageScrollOffset", "goTo", "next", "prev", "_this$currSlide", "_this$currSlide2", "_itemHolder$slide2", "refreshSlideContent", "slideIndex", "_this$currSlide$index", "_this$currSlide3", "potentialHolderIndex", "_itemHolder$slide3", "holder", "matchMedia", "_this$element2", "test", "userAgent", "setScrollOffset", "body", "__spreadValues", "require_call_popup", "__commonJSMin", "$popupHandler", "$popupElement", "$popupCloser", "$callPopupBanner", "btnHandler", "el", "aboutSlider", "swiper", "certificates", "animateletter", "typitvs", "element", "h2", "text", "i", "len", "interval", "observerCallback", "entries", "observer", "entry", "mobileServiceSlider", "swiper", "homePageTabs", "tabTitleGroup", "tabContentGroup", "tabDecriptionGroup", "tabTitleGroupInner", "tabContentGroupInner", "tabTitle", "tabs", "tabContent", "radioButtons", "radioButtonContents", "titles", "contents", "title", "content", "insuranceSlider", "accordionItemHeaders", "accordionItemHeader", "accordionItemBody", "testimonial", "mobile", "close_mobile", "menuItemsHasChildren", "i", "event", "subMenu", "blogSlider", "swiper", "specialSlider", "swiper", "progressBarItems", "item", "index", "sectionHeadings", "scrollList", "counter", "heading", "index", "randomId", "contentHeadings", "listItem", "link", "serviceBox", "box", "otherBox", "doctorsSlider", "swiper", "mainVideo", "thumbnail", "videoSrc", "import_toastify_js", "successColor", "errorColor", "successText", "errorText", "successFormText", "successToast", "Toastify", "errorToast", "successFormToast", "contact", "form", "formData", "$", "res", "successFormToast", "err", "errorToast", "testimonial", "formComment", "formData", "$", "res", "successFormToast", "err", "errorToast", "mobileCategoryList", "options", "i", "speed", "allTicker", "i", "target", "new_html", "initDuration", "import_plyr", "players", "Plyr", "player", "t", "i", "h", "s", "e", "n", "o", "r", "l", "a", "d", "c", "u", "p", "v", "lightbox", "v", "import_call_popup"]
}
